# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 11:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/applications/geospatial-indexes.txt:3
# c65a1ca01c454de397a60429c818bcc9
msgid "Geospatial Indexes and Queries"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:7
# ef3ae24d956341e8a4c22b3368e8b384
msgid "MongoDB offers a number of indexes and query mechanisms to handle geospatial information. This section introduces MongoDB's geospatial features. For complete examples of geospatial queries in MongoDB, see :doc:`/administration/indexes-geo`."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:13
# dfa1ce7cc6e84b648da78d4c52489c7e
msgid "Surfaces"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:15
# 8c92203594d648808de05ef89c539746
msgid "Before storing your location data and writing queries, you must decide the type of surface to use to perform calculations. The type you choose affects how you store data, what type of index to build, and the syntax of your queries."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:20
# ab69ee02efa14c4a9810981aeccdf4bc
msgid "MongoDB offers two surface types:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:23
# d31b64bbf40d4ccfb7052791bb51c811
msgid "Spherical"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:25
# ba6ac77a8443463c863ef5b70dfb53dc
msgid "To calculate geometry over an Earth-like sphere, store your location data on a spherical surface and use :doc:`2dsphere </core/2dsphere>` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:29
# 59173cec45fd4507b6b264a00db4713c
msgid "Store your location data as GeoJSON objects with this coordinate-axis order: **longitude, latitude**. The coordinate reference system for GeoJSON uses the :term:`WGS84` datum."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:34
# 4bf123b32b12400ebad6fc6a968f4c1d
msgid "Flat"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:36
# 54a7a0814ea5480fafe3cd5ee1aee33f
msgid "To calculate distances on a Euclidean plane, store your location data as legacy coordinate pairs and use a :doc:`2d </core/2d>` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:42
# e006b2d3387943cd9bc5a18c24bfa9b2
msgid "Location Data"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:44
# b754f49e708d4b25b3d7973e2c48d7e7
msgid "If you choose spherical surface calculations, you store location data as either:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:48
# 66944fcb9b2845bdb92df1a6ff273cdf
msgid "GeoJSON Objects"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:50
# 9ed99b20ca9b44b798d2e623b34da967
msgid "Queries on :term:`GeoJSON` objects always calculate on a sphere. The default coordinate reference system for GeoJSON uses the :term:`WGS84` datum."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:54
# 8ef4eebb45734801a6bb08166fbc904e
msgid "Support for GeoJSON storage and queries is new in version 2.4. Prior to version 2.4, all geospatial data used coordinate pairs."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:59
# 28922abe7d8448e985223fdab6160095
msgid "MongoDB supports the following GeoJSON objects:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:61
# cffd61b7c71e4fb091f5ff72c61190b2
msgid "Point"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:63
# a706ef4dbb984e19b68d6926087daf77
msgid "LineString"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:65
# c4915fff23144ce2be3625eb9b520756
msgid "Polygon"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:68
# 6292446bfd824c8782edf3355cbce139
msgid "Legacy Coordinate Pairs"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:70
# ec881f1853424efbb824b1a1db82aab4
msgid "MongoDB supports spherical surface calculations on :term:`legacy coordinate pairs` using a ``2dsphere`` index by converting the data to the GeoJSON Point type."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:74
# ad2cc447002144748dc3d98b0c7c5922
msgid "If you choose flat surface calculations, and use a ``2d`` index you can store data only as :term:`legacy coordinate pairs`."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:78
# 34e3f9b19db34965963afa1aca04bbab
msgid "Query Operations"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:80
# 0f912356b066479d98eab656b5a15975
msgid "MongoDB's geospatial query operators let you query for:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:83
# a07eabb83cc94c069f4c6b4d02074d72
msgid "Inclusion"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:85
# 1b649f17ffc84f599227819f258e2099
msgid "MongoDB can query for locations contained entirely within a specified polygon. Inclusion queries use the :query:`$geoWithin` operator."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:89
# 3fb1aaf18e39440a901e72fe4554f4e0
msgid "Both ``2d`` and ``2dsphere`` indexes can support inclusion queries. MongoDB does not require an index for inclusion queries after 2.2.3; however, these indexes will improve query performance."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:94
# a0f062debad9492f9c1314eb48212a73
msgid "Intersection"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:96
# 46f44b7a0cf54802b469ce4ed9fe329a
msgid "MongoDB can query for locations that intersect with a specified geometry. These queries apply only to data on a spherical surface. These queries use the :query:`$geoIntersects` operator."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:100
# 911e2571721b4b3daff77cc99739e322
msgid "Only ``2dsphere`` indexes support intersection."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:103
# 25ed73094e01412a8c98b8efff4ea43f
msgid "Proximity"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:105
# d4ad73993a3d4f36b350221a2c4d1c67
msgid "MongoDB can query for the points nearest to another point. Proximity queries use the :query:`$near` operator. The :query:`$near` operator requires a ``2d`` or ``2dsphere`` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:112
# d3c927e0e5ad4690b23c812ae5727439
msgid "Geospatial Indexes"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:114
# 82fd17e2c1b1407d9a12f5226651f8e1
msgid "MongoDB provides the following geospatial index types to support the geospatial queries."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:118
# 5fb551175e534e888ef937c0463ef8f8
msgid "``2dsphere``"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:120
# 29e68b534d314e09b3134038a4ab01ff
msgid ":doc:`2dsphere </core/2dsphere>` indexes support:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:122
# f8d7983eb8ef4259a3ea19043ac4798e
msgid "Calculations on a sphere"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:124
# 40f2b077049b4141aa29a17756b66a50
msgid "GeoJSON objects and include backwards compatibility for legacy coordinate pairs."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:127
# fcec28bc70e04dab902e64703441c558
msgid "A compound index with scalar index fields (i.e. ascending or descending) as a prefix or suffix of the ``2dsphere`` index field"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:130
# 1dbd54191b8548b5be8c000c7f77a1c0
msgid "``2dsphere`` indexes are not available before version 2.4."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:133
# a4f69742fa494df891dde5a2fa9b9a7c
msgid ":doc:`/tutorial/query-a-2dsphere-index`"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:136
# 96efb49d31e34b8b9c9731f3ee0b1ed5
msgid "``2d``"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:138
# eacc2ea4366c4e82b637fecde76a6049
msgid ":doc:`2d </core/2d>` indexes support:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:140
# f304698dac3647dda56a7ab671657945
msgid "Calculations using flat geometry"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:142
# 1bdb3620268242c0a5064113c5068825
msgid "Legacy coordinate pairs (i.e., geospatial points on a flat coordinate system)"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:145
# c942cbac8a8c4b77b4f5f3a88db4a8c7
msgid "A compound index with only one additional field, as a suffix of the ``2d`` index field"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:148
# 44398f20bfff4f999ff21c41abfa1042
msgid ":doc:`/tutorial/query-a-2d-index`"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:151
# 383a47f6fc354329b3629d4d0d90ba6d
msgid "Geospatial Indexes and Sharding"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:153
# e3ce78961a46443d97cebc5e77da6a11
msgid "You *cannot* use a geospatial index as the :term:`shard key` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:155
# 736bb5085e7e4164985f179114e289b4
msgid "You can create and maintain a geospatial index on a sharded collection if using fields other than shard key."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:158
# e31595213cfb449a9adbe88ae08b2fbd
msgid "Queries using :query:`$near` are not supported for sharded collections. Use :dbcommand:`geoNear` instead. You also can query for geospatial data using :query:`$geoWithin`."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:163
# fdc06c9c1a244ada9e9d754e25b34022
msgid "Additional Resources"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:165
# 07db9a454f4543599f787e1c0b69f1d2
msgid "The following pages provide complete documentation for geospatial indexes and queries:"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:7
# 4d6fe67303564cae91e67823042c0ba0
msgid ":doc:`/core/2dsphere`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:4
# d4ee9c91ff4448418a99b66b00845ac1
msgid "A ``2dsphere`` index supports queries that calculate geometries on an earth-like sphere. The index supports data stored as both GeoJSON objects and as legacy coordinate pairs."
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:12
# cc072fab24364ae181080f228e65095f
msgid ":doc:`/core/2d`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:10
# 30e1145ba6004f94964c0644ba581cfd
msgid "The ``2d`` index supports data stored as legacy coordinate pairs and is intended for use in MongoDB 2.2 and earlier."
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:18
# ca51640efb6b404c8c2ac6f51b598626
msgid ":doc:`/core/geohaystack`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:15
# 58f14cfac9a14d31ae30d1035bd96755
msgid "A haystack index is a special index optimized to return results over small areas. For queries that use spherical geometry, a ``2dsphere`` index is a better option than a haystack index."
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:23
# 4f834350e24e4521a05ca43eed8a38a8
msgid ":doc:`/core/geospatial-indexes`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:21
# dfde6fa6c20d4b23b1dae105838dcd2d
msgid "Provides a more in-depth explanation of the internals of geospatial indexes. This material is not necessary for normal operations but may be useful for troubleshooting and for further understanding."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:172
# c5b5cec36e4445f5a151cf67ba9bc856
msgid ":ref:`geospatial-query-compatibility-chart`"
msgstr ""

