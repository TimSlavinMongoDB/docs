# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/applications/geospatial-indexes.txt:3
# b235e01a7084420f8edbaf7453be701f
msgid "Geospatial Indexes and Queries"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:7
# 4550c0c91f114d4385c7c767c494fdbc
msgid "MongoDB offers a number of indexes and query mechanisms to handle geospatial information. This section introduces MongoDB's geospatial features. For complete examples of geospatial queries in MongoDB, see :doc:`/administration/indexes-geo`."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:13
# c247f28e9c214814b54f2307d9e4d01f
msgid "Surfaces"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:15
# 1108f3c7226b443eb3a667161643af3a
msgid "Before storing your location data and writing queries, you must decide the type of surface to use to perform calculations. The type you choose affects how you store data, what type of index to build, and the syntax of your queries."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:20
# eae366fe92554c309a2aef2a8e6bbc54
msgid "MongoDB offers two surface types:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:23
# 039a533d33c24feebb38372e2af0e441
msgid "Spherical"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:25
# d4817a6e0e2d4963a199776bf2e4f80b
msgid "To calculate geometry over an Earth-like sphere, store your location data on a spherical surface and use :doc:`2dsphere </core/2dsphere>` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:29
# 1022305a55a8459f8ee0226f54e7fe0a
msgid "Store your location data as GeoJSON objects with this coordinate-axis order: **longitude, latitude**. The coordinate reference system for GeoJSON uses the :term:`WGS84` datum."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:34
# a5558587504f47d39ba7b00952e352c1
msgid "Flat"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:36
# 810bc675026649aaad093da350eee4c8
msgid "To calculate distances on a Euclidean plane, store your location data as legacy coordinate pairs and use a :doc:`2d </core/2d>` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:42
# 371b7b9693014690ab9570b18f06717d
msgid "Location Data"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:44
# 20b3f68876e24308b0a19ea81713f8e9
msgid "If you choose spherical surface calculations, you store location data as either:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:48
# 1290eee793ca4dde88af0bac34f643d4
msgid "GeoJSON Objects"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:50
# 8d7f7a8a69484ae49a9b35959760dc89
msgid "Queries on :term:`GeoJSON` objects always calculate on a sphere. The default coordinate reference system for GeoJSON uses the :term:`WGS84` datum."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:54
# 85372a7f21af43afbe1f3a0fdba00b3c
msgid "Support for GeoJSON storage and queries is new in version 2.4. Prior to version 2.4, all geospatial data used coordinate pairs."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:59
# ef4007722194419abfa1268f32e5e509
msgid "MongoDB supports the following GeoJSON objects:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:61
# 6f4892844ba24fcb9572fdc373fa002e
msgid "Point"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:63
# 6b0f28670b084b0f9618eff6315fa52b
msgid "LineString"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:65
# f717ec110596404a81d76f33f2d54c87
msgid "Polygon"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:68
# 936f758f78d844189bf317db99ed05a3
msgid "Legacy Coordinate Pairs"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:70
# e10389b45d5a48ed84f50ceb3fd1f697
msgid "MongoDB supports spherical surface calculations on :term:`legacy coordinate pairs` by converting the data to the GeoJSON Point type."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:73
# 4957ad5c157b43b5b56df36c00623f9a
msgid "If you choose flat surface calculations, you can store data only as :term:`legacy coordinate pairs`."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:77
# 7b4397245b84488eae86a479136bf7ed
msgid "Query Operations"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:79
# afb0a4b106094596b407983d45c6f594
msgid "MongoDB's geospatial query operators let you query for:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:82
# 54d48fed5d9c410fbc3efd7067fda0de
msgid "Inclusion"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:84
# b314cb30568941c9881607e2e421968c
msgid "MongoDB can query for locations contained entirely within a specified polygon. Inclusion queries use the :query:`$geoWithin` operator."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:89
# c85e50bd102140c0bcd743883df22f76
msgid "Intersection"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:91
# 1aeb5545eb224a199315a887b30e96f9
msgid "MongoDB can query for locations that intersect with a specified geometry. These queries apply only to data on a spherical surface. These queries use the :query:`$geoIntersects` operator."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:96
# 467ea4684a0441e39f8ce0b65593e96f
msgid "Proximity"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:98
# c55d69820175404791197a3dc3dd9228
msgid "MongoDB can query for the points nearest to another point. Proximity queries use the :query:`$near` operator. The :query:`$near` operator requires a ``2d`` or ``2dsphere`` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:105
# d6c85e3718884fa69153d4ed64f1e3a0
msgid "Geospatial Indexes"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:107
# 5bd6f3d95ba74a549d62667e6f90f6ef
msgid "MongoDB provides the following geospatial index types to support the geospatial queries."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:111
# 9af52db018384d579bf2f7ccf1369ebc
msgid "``2dsphere``"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:113
# 8c8b60c606404831b458b1e98a63d8df
msgid ":doc:`2dsphere </core/2dsphere>` indexes support:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:115
# 2cbeb57183514abd874df36c7e133ab5
msgid "Calculations on a sphere"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:117
# dbc3dc77d59b49aa8991f0da8ebc64f9
msgid "Both GeoJSON objects and legacy coordinate pairs"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:119
# a748a05f81674800a2df2dac0dcfdc19
msgid "A compound index with scalar index fields (i.e. ascending or descending) as a prefix or suffix of the ``2dsphere`` index field"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:122
# 2fa58ba0bac24f539b074325e5ffb195
msgid "``2dsphere`` indexes are not available before version 2.4."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:125
# 9c2798aafd8c43c6b89b577277849305
msgid ":doc:`/tutorial/query-a-2dsphere-index`"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:128
# 6cadd59496aa45a891a35aabdeb886dc
msgid "``2d``"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:130
# a31d5fff8e1640e08c468dfa360b760d
msgid ":doc:`2d </core/2d>` indexes support:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:132
# 2769cabdd16148fbad520c1cd93e4145
msgid "Calculations using flat geometry"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:134
# c0c20db5a8954cacbf6b04f9c0b7b6fd
msgid "Legacy coordinate pairs (i.e., geospatial points on a flat coordinate system)"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:137
# 349f2b6e0b574a148a3b13be7508c5f6
msgid "A compound index with only one additional field, as a suffix of the ``2d`` index field"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:140
# 8d16ef4722714c1c801390c4d48e63dd
msgid ":doc:`/tutorial/query-a-2d-index`"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:143
# 84dc52d1369e4e7a866fad5f5794a304
msgid "Geospatial Indexes and Sharding"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:145
# 053d7dfd503e4dc8b7ac02f6707d38a4
msgid "You *cannot* use a geospatial index as the :term:`shard key` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:147
# 6e0623818b154a7f8d896ca79ac151b7
msgid "You can create and maintain a geospatial index on a sharded collection if using different fields as the shard key."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:150
# 8bdeddf8911040529fbe5979c77b2941
msgid "Queries using :query:`$near` are not supported for sharded collections. Use :dbcommand:`geoNear` instead. You also can query for geospatial data using :query:`$geoWithin`."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:155
# 33638c52968e471899ce379d0b00951e
msgid "Additional Resources"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:157
# 9043daaf5b5644028f92ffb64709577a
msgid "The following pages provide complete documentation for geospatial indexes and queries:"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:7
# 709cdcdbd2c24d95ab85be46e0ccc6d9
msgid ":doc:`/core/2dsphere`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:4
# fdd99188ec544eb086316b64d86e5cfb
msgid "A ``2dsphere`` index supports queries that calculate geometries on an earth-like sphere. The index supports data stored as both GeoJSON objects and as legacy coordinate pairs."
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:12
# debce3ebfe0846b3b61b544c4b7627e0
msgid ":doc:`/core/2d`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:10
# 9e49c257a8754c849db40a21c191a5df
msgid "The ``2d`` index supports data stored as legacy coordinate pairs and is intended for use in MongoDB 2.2 and earlier."
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:18
# b6170d8202bc466b8c6b5997f64d4f08
msgid ":doc:`/core/geohaystack`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:15
# 6184bf136e6e4cf3b6f5d46f7555b709
msgid "A haystack index is a special index optimized to return results over small areas. For queries that use spherical geometry, a ``2dsphere`` index is a better option than a haystack index."
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:23
# d188ca407f2d48dfa5a46f2adf32d05d
msgid ":doc:`/core/geospatial-indexes`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:21
# ece770d4ad8647f8902e3a96401d982d
msgid "Provides a more in-depth explanation of the internals of geospatial indexes. This material is not necessary for normal operations but may be useful for troubleshooting and for further understanding."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:164
# 4f11fefd647143a4892090b2d239bd77
msgid ":ref:`geospatial-query-compatibility-chart`"
msgstr ""

