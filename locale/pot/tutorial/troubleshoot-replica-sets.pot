# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/troubleshoot-replica-sets.txt:3
# 7ac5d870629f4404ac29de809ab288e7
msgid "Troubleshoot Replica Sets"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:7
# cc6c1c90a809487aa8656f3eb46ed361
msgid "This section describes common strategies for troubleshooting :term:`replica set` deployments."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:13
# e21afce341244de8b7f7b82636dde429
msgid "Check Replica Set Status"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:15
# 32596c897c9a4ee485d8cad072f884d6
msgid "To display the current state of the replica set and current state of each member, run the :method:`rs.status()` method in a :program:`mongo` shell connected to the replica set's :term:`primary`. For descriptions of the information displayed by :method:`rs.status()`, see :doc:`/reference/command/replSetGetStatus`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:23
# a92f8fce66d44ea3ad74fed16b376035
msgid "The :method:`rs.status()` method is a wrapper that runs the :dbcommand:`replSetGetStatus` database command."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:29
# 011a389391fa48aabe11e7b4fb3b449e
msgid "Check the Replication Lag"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:31
# db895939eced4a00ae29576450de0151
msgid "Replication lag is a delay between an operation on the :term:`primary` and the application of that operation from the :term:`oplog` to the :term:`secondary`. Replication lag can be a significant issue and can seriously affect MongoDB :term:`replica set` deployments. Excessive replication lag makes \"lagged\" members ineligible to quickly become primary and increases the possibility that distributed read operations will be inconsistent."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:39
# ec6d88203034402a85817df6b1c08eb6
msgid "To check the current length of replication lag:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:41
# 99028ee71ae64aa6b4b9e35c82ebdb0c
msgid "In a :program:`mongo` shell connected to the primary, call the :method:`rs.printSlaveReplicationInfo()` method."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:44
# 83d6c69b1bac41bb8897ab81cf1416ea
msgid "The returned document displays the ``syncedTo`` value for each member, which shows you when each member last read from the oplog, as shown in the following example:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:59
# bc028100ca524283b79702f18747e28d
msgid "The :method:`rs.status()` method is a wrapper around the :dbcommand:`replSetGetStatus` database command."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:62
# 2813313418574cc0bf6253024e462ebb
msgid "Monitor the rate of replication by watching the oplog time in the \"replica\" graph in the `MongoDB Management Service`_. For more information see the `documentation for MMS`_."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:69
# 534bd90b8fca453ea05eb988df822494
msgid "Possible causes of replication lag include:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:71
# 67845cda7fa2490dad7f780729fa398e
msgid "**Network Latency**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:73
# 67b965af092749c6a7d3aae043b63179
msgid "Check the network routes between the members of your set to ensure that there is no packet loss or network routing issue."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:76
# 15377731381a43a18383ddd51474acc7
msgid "Use tools including ``ping`` to test latency between set members and ``traceroute`` to expose the routing of packets network endpoints."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:80
# 3aa35cbcdef94f2c82f5446ffdbc74d5
msgid "**Disk Throughput**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:82
# df39b953c28d43beaa6dce0af85f0f6d
msgid "If the file system and disk device on the secondary is unable to flush data to disk as quickly as the primary, then the secondary will have difficulty keeping state. Disk-related issues are incredibly prevalent on multi-tenant systems, including virtualized instances, and can be transient if the system accesses disk devices over an IP network (as is the case with Amazon's EBS system.)"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:90
# 5ebe335cb9c24e9f869c2c064cafd83a
msgid "Use system-level tools to assess disk status, including ``iostat`` or ``vmstat``."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:93
# a70a4af1141f4ba6a3e820d2f33b05e3
msgid "**Concurrency**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:95
# b35602fa960f4d0e83cb98e554612eb9
msgid "In some cases, long-running operations on the primary can block replication on secondaries. For best results, configure :ref:`write concern <write-concern>` to require confirmation of replication to secondaries, as described in :ref:`replica set write concern <replica-set-write-concern>`. This prevents write operations from returning if replication cannot keep up with the write load."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:102
# e2b38a6367d041b5973f181d19cb8b67
msgid "Use the :term:`database profiler` to see if there are slow queries or long-running operations that correspond to the incidences of lag."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:105
# cf298b9afabf471db172fe8dc89b83bd
msgid "**Appropriate Write Concern**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:107
# 7fa1d9960e424e8f804ec12bc5a8efc5
msgid "If you are performing a large data ingestion or bulk load operation that requires a large number of writes to the primary, particularly with :ref:`unacknowledged write concern <write-concern-unacknowledged>`, the secondaries will not be able to read the oplog fast enough to keep up with changes."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:113
# e4f13492614c4acd9aa7c4d9e0e4f80f
msgid "To prevent this, require :ref:`write acknowledgment or journaled write concern <write-operations-write-concern>` after every 100, 1,000, or an another interval to provide an opportunity for secondaries to catch up with the primary."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:118
# e616d1783ec84232814f812d90b726c3
msgid "For more information see:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:120
# e4208edda6414df18ea2db3352b852c3
msgid ":ref:`Replica Acknowledge Write Concern <replica-set-write-concern>`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:121
# 864c304992fc4a568109056bc61dc5e7
msgid ":ref:`Replica Set Write Concern <write-operations-replica-sets>`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:122
# 7b358f34fc464d65a8a45b3f2224d2cd
msgid ":ref:`replica-set-oplog-sizing`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:127
# fa2d5dc7ccc347cfabf264bb836de0a1
msgid "Test Connections Between all Members"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:129
# 389dc3191a6c4f0d82a7a1d8b8a358ef
msgid "All members of a :term:`replica set` must be able to connect to every other member of the set to support replication. Always verify connections in both \"directions.\"  Networking topologies and firewall configurations prevent normal and required connectivity, which can block replication."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:135
# 6614ec13eef94ceb97b9c5c2862a52b6
msgid "Consider the following example of a bidirectional test of networking:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:0
#: ../source/tutorial/troubleshoot-replica-sets.txt:0
# 554554dd182f49c699ff3e25131864bf
# 2fcff4eceea947328aeb1e581e826575
msgid "Example"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:140
# 1fb824117f70424883731447c951394c
msgid "``m1.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:141
# c9e4743f5e9e47b5ac50767b72f47c0c
msgid "``m2.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:142
# d0fa3c8623274101b0ab3147bc149591
msgid "``m3.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:144
# a6c2ca6fcd5641ffa4b058afa2356cf2
msgid "Test the connection from ``m1.example.net`` to the other hosts with the following operation set ``m1.example.net``:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:153
# 1be61855596e4410abe0fbdd8ed3dbf8
msgid "Test the connection from ``m2.example.net`` to the other two hosts with the following operation set from ``m2.example.net``, as in:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:163
# 415dafe188be46a4a3bae9c55ef8c354
msgid "You have now tested the connection between ``m2.example.net`` and ``m1.example.net`` in both directions."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:166
# 1cdd8e64ba6f4635a9f2188ec497387c
msgid "Test the connection from ``m3.example.net`` to the other two hosts with the following operation set from the ``m3.example.net`` host, as in:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:176
# c38d37b2eef74879853412cc0a74dc58
msgid "If any connection, in any direction fails, check your networking and firewall configuration and reconfigure your environment to allow these connections."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:181
# 7bf81f9b78d54f8fb4820c2ba72f7fe1
msgid "Socket Exceptions when Rebooting More than One Secondary"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:183
# de89560658e1459ea612b75069c00ea7
msgid "When you reboot members of a replica set, ensure that the set is able to elect a primary during the maintenance. This means ensuring that a majority of the set's ':data:`~local.system.replset.members[n].votes` are available."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:188
# 59ef5a4ccdc74b69b502da0d36b8cfaa
msgid "When a set's active members can no longer form a majority, the set's :term:`primary` steps down and becomes a :term:`secondary`. The former primary closes all open connections to client applications. Clients attempting to write to the former primary receive socket exceptions and *Connection reset* errors until the set can elect a primary."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:201
# 321306bdb4e14cbe90277a14121192d5
msgid "For more information on votes, see :doc:`/core/replica-set-elections`. For related information on connection errors, see :ref:`faq-keepalive`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:207
# 07f2d8f61b9942c8878fe223d6685d44
msgid "Check the Size of the Oplog"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:209
# 775d41129c99443f8ae6cf97d734e4c2
msgid "A larger :term:`oplog` can give a replica set a greater tolerance for lag, and make the set more resilient."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:212
# e9112223131b4e14a8c7337b75a0228e
msgid "To check the size of the oplog for a given :term:`replica set` member, connect to the member in a :program:`mongo` shell and run the :method:`rs.printReplicationInfo()` method."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:216
# 3bfd06705e9247008a4f9323086d326a
msgid "The output displays the size of the oplog and the date ranges of the operations contained in the oplog. In the following example, the oplog is about 10MB and is able to fit about 26 hours (94400 seconds) of operations:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:229
# 8ac14af54f094f47a2c3b37298828830
msgid "The oplog should be long enough to hold all transactions for the longest downtime you expect on a secondary. At a minimum, an oplog should be able to hold minimum 24 hours of operations; however, many users prefer to have 72 hours or even a week's work of operations."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:234
# b081427aa3d24259b3baca085026c1bb
msgid "For more information on how oplog size affects operations, see:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:236
# 9860916575c44eedb5485c6886ff5484
msgid ":ref:`replica-set-oplog-sizing`,"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:237
# 1efee8a6f7bd4eeb9048601af7965cf8
msgid ":ref:`replica-set-delayed-members`, and"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:238
# e3e21cbc32a246a1b5da5d36ccfc32e1
msgid ":ref:`replica-set-replication-lag`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:240
# 8d715c64f06a463e8f29457b4662dfa6
msgid "You normally want the oplog to be the same size on all members. If you resize the oplog, resize it on all members."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:243
# 39422e77cdac4ce59547e2fba3621879
msgid "To change oplog size, see the :doc:`/tutorial/change-oplog-size` tutorial."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:248
# 0f71beaa331449dfb32ec0b3358bc785
msgid "Oplog Entry Timestamp Error"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:252
# 65d050b2871a4d3d91792b94c4f4b92f
msgid "Consider the following error in :program:`mongod` output and logs:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:259
# b5833b35580a4befb051ffc6ca746502
msgid "Often, an incorrectly typed value in the ``ts`` field in the last :term:`oplog` entry causes this error. The correct data type is Timestamp."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:263
# 3e8541d375004b71ba52ac38362ebed9
msgid "Check the type of the ``ts`` value using the following two queries against the oplog collection:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:272
# fcde6da1fdc94c70bc4e2b940a6f8a42
msgid "The first query returns the last document in the oplog, while the second returns the last document in the oplog where the ``ts`` value is a Timestamp. The :query:`$type` operator allows you to select :term:`BSON type <BSON types>` 17, is the Timestamp data type."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:277
# d4583d384c244496bef5583fc46149e1
msgid "If the queries don't return the same document, then the last document in the oplog has the wrong data type in the ``ts`` field."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:282
# 77b24eecafa045f7952e22451f7b6bca
msgid "If the first query returns this as the last oplog entry:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:292
# 68f82ba406994483adafbc1edd19223a
msgid "And the second query returns this as the last entry where ``ts`` has the ``Timestamp`` type:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:303
# 002bdc6cacd94b78965b82867fed32d0
msgid "Then the value for the ``ts`` field in the last oplog entry is of the wrong data type."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:306
# 7cb8b8cd35b04b9eaa705275ddf60314
msgid "To set the proper type for this value and resolve this issue, use an update operation that resembles the following:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:314
# 3210a69bc0c2497f8dacd3dfb20e8eea
msgid "Modify the timestamp values as needed based on your oplog entry. This operation may take some period to complete because the update must scan and pull the entire oplog into memory."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:319
# edc6ac48f01243189a62e5a3d3b9ffab
msgid "Duplicate Key Error on ``local.slaves``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:321
# 36fc0d3912824461aa4625b45ab9410c
msgid "The *duplicate key on local.slaves* error, occurs when a :term:`secondary` or :term:`slave` changes its hostname and the :term:`primary` or :term:`master` tries to update its ``local.slaves`` collection with the new name. The update fails because it contains the same ``_id`` value as the document containing the previous hostname. The error itself will resemble the following."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:332
# 037fd8e24695409c903bbd5c222c0687
msgid "This is a benign error and does not affect replication operations on the :term:`secondary` or :term:`slave`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:335
# a526f41ea1044033a116aa89b0bc37dc
msgid "To prevent the error from appearing, drop the ``local.slaves`` collection from the :term:`primary` or :term:`master`, with the following sequence of operations in the :program:`mongo` shell:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:344
# 7b8826cb628e4dfbb04341e5ca3faa69
msgid "The next time a :term:`secondary` or :term:`slave` polls the :term:`primary` or :term:`master`, the :term:`primary` or :term:`master` recreates the ``local.slaves`` collection."
msgstr ""

