# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/resync-replica-set-member.txt:3
# 4f86e663cf044032a4af9423e9340d43
msgid "Resync a Member of a Replica Set"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:7
# f23c31ee26254954a7412a1470944039
msgid "A :term:`replica set` member becomes \"stale\" when its replication process falls so far behind that the :term:`primary` overwrites oplog entries the member has not yet replicated. The member cannot catch up and becomes \"stale.\" When this occurs, you must completely resynchronize the member by removing its data and performing an :ref:`initial sync <replica-set-initial-sync>`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:14
# cb353fd2538b4f24a1411250747a1787
msgid "This tutorial addressed both resyncing a stale member and to creating a new member using seed data from another member. When syncing a member, choose a time when the system has the bandwidth to move a large amount of data. Schedule the synchronization during a time of low usage or during a maintenance window."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:20
# 07093fcf3a3f40f0bf2cf9e467c5b036
msgid "MongoDB provides two options for performing an initial sync:"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:22
# 542057df28154ed09d87e9b38db7e60c
msgid "Restart the :program:`mongod` with an empty data directory and let MongoDB's normal initial syncing feature restore the data. This is the more simple option but may take longer to replace the data."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:26
# 1a7574b8bf564834b67e8c396a6b8f65
msgid "See :ref:`replica-set-auto-resync-stale-member`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:28
# d943bdac6db4414db5a9dc5940310dbb
msgid "Restart the machine with a copy of a recent data directory from another member in the replica set. This procedure can replace the data more quickly but requires more manual steps."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:32
# f8253ed0004947f0965b92ba5279778c
msgid "See :ref:`replica-set-resync-by-copying`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:39
# 3546a6cf6ecf4af9855a07f1587b4c78
msgid "Procedures"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:42
# 162d73d8527a434ebd770c4d55a78a83
msgid "Automatically Sync a Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:44
# f3071fff59f74d01b1add0e7661972aa
msgid "During initial sync, :program:`mongod` will remove the content of the :setting:`dbpath`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:47
# 0900644e8b9048139b2caad8357d33c2
msgid "This procedure relies on MongoDB's regular process for :ref:`initial sync <replica-set-initial-sync>`. This will store the current data on the member. For an overview of MongoDB initial sync process, see the :ref:`replica-set-syncing` section."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:52
# 809bcc94a2ea4ce5a0726cb5302f3926
msgid "If the instance has no data, you can simply follow the :doc:`/tutorial/expand-replica-set` or :doc:`/tutorial/replace-replica-set-member` procedure to add a new member to a replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:57
# 83d435201c9c46b6be8dd72c9a994116
msgid "You can also force a :program:`mongod` that is already a member of the set to to perform an initial sync by restarting the instance without the content of the :setting:`dbpath` as follows:"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:61
# 0268a5f808e14c798a1608b46cb2dd31
msgid "Stop the member's :program:`mongod` instance. To ensure a clean shutdown, use the :method:`db.shutdownServer()` method from the :program:`mongo` shell or on Linux systems, the :option:`mongod --shutdown` option."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:66
# 57045a84a7d446719d2934a3bfa97709
msgid "Delete all data and sub-directories from the member's data directory. By removing the data :setting:`dbpath`, MongoDB will perform a complete resync. Consider making a backup first."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:70
# 37613f9ec9974ea8afdf427cb3f1f3bd
msgid "At this point, the :program:`mongod` will perform an initial sync. The length of the initial sync process depends on the size of the database and network connection between members of the replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:75
# d8e86a405ce64b6fb10adcd77a129c8d
msgid "Initial sync operations can impact the other members of the set and create additional traffic to the primary and can only occur if another member of the set is accessible and up to date."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:83
# cb002dd46c384aa690965344e0236f73
msgid "Sync by Copying Data Files from Another Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:85
# 1fa0b4539d1547cf8e5e0a2314a76994
msgid "This approach \"seeds\" a new or stale member using the data files from an existing member of the replica set. The data files **must** be sufficiently recent to allow the new member to catch up with the :term:`oplog`. Otherwise the member would need to perform an initial sync."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:92
# eaf308289ecd4c2caf06763934aea76d
msgid "Copy the Data Files"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:94
# eae5ed3b469449269caee72a36169898
msgid "You can capture the data files as either a snapshot or a direct copy. However, in most cases you cannot copy data files from a running :program:`mongod` instance to another because the data files will change during the file copy operation."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:99
# 170f69f7eb4f4ef3b83999ca69445a44
msgid "If copying data files, you must copy the content of the ``local`` database."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:102
# cc8c88486ecb4039bc860f603435e113
msgid "You *cannot* use a :program:`mongodump` backup to for the data files, **only a snapshot backup**. For approaches to capture a consistent snapshot of a running :program:`mongod` instance, see the :doc:`/core/backups` documentation."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:108
# 70cc4dd44f8d4e05b06c78ef273d1eca
msgid "Sync the Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:110
# 49cd115aad4e456fa2e514487c597f47
msgid "After you have copied the data files from the \"seed\" source, start the :program:`mongod` instance and allow it to apply all operations from the oplog until it reflects the current state of the replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:34
#: ../source/tutorial/resync-replica-set-member.txt:35
#: ../source/tutorial/resync-replica-set-member.txt:79
# e9da5ebfb15d4cfaaab8eaa5fd692f87
# bde9b065bebf4a9ba1c02f9c13378110
# 72c513fd0ea043fe879b3ecc451111cc
msgid "replica set"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:34
# e9da5ebfb15d4cfaaab8eaa5fd692f87
msgid "sync"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:35
#: ../source/tutorial/resync-replica-set-member.txt:79
# bde9b065bebf4a9ba1c02f9c13378110
# 72c513fd0ea043fe879b3ecc451111cc
msgid "resync"
msgstr ""

