# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:3
# a3a9046a39844fa69dcaa975840f7418
msgid "Backup and Restore with Filesystem Snapshots"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:7
# 4e0e3db28ce3489f876149ea888d2a4b
msgid "This document describes a procedure for creating backups of MongoDB systems using system-level tools, such as :term:`LVM` or storage appliance, as well as the corresponding restoration strategies."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:11
# 4cbfe514a52d4e79971939cf6ea6de2a
msgid "These filesystem snapshots, or \"block-level\" backup methods use system level tools to create copies of the device that holds MongoDB's data files. These methods complete quickly and work reliably, but require more system configuration outside of MongoDB."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:16
# 20a394a5b3ea43b2b414ccbbd777851e
msgid ":doc:`/core/backups` and :doc:`/tutorial/backup-and-restore-with-binary-database-dumps`."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:22
# b229910535e342b6a9e0f23e7c7c43a7
msgid "Snapshots Overview"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:24
# 6c818bceb2ac4cb3a343b3d2b219a5e1
msgid "Snapshots work by creating pointers between the live data and a special snapshot volume. These pointers are theoretically equivalent to \"hard links.\" As the working data diverges from the snapshot, the snapshot process uses a copy-on-write strategy. As a result the snapshot only stores modified data."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:30
# 21390e81adcb40cbbf5c996affdd7c38
msgid "After making the snapshot, you mount the snapshot image on your file system and copy data from the snapshot. The resulting backup contains a full copy of all data."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:34
# 560de9258a504f16b5b0b90d8759abba
msgid "Snapshots have the following limitations:"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:36
# 70bac78552cc45d48ba50b677144cf9d
msgid "The database must be valid when the snapshot takes place. This means that all writes accepted by the database need to be fully written to disk: either to the :term:`journal` or to data files."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:41
# 9ae19689d0ee45fe804e1914fbf86e7f
msgid "If all writes are not on disk when the backup occurs, the backup will not reflect these changes. If writes are *in progress* when the backup occurs, the data files will reflect an inconsistent state. With :term:`journaling <journal>` all data-file states resulting from in-progress writes are recoverable; without journaling you must flush all pending writes to disk before running the backup operation and must ensure that no writes occur during the entire backup procedure."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:50
# 6a1f185dfe144a7ba14f6c243952c002
msgid "If you do use journaling, the journal **must** reside on the same volume as the data."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:53
# 9da7f7d58dd6454abac29f1290a841b0
msgid "Snapshots create an image of an entire disk image. Unless you need to back up your entire system, consider isolating your MongoDB data files, journal (if applicable), and configuration on one logical disk that doesn't contain any other data."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:58
# 7be229aeeca043e593d64154491f4fb4
msgid "Alternately, store all MongoDB data files on a dedicated device so that you can make backups without duplicating extraneous data."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:61
# aa0e76f5c74241a692c2f42e9664480a
msgid "Ensure that you copy data from snapshots and onto other systems to ensure that data is safe from site failures."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:64
# a23a16d6c62b4c31b13a517a03c6ff9c
msgid "Although different snapshots methods provide different capability, the LVM method outlined below does not provide any capacity for capturing incremental backups."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:71
# 0a1a28cdd64c4298a80f4d1e9f989cf4
msgid "Snapshots With Journaling"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:73
# a9049c0dde1d484fa15efa9738bcb2a2
msgid "If your :program:`mongod` instance has journaling enabled, then you can use any kind of file system or volume/block level snapshot tool to create backups."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:77
# 6bd1f6b3d72141ff9b169faf86191ef6
msgid "If you manage your own infrastructure on a Linux-based system, configure your system with :term:`LVM` to provide your disk packages and provide snapshot capability. You can also use LVM-based setups *within* a cloud/virtualized environment."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:84
# a119ba2ac4214ef7bc37bfeefe1c6ebd
msgid "Running :term:`LVM` provides additional flexibility and enables the possibility of using snapshots to back up MongoDB."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:88
# ce3ea3cc4b534e6c9595fe3240ad5196
msgid "Snapshots with Amazon EBS in a RAID 10 Configuration"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:90
# 796ae58fe9074ebcb7373cd315439f4c
msgid "If your deployment depends on Amazon’s Elastic Block Storage (EBS) with RAID configured within your instance, it is impossible to get a consistent state across all disks using the platform’s snapshot tool. As an alternative, you can do one of the following:"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:95
# 44b9bc53a12e42cf8301382caeaca026
msgid "Flush all writes to disk and create a write lock to ensure consistent state during the backup process."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:98
# f186cd67f0c349dfaf06d2baba54e732
msgid "If you choose this option see :ref:`backup-without-journaling`."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:100
# 421b935c4d724c2d9922a5b559546576
msgid "Configure :term:`LVM` to run and hold your MongoDB data files on top of the RAID within your system."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:103
# 7a78896e3dd14c2bb21ebdbcb8b75e08
msgid "If you choose this option, perform the LVM backup operation described in :ref:`lvm-backup-operation`."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:109
# 8861ab3e7cba48b59de8fd234b442fc9
msgid "Backup and Restore Using LVM on a Linux System"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:111
# 95fb2561502e42b5b0e7c149cfeee73e
msgid "This section provides an overview of a simple backup process using :term:`LVM` on a Linux system. While the tools, commands, and paths may be (slightly) different on your system the following steps provide a high level overview of the backup operation."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:118
# 2d19446f81884900a3a8215a8ca86bf9
msgid "Only use the following procedure as a guideline for a backup system and infrastructure. Production backup systems must consider a number of application specific requirements and factors unique to specific environments."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:126
# 065b2e4d4647450d9dc2a55f835233a0
msgid "Create a Snapshot"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:128
# c47474b369b74c70987412d408bade5f
msgid "To create a snapshot with :term:`LVM`, issue a command as root in the following format:"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:135
# 7b1c19fc3e7449eeb92b1da027cbfd61
msgid "This command creates an :term:`LVM` snapshot (with the ``--snapshot`` option) named ``mdb-snap01`` of the ``mongodb`` volume in the ``vg0`` volume group."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:139
# 7d6b75d231814acdba615d3e1325f6f8
msgid "This example creates a snapshot named ``mdb-snap01`` located at ``/dev/vg0/mdb-snap01``. The location and paths to your systems volume groups and devices may vary slightly depending on your operating system's :term:`LVM` configuration."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:144
# d80f36fce41c46fe97d46db2ae8b0ee3
msgid "The snapshot has a cap of at 100 megabytes, because of the parameter ``--size 100M``. This size does not reflect the total amount of the data on the disk, but rather the quantity of differences between the current state of ``/dev/vg0/mongodb`` and the creation of the snapshot (i.e. ``/dev/vg0/mdb-snap01``.)"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:152
# b8f110784c04461ab70624fc3fe16ec7
msgid "Ensure that you create snapshots with enough space to account for data growth, particularly for the period of time that it takes to copy data out of the system or to a temporary image."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:156
# 93e27551f73b4a3a9928bb0f3835cb57
msgid "If your snapshot runs out of space, the snapshot image becomes unusable. Discard this logical volume and create another."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:159
# b717ee514cb04c38b53b6b72c17c86d7
msgid "The snapshot will exist when the command returns. You can restore directly from the snapshot at any time or by creating a new logical volume and restoring from this snapshot to the alternate image."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:163
# ea86f3c2bf024c6c8eaaac40f54951b6
msgid "While snapshots are great for creating high quality backups very quickly, they are not ideal as a format for storing backup data. Snapshots typically depend and reside on the same storage infrastructure as the original disk images. Therefore, it's crucial that you archive these snapshots and store them elsewhere."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:170
# 7d46ce64caa1489d882dfd27cb2db7a6
msgid "Archive a Snapshot"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:172
# 979ecfb0126144648d5445f3acea67a3
msgid "After creating a snapshot, mount the snapshot and move the data to separate storage. Your system might try to compress the backup images as you move the offline. The following procedure fully archives the data from the snapshot:"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:182
# 1e8cc0017d1044b28741591dcd956a2c
msgid "The above command sequence does the following:"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:184
# 5fd83381dfce45de877283ac03a1cf7f
msgid "Ensures that the ``/dev/vg0/mdb-snap01`` device is not mounted."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:186
# 02a54e02cf1242b889aa6a2bda2d7b10
msgid "Performs a block level copy of the entire snapshot image using the ``dd`` command and compresses the result in a gzipped file in the current working directory."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:192
# 70548000cdbe43e88eeba6918f316e7a
msgid "This command will create a large ``gz`` file in your current working directory. Make sure that you run this command in a file system that has enough free space."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:199
# 7ef01fadeb8c442c83388de63f63aa14
msgid "Restore a Snapshot"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:201
# d8fc88e62db4451c931ec5c096da823f
msgid "To restore a snapshot created with the above method, issue the following sequence of commands:"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:210
# af7a66285a9b475183980c29f43ef8c6
msgid "The above sequence does the following:"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:212
# 5547b9e4d63e439aa94558f4bfa62ffe
msgid "Creates a new logical volume named ``mdb-new``, in the ``/dev/vg0`` volume group. The path to the new device will be ``/dev/vg0/mdb-new``."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:217
# 366a93e7c8a145fc8641df151c999d4f
msgid "This volume will have a maximum size of 1 gigabyte. The original file system must have had a total size of 1 gigabyte or smaller, or else the restoration will fail."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:221
# 8a176d37af36456481a4a6ab4da9cac6
msgid "Change ``1G`` to your desired volume size."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:223
# 4ac8bd6dcdf84c25b2a098f64922e0c3
msgid "Uncompresses and unarchives the ``mdb-snap01.gz`` into the ``mdb-new`` disk image."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:226
# c0019f15f49f43e2bd26387ced196954
msgid "Mounts the ``mdb-new`` disk image to the ``/srv/mongodb`` directory. Modify the mount point to correspond to your MongoDB data file location, or other location as needed."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:232
# 49234d3613df45199523706cd881888d
msgid "The restored snapshot will have a stale ``mongod.lock`` file. If you do not remove this file from the snapshot, and MongoDB may assume that the stale lock file indicates an unclean shutdown. If you're running with :setting:`journal` enabled, and you *do not* use :method:`db.fsyncLock()`, you do not need to remove the ``mongod.lock`` file. If you use :method:`db.fsyncLock()` you will need to remove the lock."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:243
# 81f111ccaaf344dda851dbf68847dbdf
msgid "Restore Directly from a Snapshot"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:245
# 85b62453bc7c4f1cabed177bf212c462
msgid "To restore a backup without writing to a compressed ``gz`` file, use the following sequence of commands:"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:256
# e411fcadfb7041ac91788f58674f244f
msgid "Remote Backup Storage"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:258
# a5d9f2ff33854e0da6de06723f29a8b4
msgid "You can implement off-system backups using the :ref:`combined process <backup-restore-from-snapshot>` and SSH."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:261
# abefcb37fb0d4db2bc54fb80f2b82bf2
msgid "This sequence is identical to procedures explained above, except that it archives and compresses the backup on a remote system using SSH."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:264
# 5a36b3ea5bea4b39b238cd3c739347d6
msgid "Consider the following procedure:"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:277
# 18552a8003f14853be1abd5375ae86ae
msgid "Create Backups on Instances that do not have Journaling Enabled"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:279
# ebcbd18c4132487887f747be5f7a4214
msgid "If your :program:`mongod` instance does not run with journaling enabled, or if your journal is on a separate volume, obtaining a functional backup of a consistent state is more complicated. As described in this section, you must flush all writes to disk and lock the database to prevent writes during the backup process. If you have a :term:`replica set` configuration, then for your backup use a :term:`secondary` which is not receiving reads (i.e. :term:`hidden member`)."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:289
# ac2037ec6849433789bb031525c624cc
msgid "To flush writes to disk and to \"lock\" the database (to prevent further writes), issue the :method:`db.fsyncLock()` method in the :program:`mongo` shell:"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:297
# e7f61bcb666a41a180daa3ea0c811864
msgid "Perform the backup operation described in :ref:`lvm-backup-operation`."
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:299
# eefad88a066a4f28b7e03389664a1d02
msgid "To unlock the database after the snapshot has completed, use the following command in the :program:`mongo` shell:"
msgstr ""

#: ../source/tutorial/backup-and-restore-with-filesystem-snapshots.txt:308
# 148e1651b5c14ec8a32dec5e9c8b81c3
msgid "MongoDB 2.0 added :method:`db.fsyncLock()` and :method:`db.fsyncUnlock()` helpers to the :program:`mongo` shell.  Prior to this version, use the :dbcommand:`fsync` command with the ``lock`` option, as follows:"
msgstr ""

#: ../source/includes/note-disable-profiling-fsynclock.rst:1
# b8e8aa781e0645f6bfe6256236452edf
msgid "The database cannot be locked with :method:`db.fsyncLock()` while profiling is enabled.  You must disable profiling before locking the database with :method:`db.fsyncLock()`.  Disable profiling using :method:`db.setProfilingLevel()` as follows in the :program:`mongo` shell:"
msgstr ""

#: ../source/includes/warning-fsync-lock-mongodump.rst:3
# 984a99b348ff495996f066a3e3b8c136
msgid "When used in combination with :dbcommand:`fsync` or :method:`db.fsyncLock()`, :program:`mongod` may block some reads, including those from :program:`mongodump`, when queued write operation waits behind the :dbcommand:`fsync` lock."
msgstr ""

