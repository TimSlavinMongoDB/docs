# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/generate-test-data.txt:3
# 89a9280d0677446ea36f9cfa9a51c153
msgid "Generate Test Data"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:7
# e09a280127284e91a46f52914da68dd1
msgid "This tutorial describes how to quickly generate test data as you need to test basic MongoDB operations."
msgstr ""

#: ../source/tutorial/generate-test-data.txt:11
# 33b57e1723c24c3bb52f25c9d4c14121
msgid "Insert Multiple Documents Using a For Loop"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:13
# 11b57995b797453fb3fab80c8a0a5bc5
msgid "You can add documents to a new or existing collection by using a JavaScript ``for`` loop run from the :program:`mongo` shell."
msgstr ""

#: ../source/tutorial/generate-test-data.txt:16
# c0452e32e311473cbdb85caad5eaed05
msgid "From the :program:`mongo` shell, insert new documents into the ``testData`` collection using the following ``for`` loop. If the ``testData`` collection does not exist, MongoDB creates the collection implicitly."
msgstr ""

#: ../source/tutorial/generate-test-data.txt:25
# ee62e5503726412b88eb1b1ab3c4618e
msgid "Use find() to query the collection:"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:31
# e945fd8270ea4dd38961d46d974dd552
msgid "The :program:`mongo` shell displays the first 20 documents in the collection. Your :doc:`ObjectId </reference/object-id>` values will be different:"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:60
# f59d831f4436437a9d540730fe52b2c6
msgid "The :method:`~db.collection.find()` returns a cursor. To iterate the cursor and return more documents use the ``it`` operation in the :program:`mongo` shell. The :program:`mongo` shell will exhaust the cursor, and return the following documents:"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:74
# 0ace514ccdb54567877a649fce14dc7e
msgid "Insert Multiple Documents with a ``mongo`` Shell Function"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:76
# c3c30d06ce384f62a408a44899e9c32e
msgid "You can create a JavaScript function in your shell session to generate the above data. The ``insertData()`` JavaScript function, shown here, creates new data for use in testing or training by either creating a new collection or appending data to an existing collection:"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:95
# 8151e697060540b4b3e145a0affe437a
msgid "The ``insertData()`` function takes three parameters: a database, a new or existing collection, and the number of documents to create. The function creates documents with an ``x`` field that is set to an incremented integer, as in the following example documents:"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:106
# 8d4f3b5a6d6d44c491fef979b43c8397
msgid "Store the function in your :ref:`.mongorc.js <mongo-mongorc-file>` file. The :program:`mongo` shell loads the function for you every time you start a session."
msgstr ""

#: ../source/tutorial/generate-test-data.txt:0
# 3853e286e21048b49d78fecb00f18b55
msgid "Example"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:117
# 846dac08c50f46ada4e331a1a1d23c76
msgid "This operation inserts 400 documents into the ``testData`` collection in the ``test`` database. If the collection and database do not exist, MongoDB creates them implicitly before inserting documents."
msgstr ""

