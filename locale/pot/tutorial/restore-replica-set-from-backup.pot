# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/restore-replica-set-from-backup.txt:3
# 44611c72e26949baa19757a7569aab4e
msgid "Restore a Replica Set from MongoDB Backups"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:7
# ad5d34fa66e940dba70d54b6a57f884d
msgid "This procedure outlines the process for taking MongoDB data and restoring that data into a new :term:`replica set`. Use this approach for seeding test deployments from production backups as well as part of disaster recovery."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:12
# 0d6c8f3e91e74edf825a5b4d758813cc
msgid "You *cannot* restore a single data set to three new :program:`mongod` instances and *then* create a replica set. In this situation MongoDB will force the secondaries to perform an initial sync. The procedures in this document describe the correct and efficient ways to deploy a replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:19
# 17decac6f5724a29b24e399ac875a1f7
msgid "Restore Database into a Single Node Replica Set"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:21
# e362ab86c53b40dcb154652488eba854
msgid "Obtain backup MongoDB Database files. These files may come from a :doc:`file system snapshot </tutorial/backup-and-restore-with-filesystem-snapshots>`.  The `MongoDB Management Service (MMS) <https://mms.mongodb.com/?pk_campaign=mongodb-docs-restore-rs-tutorial>`_ produces MongoDB database files for :mms:`stored snapshots </backup/tutorial/restore-from-snapshot/>` and :mms:`point and time snapshots </backup/tutorial/restore-from-point-in-time-snapshot/>`. You can also use :program:`mongorestore` to restore database files using data created with :program:`mongodump`. See :doc:`/tutorial/backup-and-restore-with-binary-database-dumps` for more information."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:35
# 4ebb92289ced48f1ba784faf9c7fbaae
msgid "Start a :program:`mongod` using data files from the backup as the ``dbpath``. In the following example, ``/data/db`` is the ``dbpath`` to the data files:"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:43
# 214f3532504e490bbb7ed4151d039432
msgid "Convert your standalone :program:`mongod` process to a single node replica set by shutting down the :program:`mongod` instance, and restarting it with the :option:`--replSet <mongod --replSet>` option, as in the following example:"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:0
# 41d38c0594ac4e048cbb3611e1abd903
msgid "Optional"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:54
# b73cb87a31c24b0884b8b7bbd997093a
msgid "Consider explicitly setting a :setting:`oplogSize` to control the size of the :term:`oplog` created for this replica set member."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:58
# 6577f6a811a54286a9382a6b194b6198
msgid "Connect to the :program:`mongod` instance."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:60
# 835dac20d3ab4d07a5ad0b2952e4d784
msgid "Use :method:`rs.initiate()` to initiate the new replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:63
# 953fbc3924d64d36bdb4d6239229f761
msgid "Add Members to the Replica Set"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:65
# 9aa09d6d74bf424a9deb2af696641801
msgid "MongoDB provides two options for restoring secondary members of a replica set:"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:68
# 4b36438ed5af49eabe4e55c3eaffd081
msgid "Manually copy the database files to each data directory."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:70
# 02858c03c6344c2b8d19970b8d271227
msgid "Allow :ref:`initial sync <replica-set-initial-sync>` to distribute data automatically."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:73
# 4f2ab3a70a62404e9b4feff63a4d69e4
msgid "The following sections outlines both approaches."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:77
# 6fd78e6a8b1047669b726520ead51458
msgid "If your database is large, initial sync can take a long time to complete. For large databases, it might be preferable to copy the database files onto each host."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:82
# 1f3f935d7a1547e697cb4a51e0d0708e
msgid "Copy Database Files and Restart :program:`mongod` Instance"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:84
# 66ee9778c5684e93aa68fde8c173d36b
msgid "Use the following sequence of operations to \"seed\" additional members of the replica set with the restored data by copying MongoDB data files directly."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:88
# 160bc18485d14b6fb770407b645e0fb4
msgid "Shut down the :program:`mongod` instance that you restored. Using :option:`--shutdown <mongod --shutdown>` or :method:`db.shutdownServer()` to ensure a clean shut down."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:92
# b6c0f37c6cc5484b8b4a9a9c9dacd7be
msgid "Copy the :term:`primary's <primary>` data directory into the :setting:`dbpath` of the other members of the replica set. The :setting:`dbpath` is ``/data/db`` by default."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:96
# 01029f34f7e644fda8ba43d6964acc85
msgid "Start the :program:`mongod` instance that you restored."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:98
# e99c2bc055554d0bb14ac002344b8572
msgid "In a :program:`mongo` shell connected to the :term:`primary`, add the :term:`secondaries <secondary>` to the replica set using :method:`rs.add()`. See :doc:`/tutorial/deploy-replica-set` for more information about deploying a replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:104
# 8900a0dfc4904b64a33d17cde75ecb59
msgid "Update Secondaries using Initial Sync"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:106
# 02d0c37193314013b65dc196b2b98a7c
msgid "Use the following sequence of operations to \"seed\" additional members of the replica set with the restored data using the default *initial sync* operation."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:110
# f4b7a8328fe24c9da1938ce11a0e2098
msgid "Ensure that the data directories on the prospective replica set members are empty."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:113
# a365f2071be0486dabc8def8fea02383
msgid "Add each prospective member to the replica set. :ref:`Initial Sync <replica-set-initial-sync>` will copy the data from the :term:`primary` to the other members of the replica set."
msgstr ""

