# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/sort-results-with-indexes.txt:6
# 65bdb389e9a74b83831b9a36134158b6
msgid "Use Indexes to Sort Query Results"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:10
# af280e75c5454dc2b3770ff086f0e340
msgid "In MongoDB sort operations that sort documents based on an indexed field provide the greatest performance. Indexes in MongoDB, as in other databases, have an order: as a result, using an index to access documents returns in the same order as the index."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:15
# 41d99fd513744b8185e56760fcdcc880
msgid "To sort on multiple fields, create a :ref:`compound index <index-type-compound>`. With compound indexes, the results can be in the sorted order of either the full index or an index prefix. An index prefix is a subset of a compound index; the subset consists of one or more fields at the start of the index, in order. For example, given an index ``{ a:1, b: 1, c: 1, d: 1 }``, the following subsets are index prefixes:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:29
# f2df19b4b9514492a3b9a47182caf86b
msgid "For more information on sorting by index prefixes, see :ref:`sort-index-prefix`."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:32
# 226d3bff05284996b63825122571fe62
msgid "If the query includes **equality** match conditions on an index prefix, you can sort on a subset of the index that starts after or overlaps with the prefix. For example, given an index ``{ a: 1, b: 1, c: 1, d: 1 }``, if the query condition includes equality match conditions on ``a`` and ``b``, you can specify a sort on the subsets ``{ c: 1 }`` or ``{ c: 1, d: 1 }``:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:44
# 7a3e59c8d18947db841283d0905602b4
msgid "In these operations, the equality match and the sort documents together cover the index prefixes ``{ a: 1, b: 1, c: 1 }`` and ``{ a: 1, b: 1, c: 1, d: 1 }`` respectively."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:48
# 9d281c0075cb4963929c223ce3599161
msgid "You can also specify a sort order that includes the prefix; however, since the query condition specifies equality matches on these fields, they are constant in the resulting documents and do not contribute to the sort order:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:58
# 0b4f146c008646a7be145ba06b505640
msgid "For more information on sorting by index subsets that are not prefixes, see :ref:`sort-equality-match`."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:63
# 1abc80f683f443d98abe003ffc1b8b8d
msgid "For in-memory sorts that do not use an index, the :method:`sort() <cursor.sort()>` operation is significantly slower. The :method:`~cursor.sort()` operation will abort when it uses 32 megabytes of memory."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:69
# 824252c256e34a2a86c1c27f32ef7bf5
msgid "Sort With a Subset of Compound Index"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:71
# ba554c3499db43efb7033f03ddd92b8f
msgid "If the sort document contains a subset of the compound index fields, the subset can determine whether MongoDB can use the index efficiently to both retrieve and sort the query results. If MongoDB can efficiently use the index to both retrieve and sort the query results, the output from the :method:`~cursor.explain()` will display :data:`~explain.scanAndOrder` as ``false`` or ``0``. If MongoDB can only use the index for retrieving documents that meet the query criteria, MongoDB must manually sort the resulting documents without the use of the index. For in-memory sort operations, :method:`~cursor.explain()` will display :data:`~explain.scanAndOrder` as ``true`` or ``1``."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:86
# a3a152f1276c4b81b96eb5691159dd66
msgid "Sort Subset Starts at the Index Beginning"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:88
# 76dbffe042d24ba9af48781770161ee6
msgid "If the sort document is a subset of a compound index and starts from the beginning of the index, MongoDB can use the index to both retrieve and sort the query results."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:92
#: ../source/tutorial/sort-results-with-indexes.txt:143
# cf4c253856c143a38701b7a24e72f906
# 8cede5a829744b5a94ee47763237f130
msgid "For example, the collection ``collection`` has the following index:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:98
# e68c7a1155d74abd8de310118d551fc9
msgid "The following operations include a sort with a subset of the index. Because the sort subset starts at beginning of the index, the operations can use the index for both the query retrieval and sort:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:114
# 59f43141fb9d466ab94bb57a07245e38
msgid "The last two operations include query conditions on the field ``b`` but does not include a query condition on the field ``a``:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:122
# 459f9a14f03e43e2a9b2147cfa92e323
msgid "Consider the case where the collection has the index ``{ b: 1 }`` in addition to the ``{ a: 1, b: 1, c: 1, d: 1 }`` index. Because of the query condition on ``b``, it is not immediately obvious which index MongoDB may select as the \"best\" index. To explicitly specify the index to use, see :method:`~cursor.hint()`."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:131
# 8e02043fd51348eeb2d6117408f7c12d
msgid "Sort Subset Does Not Start at the Index Beginning"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:133
# 8d3646a130e3441fb524d6bb1e58ad50
msgid "The sort document can be a subset of a compound index that does **not** start from the beginning of the index. For instance, ``{ c: 1 }`` is a subset of the index ``{ a: 1, b: 1, c: 1, d: 1 }`` that omits the preceding index fields ``a`` and ``b``. MongoDB can use the index efficiently **if** the query document includes all the preceding fields of the index, in this case ``a`` and ``b``, in **equality** conditions. In other words, the equality conditions in the query document and the subset in the sort document **contiguously** cover a prefix of the index."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:149
# e9d1daa898004b2189a2257975f77e23
msgid "Then following operations can use the index efficiently:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:156
# 28016af99fcb4d3c868ec2fff813bf51
msgid "In the first operation, the query document ``{ a: 5 }`` with the sort document ``{ b: 1, c: 1 }`` cover the prefix ``{ a:1 , b: 1, c: 1 }`` of the index."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:160
# 5cf7db6344fb4a27b2285dcad53b4c93
msgid "In the second operation, the query document ``{ a: 5, c: 4, b: 3 }`` with the sort document ``{ d: 1 }`` covers the full index."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:163
# d4f8fc2d6290411699d2a90e578acf4c
msgid "Only the index fields preceding the sort subset must have the equality conditions in the query document. The other index fields may have other conditions. The following operations can efficiently use the index since the equality conditions in the query document and the subset in the sort document **contiguously** cover a prefix of the index:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:174
# 0425370f06e0498ab7437c390c04380c
msgid "The following operations specify a sort document of ``{ c: 1 }``, but the query documents do not contain equality matches on the **preceding** index fields ``a`` and ``b``:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:183
# b0480c35da57469dae2c5e677639b159
msgid "These operations **will not** efficiently use the index ``{ a: 1, b: 1, c: 1, d: 1 }`` and may not even use the index to retrieve the documents."
msgstr ""

