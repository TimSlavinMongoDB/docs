# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-tree-structures-with-child-references.txt:3
# dc61aa057ac649f298b1e401b97bc9bb
msgid "Model Tree Structures with Child References"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:8
# 9e5d8159e1a245d497b9f9fe6b51ebc5
msgid "Overview"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:10
# 3eea0e64e7c642b1bf94b3c4b8ac5642
msgid "Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do not enforce :term:`document` structure. Decisions that affect how you model data can affect application performance and database capacity. See :doc:`/core/data-models` for a full high level overview of data modeling in MongoDB."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:16
# 6e9283e6474049ca8d7d53628787afa0
msgid "This document describes a data model that describes a tree-like structure in MongoDB documents by storing :ref:`references <data-modeling-referencing>` in the parent-nodes to children nodes."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:21
# 339ce414edf44377990a544d0e17c56d
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:25
# 51a8b9a01ce24971aec3c4733b9007f4
msgid "The *Child References* pattern stores each tree node in a document; in addition to the tree node, document stores in an array the id(s) of the node's children."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:29
# bdc1c62b2e9d450ab9ea10ed81b161b9
msgid "Consider the following hierarchy of categories:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:33
# 61d5271a67034bfbaa1c6d79c6a395ed
msgid "The following example models the tree using *Child References*, storing the reference to the node's children in the field ``children``:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:45
# 2a4a01a978a242759c6cea641b605a81
msgid "The query to retrieve the immediate children of a node is fast and straightforward:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:52
# b38284f2a937403d90a24257528efe48
msgid "You can create an index on the field ``children`` to enable fast search by the child nodes:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:59
# 4859cfc738a04a2f995cab1312285b48
msgid "You can query for a node in the ``children`` field to find its parent node as well as its siblings:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:66
# b73bf926b99c46599262559d097889e0
msgid "The *Child References* pattern provides a suitable solution to tree storage as long as no operations on subtrees are necessary. This pattern may also provide a suitable solution for storing graphs where a node may have multiple parents."
msgstr ""

