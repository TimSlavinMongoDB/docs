# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/expire-data.txt:5
# 24a3a57e5eec4a49b7a5d538f134eda6
msgid "Expire Data from Collections by Setting TTL"
msgstr ""

#: ../source/tutorial/expire-data.txt:15
# f03a259b239b47b484a6dd72ff799d9b
msgid "This document provides an introduction to MongoDB's \"*time to live*\" or \":term:`TTL`\" collection feature. TTL collections make it possible to store data in MongoDB and have the :program:`mongod` automatically remove data after a specified number of seconds or at a specific clock time."
msgstr ""

#: ../source/tutorial/expire-data.txt:21
# 7251238dfce34dfeb77396afb2666b01
msgid "Data expiration is useful for some classes of information, including machine generated event data, logs, and session information that only need to persist for a limited period of time."
msgstr ""

#: ../source/tutorial/expire-data.txt:25
# 2722727e4aea4b2c9d4b170d12a032ac
msgid "A special index type supports the implementation of TTL collections. TTL relies on a background thread in :program:`mongod` that reads the date-typed values in the index and removes expired :term:`documents <document>` from the collection."
msgstr ""

#: ../source/tutorial/expire-data.txt:31
# 49d8db2c990645ceac522f2e759b72a7
msgid "Enable TTL for a Collection"
msgstr ""

#: ../source/tutorial/expire-data.txt:33
# a248a4eca32e4e738c63d983d6b55e3c
msgid "To enable TTL for a collection, use the :method:`~db.collection.ensureIndex()` method to create a TTL index, as shown in the examples below. MongoDB begins removing expired documents as soon as the index finishes building."
msgstr ""

#: ../source/tutorial/expire-data.txt:40
# 9eed092b67f14851844701609108b285
msgid "When the TTL thread is active, you will see a :doc:`delete </core/write-operations>` operations in the output of :method:`db.currentOp()` or in the data collected by the :ref:`database profiler <database-profiler>`."
msgstr ""

#: ../source/tutorial/expire-data.txt:47
# 38fd0ec8627547249b28c057d4326bad
msgid "When enabling TTL on :term:`replica sets <replica set>`, the TTL background thread runs *only* on :term:`primary` members. :term:`Secondary` members replicate deletion operations from the primary."
msgstr ""

#: ../source/includes/note-ttl-collection-background-timing.rst:3
# c3ebe71caa434b8e8477c8a577059da2
msgid "The TTL index does not guarantee that expired data will be deleted immediately. There may be a delay between the time a document expires and the time that MongoDB removes the document from the database."
msgstr ""

#: ../source/includes/note-ttl-collection-background-timing.rst:7
# 277dc0a221c34f6fb5a56940a2303a06
msgid "The background task that removes expired documents runs *every 60 seconds*. As a result, documents may remain in a collection *after* they expire but *before* the background task runs or completes."
msgstr ""

#: ../source/includes/note-ttl-collection-background-timing.rst:11
# e36a6078047841108124b8b233267869
msgid "The duration of the removal operation depends on the workload of your :program:`mongod` instance. Therefore, expired data may exist for some time *beyond* the 60 second period between runs of the background task."
msgstr ""

#: ../source/tutorial/expire-data.txt:54
# 1cfa8a28e6c44f26934475f32d54df13
msgid "With the exception of the background thread, a TTL index supports queries in the same way normal indexes do. You can use TTL indexes to expire documents in one of two ways, either:"
msgstr ""

#: ../source/tutorial/expire-data.txt:58
# 8635666ccf244c2b9af4217829cb77d3
msgid "remove documents a certain number of seconds after creation. The index will support queries for the creation time of the documents. Alternately,"
msgstr ""

#: ../source/tutorial/expire-data.txt:62
# b03ea44ec83444e79559dec15d554fbd
msgid "specify an explicit expiration time. The index will support queries for the expiration-time of the document."
msgstr ""

#: ../source/tutorial/expire-data.txt:66
# 4db05b1a155547a48c6a767812b00ce2
msgid "Expire after a Certain Number of Seconds"
msgstr ""

#: ../source/tutorial/expire-data.txt:68
# f839a39f89794484819fb11bc0c0d048
msgid "To expire data after a certain number of seconds, create a TTL index on a field that holds values of BSON date type or an array of BSON date-typed objects *and* specify a positive non-zero value in the ``expireAfterSeconds`` field. A document will expire when the number of seconds in the ``expireAfterSeconds`` field has passed since the time specified in its indexed field. [#field-is-array-of-dates]_"
msgstr ""

#: ../source/tutorial/expire-data.txt:75
# 46bb06c32c464b88bfc9670d61ed7d92
msgid "For example, the following operation creates an index on the ``log.events`` collection's ``createdAt`` field and specifies the ``expireAfterSeconds`` value of ``3600`` to set the expiration time to be one hour after the time specified by ``createdAt``."
msgstr ""

#: ../source/tutorial/expire-data.txt:84
# a65a887b0f9d4bee934beaa706d52d1b
msgid "When adding documents to the ``log.events`` collection, set the ``createdAt`` field to the current time:"
msgstr ""

#: ../source/tutorial/expire-data.txt:95
# 955c88c73ec945499a1dcf08bfcaaac8
msgid "MongoDB will automatically delete documents from the ``log.events`` collection when the document's ``createdAt`` value [#field-is-array-of-dates]_ is older than the number of seconds specified in ``expireAfterSeconds``."
msgstr ""

#: ../source/tutorial/expire-data.txt:100
# 207a8263b6db42a38798d1c2a1f0509a
msgid "If the field contains an array of BSON date-typed objects, data expires if at least one of BSON date-typed object is older than the number of seconds specified in ``expireAfterSeconds``."
msgstr ""

#: ../source/tutorial/expire-data.txt:105
# 4dda1d36734f48eb8bdfa36af080df91
msgid ":update:`$currentDate` operator"
msgstr ""

#: ../source/tutorial/expire-data.txt:108
# ac48daad7d0945dfa3498359bea7f77b
msgid "Expire at a Certain Clock Time"
msgstr ""

#: ../source/tutorial/expire-data.txt:110
# d3ff61850e4e46a1bd751e7da9156c11
msgid "To expire documents at a certain clock time, begin by creating a TTL index on a field that holds values of BSON date type or an array of BSON date-typed objects *and* specify an ``expireAfterSeconds`` value of ``0``. For each document in the collection, set the indexed date field to a value corresponding to the time the document should expire. If the indexed date field contains a date in the past, MongoDB considers the document expired."
msgstr ""

#: ../source/tutorial/expire-data.txt:118
# 35394b883b9d403997b47fd34e0ef0fa
msgid "For example, the following operation creates an index on the ``app.events`` collection's ``expireAt`` field and specifies the ``expireAfterSeconds`` value of ``0``:"
msgstr ""

#: ../source/tutorial/expire-data.txt:126
# 2511e851034847828e9c8a8da16e2d81
msgid "For each document, set the value of ``expireAt`` to correspond to the time the document should expire. For instance, the following :method:`~db.collection.insert()` operation adds a document that should expire at ``July 22, 2013 14:00:00``."
msgstr ""

#: ../source/tutorial/expire-data.txt:139
# d988cd4a62884a1695de89ab261e76eb
msgid "MongoDB will automatically delete documents from the ``app.events`` collection when the documents' ``expireAt`` value is older than the number of seconds specified in ``expireAfterSeconds``, i.e. ``0`` seconds older in this case. As such, the data expires at the specified ``expireAt`` value."
msgstr ""

#: ../source/tutorial/expire-data.txt:146
# f22861ead2aa460392cd196c96d358fd
msgid "Constraints"
msgstr ""

#: ../source/tutorial/expire-data.txt:148
# f086afa89af94ac2afc91ad1af23bfa0
msgid "The ``_id`` field does not support TTL indexes."
msgstr ""

#: ../source/tutorial/expire-data.txt:150
# 15b833bdee754fd2be9bf4c43e06d510
msgid "You cannot create a TTL index on a field that already has an index."
msgstr ""

#: ../source/tutorial/expire-data.txt:152
# 3a16e0f51f35425880c3f8155824aa68
msgid "A document will not expire if the indexed field does not exist."
msgstr ""

#: ../source/tutorial/expire-data.txt:154
# 57c0629b143540d1b2f6290eebd6786f
msgid "A document will not expire if the indexed field is not a date :term:`BSON type <BSON types>` or an array of date :term:`BSON types <BSON types>`."
msgstr ""

#: ../source/tutorial/expire-data.txt:158
# 4da11fa92291495680f7677e83baf031
msgid "The TTL index may not be compound (may not have multiple fields)."
msgstr ""

#: ../source/tutorial/expire-data.txt:160
# 53d312a2d2614b17849ac5fc071dfa4b
msgid "If the TTL field holds an array, and there are multiple date-typed data in the index, the document will expire when the *lowest* (i.e. earliest) date matches the expiration threshold."
msgstr ""

#: ../source/tutorial/expire-data.txt:164
# d64723a96ab64b29ac2778204cdae292
msgid "You cannot create a TTL index on a capped collection, because MongoDB cannot remove documents from a capped collection."
msgstr ""

#: ../source/tutorial/expire-data.txt:167
# d294095ff0bc487ca1957f915d1a5f55
msgid "You cannot use :method:`~db.collection.ensureIndex()` to change the value of ``expireAfterSeconds``. Instead use the :dbcommand:`collMod` database command in conjunction with the :collflag:`index` collection flag."
msgstr ""

#: ../source/tutorial/expire-data.txt:172
# 87e3bcf1da904365b45054717b4db98b
msgid "All collections with an index using the ``expireAfterSeconds`` option have :collflag:`usePowerOf2Sizes` enabled. Users cannot modify this setting. As a result of enabling :collflag:`usePowerOf2Sizes`, MongoDB must allocate more disk space relative to data size. This approach helps mitigate the possibility of storage fragmentation caused by frequent delete operations and leads to more predictable storage use patterns."
msgstr ""

