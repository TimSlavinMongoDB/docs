# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:3
# 509bcee95e7e4738a376ac8b1eea7861
msgid "Optimize Query Performance"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:8
# d9824eac2e234af0b96b1728bda3fd62
msgid "Create Indexes to Support Queries"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:10
# 6c4fcaba1e3045a6a7f0b302d083565e
msgid "For commonly issued queries, create :doc:`indexes </indexes>`. If a query searches multiple fields, create a :ref:`compound index <index-type-compound>`. Scanning an index is much faster than scanning a collection. The indexes structures are smaller than the documents reference, and store references in order."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:25
# 2be402c55e85459390c30a8ccb3e91e5
msgid "Indexes also improve efficiency on queries that routinely sort on a given field."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:32
# b952e2b19ae04e49a0013ef53d6ca9f4
msgid "Creating this index:"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:38
# ce96c8fde525492c97c1d9204d526ae4
msgid "Optimizes this query:"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:44
# be9fc943d86d482c88773f3d364a70c1
msgid "Because MongoDB can read indexes in both ascending and descending order, the direction of a single-key index does not matter."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:47
# 9697814539f648ef8d268648df311f04
msgid "Indexes support queries, update operations, and some phases of the :ref:`aggregation pipeline <aggregation-pipeline-operators-and-performance>`."
msgstr ""

#: ../source/includes/fact-bindata-storage-optimization.rst:1
# 45b53352597e49ada1ac721feb3a8912
msgid "Index keys that are of the ``BinData`` type are more efficiently stored in the index if:"
msgstr ""

#: ../source/includes/fact-bindata-storage-optimization.rst:4
# a3cbae959d0c4cf8bc7a6ca1119537b2
msgid "the binary subtype value is in the range of 0-7 or 128-135, and"
msgstr ""

#: ../source/includes/fact-bindata-storage-optimization.rst:6
# 8fdd1985a23d49258c22f9c48dcad5d7
msgid "the length of the byte array is: 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, or 32."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:55
# 82e01973843f4fe4ac964ef54d5d3595
msgid "Limit the Number of Query Results to Reduce Network Demand"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:57
# 2056d8800b33486295c915f7ab939823
msgid "MongoDB :term:`cursors <cursor>` return results in groups of multiple documents. If you know the number of results you want, you can reduce the demand on network resources by issuing the :method:`~cursor.limit()` method."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:62
# 10610d94139d49d193dbc4da44126a1c
msgid "This is typically used in conjunction with sort operations. For example, if you need only 10 results from your query to the ``posts`` collection, you would issue the following command:"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:70
# 1515650e156f48f39a787aaa2315302e
msgid "For more information on limiting results, see :method:`~cursor.limit()`"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:73
# e6675f0ad3ff40bfb5338afd36bbe79b
msgid "Use Projections to Return Only Necessary Data"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:75
# 7b9f1602c1ca4f0bb3582fb17cd2b19d
msgid "When you need only a subset of fields from documents, you can achieve better performance by returning only the fields you need:"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:78
# 78f41ed8070c448a8ded6d1d1c9c6e57
msgid "For example, if in your query to the ``posts`` collection, you need only the ``timestamp``, ``title``, ``author``, and ``abstract`` fields, you would issue the following command:"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:86
# c0f5d80f74144eab833a6a279402a3f2
msgid "For more information on using projections, see :ref:`read-operations-projection`."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:90
# be71dccfe8554011b931cc703dffec06
msgid "Use ``$hint`` to Select a Particular Index"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:92
# cddde918aa7641859855a6a33865afe9
msgid "In most cases the :ref:`query optimizer <read-operations-query-optimization>` selects the optimal index for a specific operation; however, you can force MongoDB to use a specific index using the :method:`~cursor.hint()` method. Use :method:`~cursor.hint()` to support performance testing, or on some queries where you must select a field or field included in several indexes."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:101
# ab2375bf05cd408a81efa9eeba0e6860
msgid "Use the Increment Operator to Perform Operations Server-Side"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:103
# 6a9e261e5b2f4ed08924a12717606e11
msgid "Use MongoDB's :update:`$inc` operator to increment or decrement values in documents. The operator increments the value of the field on the server side, as an alternative to selecting a document, making simple modifications in the client and then writing the entire document to the server.  The :update:`$inc` operator can also help avoid race conditions, which would result when two application instances queried for a document, manually incremented a field, and saved the entire document back at the same time."
msgstr ""

