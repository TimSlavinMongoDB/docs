# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:3
# 537a295dc4e546e690849581cc6c5399
msgid "Getting Started with the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:7
# 6c250093612941ea877deb58d57c34a5
msgid "This document provides a basic introduction to using the :program:`mongo` shell. See :doc:`/installation` for instructions on installing MongoDB for your system."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:12
# 550f45ea2d4446e4be787457726ccc09
msgid "Start the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:14
# f479f0c8406f4c9fb4f8fceeffda4db8
msgid "To start the :program:`mongo` shell and connect to your :doc:`MongoDB </reference/program/mongod>` instance running on **localhost** with **default port**:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:17
# a3ddb366fd3346d3a63bd10f698e47cf
msgid "Go to your ``<mongodb installation dir>``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:23
# c7f473d73c144265969a01842ed96651
msgid "Type ``./bin/mongo`` to start :program:`mongo`:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:29
# 0c00e82da72d408cb230fb371ea3b3d7
msgid "If you have added the ``<mongodb installation dir>/bin`` to the ``PATH`` environment variable, you can just type ``mongo`` instead of ``./bin/mongo``."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:33
# 81314565f30348b6a2abde8ece7a01d2
msgid "To display the database you are using, type ``db``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:39
# 0cebc17e23ee4d2384962c844f1491ca
msgid "The operation should return ``test``, which is the default database. To switch databases, issue the ``use <db>`` helper, as in the following example:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:47
# d22d5ef8df4b42faa255790a50bf6d13
msgid "To list the available databases, use the helper ``show dbs``. See also :ref:`mongo-shell-getSiblingDB` to access a different database from the current database without switching your current database context (i.e. ``db.``.)"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:52
# 50d07f95b30b46bdae3238e70b3e7049
msgid "To start the :program:`mongo` shell with other options, see :ref:`examples of starting up mongo <mongo-usage-examples>` and :doc:`mongo reference </reference/program/mongo>` which provides details on the available options."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:59
# 1b3b3ede62fa410cbe977e49c97b9e79
msgid "When starting, :program:`mongo` checks the user's :envvar:`HOME` directory for a JavaScript file named :ref:`.mongorc.js <mongo-mongorc-file>`. If found, :program:`mongo` interprets the content of :file:`.mongorc.js` before displaying the prompt for the first time. If you use the shell to evaluate a JavaScript file or expression, either by using the :option:`--eval <mongo --eval>` option on the command line or by specifying :ref:`a .js file to mongo <mongo-shell-file>`, :program:`mongo` will read the ``.mongorc.js`` file *after* the JavaScript has finished processing."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:72
# c970cde3841544b9ad20d923bb88af77
msgid "Executing Queries"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:74
# 64c955d2b6c945a78686f460f3dd3c4c
msgid "From the :program:`mongo` shell, you can use the :doc:`shell methods </reference/method>` to run queries, as in the following example:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:81
# 848cf6937ea445b5a5306c1fe696102e
msgid "The ``db`` refers to the current database."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:83
# bf7be7134e1b47609ab67638ce182b47
msgid "The ``<collection>`` is the name of the collection to query. See :ref:`mongo-shell-help-collection` to list the available collections."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:86
# f8616b08e6104c4a93ecfe91de363ea9
msgid "If the :program:`mongo` shell does not accept the name of the collection, for instance if the name contains a space, hyphen, or starts with a number, you can use an alternate syntax to refer to the collection, as in the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:97
# dfa736f99af1476a88324e80fc8947aa
msgid "The :method:`~db.collection.find()` method is the JavaScript method to retrieve documents from ``<collection>``. The :method:`~db.collection.find()` method returns a :term:`cursor` to the results; however, in the :program:`mongo` shell, if the returned cursor is not assigned to a variable using the ``var`` keyword, then the cursor is automatically iterated up to 20 times to print up to the first 20 documents that match the query. The :program:`mongo` shell will prompt ``Type it`` to iterate another 20 times."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:107
# 0901c2f5a3c84965a6b9c20257a51741
msgid "You can set the ``DBQuery.shellBatchSize`` attribute to change the number of iteration from the default value ``20``, as in the following example which sets it to ``10``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:115
# 6ff583c435134074b6774021cdfbd675
msgid "For more information and examples on cursor handling in the :program:`mongo` shell, see :doc:`/core/cursors`."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:118
# ed364109466845878f8d6240dc6a038a
msgid "See also :ref:`mongo-shell-help-cursor` for list of cursor help in the :program:`mongo` shell."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:121
# 52d20b28ca7041eeae03126b5e8f38a6
msgid "For more documentation of basic MongoDB operations in the :program:`mongo` shell, see:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:124
# 2632a2d3062f45638656319aa24fa4d0
msgid ":doc:`/tutorial/getting-started`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:125
# 731601e12cca43bca1fede15471e1a40
msgid ":doc:`/reference/mongo-shell`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:126
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:129
# 3fb62544da04428eb493823359252b67
# a75fcf31ca5e4b5ba59f2ec01d89ff11
msgid ":doc:`/core/read-operations`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:127
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:130
# e42a2c02abd34c309df192c9ec15fb60
# a2e041d9d1c34925974d3e81fed92053
msgid ":doc:`/core/write-operations`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:128
# ed48b41b44bd4c27bf02917e0114678f
msgid ":doc:`/administration/indexes`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:135
# 4d399e0306e047d883b1317c2010d2a2
msgid "Print"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:137
# 4fa4f3ca79ed4d85b442e457f6f80443
msgid "The :program:`mongo` shell automatically prints the results of the :method:`~db.collection.find()` method if the returned cursor is not assigned to a variable using the ``var`` keyword. To format the result, you can add the ``.pretty()`` to the operation, as in the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:147
# 58449eb1bcbd49b18fbe0949a8ac932e
msgid "In addition, you can use the following explicit print methods in the :program:`mongo` shell:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:150
# c004e08036b44d1eb37784e496ff3915
msgid "``print()`` to print without formatting"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:152
# cd1e9f8f7dc94bf2bb1873c964848cee
msgid "``print(tojson(<obj>))`` to print with :term:`JSON` formatting and equivalent to ``printjson()``"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:155
# 5a1374822bef40e99d09e515c5c5a53d
msgid "``printjson()`` to print with :term:`JSON` formatting and equivalent to ``print(tojson(<obj>))``"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:159
# 709e3e1f46334d9c812d9185f13d1812
msgid "Evaluate a JavaScript File"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:1
# 7a3e92a75b4243068a35683f3b6f30b4
msgid "You can execute a ``.js`` file from within the :program:`mongo` shell, using the :method:`load()` function, as in the following:"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:8
# 157e043b8ce5434ebcb07e9a856f922a
msgid "This function loads and executes the :file:`myjstest.js` file."
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:10
# 6247a3939147483b98087994d3c4cf24
msgid "The :method:`load()` method accepts relative and absolute paths. If the current working directory of the :program:`mongo` shell is :file:`/data/db`, and the :file:`myjstest.js` resides in the :file:`/data/db/scripts` directory, then the following calls within the :program:`mongo` shell would be equivalent:"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:21
# c85af3dd6cc64718a2598ee8f4d95571
msgid "There is no search path for the :method:`load()` function. If the desired script is not in the current working directory or the full specified path, :program:`mongo` will not be able to access the file."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:164
# d2528065b6fc4f058a8f62a6d003da31
msgid "Use a Custom Prompt"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:166
# fc1db6b7a74e4e468cb21fad9e607d6e
msgid "You may modify the content of the prompt by creating the variable ``prompt`` in the shell. The prompt variable can hold strings as well as any arbitrary JavaScript. If ``prompt`` holds a function that returns a string, :program:`mongo` can display dynamic information in each prompt. Consider the following examples:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
# 2c26c0ac4d1c493e9c98333983c9aaa4
# c25e89d68a1a4d149224bac8fec41903
# 46adb1205ea14e3b9e68a235a185bcb9
msgid "Example"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:174
# 5794756056bd4c12bbec687d746a145b
msgid "Create a prompt with the number of operations issued in the current session, define the following variables:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:184
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:205
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:225
# 85eeaac6182f4beebe51bd4eee82c3ab
# c59f7ce7eb914de7b5b4b1a8fe6b7062
# 2988eb4318164c3683513512bef53cb6
msgid "The prompt would then resemble the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:194
# 779c82d247b0452aa87bd5e38b4cd645
msgid "To create a :program:`mongo` shell prompt in the form of ``<database>@<hostname>$`` define the following variables:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:215
# 769324b94868497a9af0a0c75044c9c5
msgid "To create a :program:`mongo` shell prompt that contains the system up time *and* the number of documents in the current database, define the following prompt variable:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:233
# 482f5c9632aa4b7e918db87de555407c
msgid "Use an External Editor in the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:237
# 48e48f009f5a4727bbc2d1fb2df81e5a
msgid "In the :program:`mongo` shell you can use the ``edit`` operation to edit a function or variable in an external editor. The ``edit`` operation uses the value of your environments ``EDITOR`` variable."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:241
# 83c9383cb40b4df6be50a84f819ad779
msgid "At your system prompt you can define the ``EDITOR`` variable and start :program:`mongo` with the following two operations:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:249
# 36d9d30bd68e483a9d606e2435db2423
msgid "Then, consider the following example shell session:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:271
# bf391ad025ca4b2185870bc98776cba9
msgid "As :program:`mongo` shell interprets code edited in an external editor, it may modify code in functions, depending on the JavaScript compiler. For :program:`mongo` may convert ``1+1`` to ``2`` or remove comments. The actual changes affect only the appearance of the code and will vary based on the version of JavaScript used but will not affect the semantics of the code."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:281
# 4098a34010a745a6847ea7084d214f3a
msgid "Exit the Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:283
# 60ab39a7a0174ca39c4c01aaa906a933
msgid "To exit the shell, type ``quit()`` or use the ``<Ctrl-c>`` shortcut."
msgstr ""

