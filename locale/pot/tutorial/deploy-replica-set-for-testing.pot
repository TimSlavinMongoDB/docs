# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/deploy-replica-set-for-testing.txt:3
# 6b16dcfcdc3845999eb3b3872f48d1e0
msgid "Deploy a Replica Set for Testing and Development"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:7
# 2fdbe10dea8e4d69a06709b7f896514d
msgid "This tutorial provides instructions for deploying a replica set in a development or test environment. For a production deployment, refer to the :doc:`/tutorial/deploy-replica-set` tutorial."
msgstr ""

#: ../source/includes/introduction-deploy-replica-set.rst:1
# 59834326139a4ea1b3736e10b4619212
msgid "This tutorial describes how to create a three-member :term:`replica set` from three existing :program:`mongod` instances."
msgstr ""

#: ../source/includes/introduction-deploy-replica-set.rst:4
# da2031fea38743b1a0a96c294b6cd33d
msgid "If you wish to deploy a replica set from a single MongoDB instance, see :doc:`/tutorial/convert-standalone-to-replica-set`. For more information on replica set deployments, see the :doc:`/replication` and :doc:`/core/replica-set-architectures` documentation."
msgstr ""

#: ../source/includes/introduction-deploy-replica-set.rst:10
# ac8e0ac9310b4724b83f9ca2ef740e81
msgid "Overview"
msgstr ""

#: ../source/includes/introduction-deploy-replica-set.rst:12
# 223398099ec44fe4a0c3f0bef04c0ab2
msgid "Three member :term:`replica sets <replica set>` provide enough redundancy to survive most network partitions and other system failures. These sets also have sufficient capacity for many distributed read operations. Replica sets should always have an odd number of members. This ensures that :doc:`elections </core/replica-set-elections>` will proceed smoothly. For more about designing replica sets, see :doc:`the Replication overview </core/replication-introduction>`."
msgstr ""

#: ../source/includes/introduction-deploy-replica-set.rst:21
# 003e1dd8b80442d2bf7ceda61ad4c170
msgid "The basic procedure is to start the :program:`mongod` instances that will become members of the replica set, configure the replica set itself, and then add the :program:`mongod` instances to it."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:15
# 159cf8951a5e49739181eae3f03e6f5b
msgid "Requirements"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:17
# 9819e6ea37a246188090b7d9f2e34148
msgid "For test and development systems, you can run your :program:`mongod` instances on a local system, or within a virtual instance."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:20
# d8de4535039e49f99572a51149e16d9f
msgid "Before you can deploy a replica set, you must install MongoDB on each system that will be part of your :term:`replica set`. If you have not already installed MongoDB, see the :ref:`installation tutorials <tutorial-installation>`."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:24
# 71ca65062f054adca4b008c2b21f785a
msgid "Before creating your replica set, you should verify that your network configuration allows all possible connections between each member. For a successful replica set deployment, every member must be able to connect to every other member. For instructions on how to check your connection, see :ref:`replica-set-troubleshooting-check-connection`."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:31
# 96b5176305d84c12b781d9ee7a4aac04
msgid "Procedure"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:33
# 586151ffa89247c8bd37955606a08398
msgid "These instructions should only be used for test or development deployments."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:36
# 9c3892eb377640e5a510cd751c121469
msgid "The examples in this procedure create a new replica set named ``rs0``."
msgstr ""

#: ../source/includes/important-unique-replica-set-names.rst:3
# 609cd5f94ec14ef588303dbfac69e089
msgid "If your application connects to more than one replica set, each set should have a distinct name. Some drivers group replica set connections by replica set name."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:40
# bfea68d5fc0c4ff19f83eb4bf4b0da37
msgid "You will begin by starting three :program:`mongod` instances as members of a replica set named ``rs0``."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:43
# 2984b7c80848418da772c28054329202
msgid "Create the necessary data directories for each member by issuing a command similar to the following:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:50
# 65cf29196e714b48b675cbeadc2881be
msgid "This will create directories called \"rs0-0\", \"rs0-1\", and \"rs0-2\", which will contain the instances' database files."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:53
# 4c71cbbb974d475eaa7cf67e55e27f5e
msgid "Start your :program:`mongod` instances in their own shell windows by issuing the following commands:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:56
# 31897ecfcf3248268a54431efb05caab
msgid "First member:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:62
# c467e6b35db04e2ea634f0ae3173c23f
msgid "Second member:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:68
# 6d5649d0a00543e38f6ed5b769b6df73
msgid "Third member:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:74
# e43e88bb0f5f41eda119f793e2741d4b
msgid "This starts each instance as a member of a replica set named ``rs0``, each running on a distinct port, and specifies the path to your data directory with the :option:`--dbpath <dbpath>` setting. If you are already using the suggested ports, select different ports."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:79
# 06abde8a8c5746c5a0b57963db9e1e10
msgid "The :option:`--smallfiles <smallfiles>` and :option:`--oplogSize <oplogSize>` settings reduce the disk space that each :program:`mongod` instance uses. This is ideal for testing and development deployments as it prevents overloading your machine. For more information on these and other configuration options, see :doc:`/reference/configuration-options`."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:86
# ebd9f3d9005c4cc0a10821f7538be0c3
msgid "Connect to one of your :program:`mongod` instances through the :program:`mongo` shell. You will need to indicate which instance by specifying its port number. For the sake of simplicity and clarity, you may want to choose the first one, as in the following command;"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:95
# e7e4c5e5c3eb43dcac56c77ebc5effab
msgid "In the :program:`mongo` shell, use :method:`rs.initiate()` to initiate the replica set. You can create a replica set configuration object in the :program:`mongo` shell environment, as in the following example:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:112
# d83a896bd96e405fb399a8b76ebd220c
msgid "replacing ``<hostname>`` with your system's hostname, and then pass the ``rsconf`` file to :method:`rs.initiate()` as follows:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:120
# 58190d184a2d4f18a31128946a5799ec
msgid "Display the current :doc:`replica configuration </reference/replica-configuration>` by issuing the following command:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:127
# 8a6df5d355b4461388c36ce44f20da17
msgid "The replica set configuration object resembles the following"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:142
# f0da3a5cad624d3198ea2203198459d6
msgid "In the :program:`mongo` shell connected to the :term:`primary`, add the second and third :program:`mongod` instances to the replica set using the :method:`rs.add()` method. Replace ``<hostname>`` with your system's hostname in the following examples:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:152
# 53d8c9471798406989cb030821d26c81
msgid "When complete, you should have a fully functional replica set. The new replica set will elect a :term:`primary`."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:155
# afeb4415bb0b4ea7a13141b61e3181df
msgid "Check the status of your replica set at any time with the :method:`rs.status()` operation."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:158
# ee9a5c219f4a431b99bc3fdbefaecbf4
msgid "The documentation of the following shell functions for more information:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:161
# 9a121c0a2e134eff852740b8d9ebfb4e
msgid ":method:`rs.initiate()`"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:162
# f53c1f23ea9a46408e2dcdc5497d50c3
msgid ":method:`rs.conf()`"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:163
# cfab14cb4ab846da891d75a102c6a231
msgid ":method:`rs.reconfig()`"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:164
# 17f7a0cc31414d7b8cc1cfc6bc83097e
msgid ":method:`rs.add()`"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:166
# 4a0527a6373e4c119e6af2ff2a8a802b
msgid "You may also consider the `simple setup script <https://github.com/mongodb/mongo-snippets/blob/master/replication/simple-setup.py>`_ as an example of a basic automatically-configured replica set."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:170
# 39a84d6638a647ef81f15c466af60d30
msgid "Refer to :doc:`Replica Set Read and Write Semantics </applications/replication>` for a detailed explanation of read and write semantics in MongoDB."
msgstr ""

