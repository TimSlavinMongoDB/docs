# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/query-documents.txt:6
# aa4a628e78d24f4cab70e35bc2bcd2f5
msgid "Query Documents"
msgstr ""

#: ../source/tutorial/query-documents.txt:10
# b2f35e9ca07144af82483df5f380da53
msgid "In MongoDB, the :method:`db.collection.find()` method retrieves documents from a collection. [#findOne]_ The :method:`db.collection.find()` method returns a :doc:`cursor </core/cursors>` to the retrieved documents."
msgstr ""

#: ../source/tutorial/query-documents.txt:15
# 1d641072e3a94a189ce24ae83461ed99
msgid "This tutorial provides examples of read operations using the :method:`db.collection.find()` method in the :program:`mongo` shell. In these examples, the retrieved documents contain all their fields. To restrict the fields to return in the retrieved documents, see :doc:`/tutorial/project-fields-from-query-results`."
msgstr ""

#: ../source/tutorial/query-documents.txt:22
# fb304d44610748668bb20510c61c1603
msgid "The :method:`db.collection.findOne()` method also performs a read operation to return a single document. Internally, the :method:`db.collection.findOne()` method is the :method:`db.collection.find()` method with a limit of 1."
msgstr ""

#: ../source/tutorial/query-documents.txt:28
# 70b8af5a9c6943e2ab8435c0ac29a544
msgid "Select All Documents in a Collection"
msgstr ""

#: ../source/tutorial/query-documents.txt:30
# 653b207ff1da4af4b7a06bab272496ca
msgid "An empty query document (``{}``) selects all documents in the collection:"
msgstr ""

#: ../source/tutorial/query-documents.txt:37
# bfeeeb2b5a104d84afd4b3feaa25981f
msgid "Not specifying a query document to the :method:`~db.collection.find()` is equivalent to specifying an empty query document. Therefore the following operation is equivalent to the previous operation:"
msgstr ""

#: ../source/tutorial/query-documents.txt:46
# cc76dafec44e439d933972bbcf1c0675
msgid "Specify Equality Condition"
msgstr ""

#: ../source/tutorial/query-documents.txt:48
# e376f5b7172a410493a2363985434d08
msgid "To specify equality condition, use the query document ``{ <field>: <value> }`` to select all documents that contain the ``<field>`` with the specified ``<value>``."
msgstr ""

#: ../source/tutorial/query-documents.txt:52
# 66a288b738ea439ab44b44171da944bc
msgid "The following example retrieves from the ``inventory`` collection all documents where the ``type`` field has the value ``snacks``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:60
# 51738ff912bc40e2ac4bf163f8c73948
msgid "Specify Conditions Using Query Operators"
msgstr ""

#: ../source/tutorial/query-documents.txt:62
# b496be8c0700437c83a21b531875d0ce
msgid "A query document can use the :ref:`query operators <query-selectors>` to specify conditions in a MongoDB query."
msgstr ""

#: ../source/tutorial/query-documents.txt:65
# 026c5c9e38f74449ae5a1b52f58dd0b7
msgid "The following example selects all documents in the ``inventory`` collection where the value of the ``type`` field is either ``'food'`` or ``'snacks'``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:73
# 5430f421cb944ee398dbd1654b526838
msgid "Although you can express this query using the :query:`$or` operator, use the :query:`$in` operator rather than the :query:`$or` operator when performing equality checks on the same field."
msgstr ""

#: ../source/tutorial/query-documents.txt:77
# f55ca7055c42403d824b6a63dc362e5e
msgid "Refer to the :doc:`/reference/operator` document for the complete list of query operators."
msgstr ""

#: ../source/tutorial/query-documents.txt:81
# 6b37da3ee67f4a8b970320ac9e1814eb
msgid "Specify ``AND`` Conditions"
msgstr ""

#: ../source/tutorial/query-documents.txt:83
# 870ca3b945bd4d83b0b2536f1b271e9c
msgid "A compound query can specify conditions for more than one field in the collection's documents. Implicitly, a logical ``AND`` conjunction connects the clauses of a compound query so that the query selects the documents in the collection that match all the conditions."
msgstr ""

#: ../source/tutorial/query-documents.txt:88
# a724f9eeb1864fd5940936c4d4bf551f
msgid "In the following example, the query document specifies an equality match on the field ``food`` **and** a less than (:query:`$lt`) comparison match on the field ``price``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:96
# 684087c061cd4483a3214115559c46ec
msgid "This query selects all documents where the ``type`` field has the value ``'food'`` **and** the value of the ``price`` field is less than ``9.95``. See :ref:`comparison operators <query-selectors-comparison>` for other comparison operators."
msgstr ""

#: ../source/tutorial/query-documents.txt:102
# 2591cdb827094158b0b593b8fcd6aa6c
msgid "Specify ``OR`` Conditions"
msgstr ""

#: ../source/tutorial/query-documents.txt:104
# bb2bc1fba9384f739b2dbed2b3f17c11
msgid "Using the :query:`$or` operator, you can specify a compound query that joins each clause with a logical ``OR`` conjunction so that the query selects the documents in the collection that match at least one condition."
msgstr ""

#: ../source/tutorial/query-documents.txt:109
# f605f711879b4ec88074be75a6b40d80
msgid "In the following example, the query document selects all documents in the collection where the field ``qty`` has a value greater than (:query:`$gt`) ``100`` **or** the value of the ``price`` field is less than (:query:`$lt`) ``9.95``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:125
# c0b4efafdd6c46ce9f5a69fc5f86d29c
msgid "Specify ``AND`` as well as ``OR`` Conditions"
msgstr ""

#: ../source/tutorial/query-documents.txt:127
# 2983df31526345aca44f29ac54869bb3
msgid "With additional clauses, you can specify precise conditions for matching documents."
msgstr ""

#: ../source/tutorial/query-documents.txt:130
# 108b5a47a5034025b20725432df8da9a
msgid "In the following example, the compound query document selects all documents in the collection where the value of the ``type`` field is ``'food'`` **and** *either* the ``qty`` has a value greater than (:query:`$gt`) ``100`` *or* the value of the ``price`` field is less than (:query:`$lt`) ``9.95``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:145
# f17969ab04e340d9b3580deb77a99a2f
msgid "Subdocuments"
msgstr ""

#: ../source/tutorial/query-documents.txt:147
# 163aca86337d4921b60b589afae5d5e8
msgid "When the field holds an embedded document (i.e. subdocument), you can either specify the entire subdocument as the value of a field, or \"reach into\" the subdocument using :term:`dot notation`, to specify values for individual fields in the subdocument:"
msgstr ""

#: ../source/tutorial/query-documents.txt:153
# f0858e6ef02d4c7088b1ba14eb0f8dcc
msgid "Exact Match on Subdocument"
msgstr ""

#: ../source/tutorial/query-documents.txt:155
# 4d0af289553241c8bb8b3f3eeaafb118
msgid "To specify an equality match on the whole subdocument, use the query document ``{ <field>: <value> }`` where ``<value>`` is the subdocument to match. Equality matches on a subdocument require that the subdocument field match *exactly* the specified ``<value>``, including the field order."
msgstr ""

#: ../source/tutorial/query-documents.txt:161
# b8bb824dd94d471582a73782ba326def
msgid "In the following example, the query matches all documents where the value of the field ``producer`` is a subdocument that contains *only* the field ``company`` with the value ``'ABC123'`` and the field ``address`` with the value ``'123 Street'``, in the exact order:"
msgstr ""

#: ../source/tutorial/query-documents.txt:178
# 2d650c9e39e946208b56a28fd7396e00
msgid "Equality Match on Fields within Subdocument"
msgstr ""

#: ../source/tutorial/query-documents.txt:180
# ea0e9f6dcc134e7ba4087c72065bf028
msgid "Equality matches for specific fields within subdocuments select the documents in the collection when the field in the subdocument contains a field that matches the specified value."
msgstr ""

#: ../source/tutorial/query-documents.txt:184
# 968da1b462024a2b85c20cf432688ee8
msgid "In the following example, the query uses the :term:`dot notation` to match all documents where the value of the field ``producer`` is a subdocument that contains a field ``company`` with the value ``'ABC123'`` and may contain other fields:"
msgstr ""

#: ../source/tutorial/query-documents.txt:196
# 9f7a70bb5395439dae916cb9e0183982
msgid "Arrays"
msgstr ""

#: ../source/tutorial/query-documents.txt:198
# e35d1f1ba0ad45d297a7cd2f624df301
msgid "When the field holds an array, you can query for an exact array match or for specific values in the array. If the array holds sub-documents, you can query for specific fields within the sub-documents using :term:`dot notation`:"
msgstr ""

#: ../source/tutorial/query-documents.txt:204
# f3d10319349540be85a7387f66c3090a
msgid "Exact Match on an Array"
msgstr ""

#: ../source/tutorial/query-documents.txt:206
# 32988de76c41419d918ab82c649d0928
msgid "To specify equality match on an array, use the query document ``{ <field>: <value> }`` where ``<value>`` is the array to match. Equality matches on the array require that the array field match *exactly* the specified ``<value>``, including the element order."
msgstr ""

#: ../source/tutorial/query-documents.txt:211
# 021c5f87f380424389f852d16de294f2
msgid "In the following example, the query matches all documents where the value of the field ``tags`` is an array that holds exactly three elements, ``'fruit'``, ``'food'``, and ``'citrus'``, in this order:"
msgstr ""

#: ../source/tutorial/query-documents.txt:220
# 1c01d33fe48141179dad354f598772b2
msgid "Match an Array Element"
msgstr ""

#: ../source/tutorial/query-documents.txt:222
# af6d5915be8b4b9385eb05df9fe984a2
msgid "Equality matches can specify a single element in the array to match. These specifications match if the array contains at least *one* element with the specified value."
msgstr ""

#: ../source/tutorial/query-documents.txt:226
# 501dcdac3c2743728c196fe8d5b50272
msgid "In the following example, the query matches all documents where the value of the field ``tags`` is an array that contains ``'fruit'`` as one of its elements:"
msgstr ""

#: ../source/tutorial/query-documents.txt:235
# d7f63b9335704bbeb3a80729fc5fb2a1
msgid "Match a Specific Element of an Array"
msgstr ""

#: ../source/tutorial/query-documents.txt:237
# e55b07e0478e456b90956044b6a5bddc
msgid "Equality matches can specify equality matches for an element at a particular index or position of the array."
msgstr ""

#: ../source/tutorial/query-documents.txt:240
# be3f89a39bc644b6a5fd2e6743f08119
msgid "In the following example, the query uses the :term:`dot notation` to match all documents where the value of the ``tags`` field is an array whose first element equals ``'fruit'``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:249
# b82c26e011b04556ba3490a48a625f85
msgid "Array of Subdocuments"
msgstr ""

#: ../source/tutorial/query-documents.txt:252
# 1b6051b9c695468bbe4aa0abbc9b9298
msgid "Match a Field in the Subdocument Using the Array Index"
msgstr ""

#: ../source/tutorial/query-documents.txt:254
# 74fd16c859544cff838d54f98d3031cc
msgid "If you know the array index of the subdocument, you can specify the document using the subdocument's position."
msgstr ""

#: ../source/tutorial/query-documents.txt:257
# 41cdfad467a0483f87921775a87604f3
msgid "The following example selects all documents where the ``memos`` contains an array whose first element (i.e. index is ``0``) is a subdocument with the field ``by`` with the value ``'shipping'``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:266
# 39c35703d1b84a9aa50b5af37da8e5a8
msgid "Match a Field Without Specifying Array Index"
msgstr ""

#: ../source/tutorial/query-documents.txt:268
# 2641c595a2624783b872de274d9638d3
msgid "If you do not know the index position of the subdocument, concatenate the name of the field that contains the array, with a dot (``.``) and the name of the field in the subdocument."
msgstr ""

#: ../source/tutorial/query-documents.txt:272
# 4ed523c5cdbd47bbba7313167b5df61c
msgid "The following example selects all documents where the ``memos`` field contains an array that contains at least one subdocument with the field ``by`` with the value ``'shipping'``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:281
# 0f728c94ec75488989a962eeef66ca7d
msgid "Match Multiple Fields"
msgstr ""

#: ../source/tutorial/query-documents.txt:283
# aca9176a5c9c47d288f7b5817368af76
msgid "To match by multiple fields in the subdocument, you can use either dot notation or the :query:`$elemMatch` operator:"
msgstr ""

#: ../source/tutorial/query-documents.txt:286
# b59bf0e8e64c463fbc38da7629012473
msgid "The following example uses dot notation to query for documents where the value of the ``memos`` field is an array that has at least one subdocument that contains the field ``memo`` equal to ``'on time'`` and the field ``by`` equal to ``'shipping'``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:300
# 31a8852eb0d74533bdafa6a13739b639
msgid "The following example uses :query:`$elemMatch` to query for documents where the value of the ``memos`` field is an array that has at least one subdocument that contains the field ``memo`` equal to ``'on time'`` and the field ``by`` equal to ``'shipping'``:"
msgstr ""

