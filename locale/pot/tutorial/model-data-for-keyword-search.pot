# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-data-for-keyword-search.txt:3
# b4a57071616b445fb4fb4984b2be58b7
msgid "Model Data to Support Keyword Search"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:9
# 263845dea0b54af5b4c87fc54c4d967a
msgid "Keyword search is *not* the same as text search or full text search, and does not provide stemming or other text-processing features. See the :ref:`limit-keyword-indexes` section for more information."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:14
# d7fd8ee5fe664954aa2fb949088f1409
msgid "In 2.4, MongoDB provides a text search feature. See :doc:`/core/index-text` for more information."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:17
# 35c6aec394464d50a8a6706513f1e59e
msgid "If your application needs to perform queries on the content of a field that holds text you can perform exact matches on the text or use :query:`$regex` to use regular expression pattern matches. However, for many operations on text, these methods do not satisfy application requirements."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:23
# 7c999857e17a438f8ddb4044bd4c13ec
msgid "This pattern describes one method for supporting keyword search using MongoDB to support application search functionality, that uses keywords stored in an array in the same document as the text field. Combined with a :ref:`multi-key index <index-type-multikey>`, this pattern can support application's keyword search operations."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:30
# 56ea7b79b1f14cf3a9234c4e49730490
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:32
# 89847f0a4b2045ffa6e19da165b52375
msgid "To add structures to your document to support keyword-based queries, create an array field in your documents and add the keywords as strings in the array. You can then create a :ref:`multi-key index <index-type-multi-key>` on the array and create queries that select values from the array."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:40
# 2e573a22a8ef42afab9f1c8c4c3f2437
msgid "Given a collection of library volumes that you want to provide topic-based search. For each volume, you add the array ``topics``, and you add as many keywords as needed for a given volume."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:44
# c3085fd3a21a42ec8112cc866481cae8
msgid "For the ``Moby-Dick`` volume you might have the following document:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:56
# 64fbdebfc1f144769b282575ee17427e
msgid "You then create a multi-key index on the ``topics`` array:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:62
# dfe678dcbd3d40a8819c554c31e35093
msgid "The multi-key index creates separate index entries for each keyword in the ``topics`` array. For example the index contains one entry for ``whaling`` and another for ``allegory``."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:66
# 31ebefd0f9cd4063bd93023e5ffae4f7
msgid "You then query based on the keywords. For example:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:72
# 886e723c5c6a41f29568d1993f5ff2e1
msgid "An array with a large number of elements, such as one with several hundreds or thousands of keywords will incur greater indexing costs on insertion."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:79
# 908342a5b2664d2fba70b232a814bbb0
msgid "Limitations of Keyword Indexes"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:81
# 03d6f05fdc4a4018ac8b7d9b2b99aff2
msgid "MongoDB can support keyword searches using specific data models and :ref:`multi-key indexes <index-type-multikey>`; however, these keyword indexes are not sufficient or comparable to full-text products in the following respects:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:86
# 2fe42454b0874daba6dfcae28f923a1a
msgid "*Stemming*. Keyword queries in MongoDB can not parse keywords for root or related words."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:89
# f06456c3d1b34b37a5bbb4abb14a4f42
msgid "*Synonyms*. Keyword-based search features must provide support for synonym or related queries in the application layer."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:92
# 6b432474a02c433aa1f4f5f5c1cf4b88
msgid "*Ranking*. The keyword look ups described in this document do not provide a way to weight results."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:95
# 389760b7d7154389a7785eede317b72c
msgid "*Asynchronous Indexing*. MongoDB builds indexes synchronously, which means that the indexes used for keyword indexes are always current and can operate in real-time. However, asynchronous bulk indexes may be more efficient for some kinds of content and workloads."
msgstr ""

