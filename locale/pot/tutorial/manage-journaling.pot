# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/manage-journaling.txt:3
# 64e0e38df7aa47518a77f0c3f8e98393
msgid "Manage Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:7
# 5a5be27c739e41d69b09fd6308469705
msgid "MongoDB uses *write ahead logging* to an on-disk :term:`journal` to guarantee :doc:`write operation </core/write-operations>` durability and to provide crash resiliency. Before applying a change to the data files, MongoDB writes the change operation to the journal. If MongoDB should terminate or encounter an error before it can write the changes from the journal to the data files, MongoDB can re-apply the write operation and maintain a consistent state."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:15
# 16b10ebe7f0a497d88063835827bcde2
msgid "*Without* a journal, if :program:`mongod` exits unexpectedly, you must assume your data is in an inconsistent state, and you must run either :doc:`repair </tutorial/recover-data-following-unexpected-shutdown>` or, preferably, :doc:`resync </tutorial/resync-replica-set-member>` from a clean member of the replica set."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:21
# 868b2750f97d45a1993cb8ee7d53e6b5
msgid "With journaling enabled, if :program:`mongod` stops unexpectedly, the program can recover everything written to the journal, and the data remains in a consistent state. By default, the greatest extent of lost writes, i.e., those not made to the journal, are those made in the last 100 milliseconds. See :setting:`journalCommitInterval` for more information on the default."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:28
# 0ba85e09fe2943b58d70c2265213ae4f
msgid "With journaling, if you want a data set to reside entirely in RAM, you need enough RAM to hold the data set plus the \"write working set.\" The \"write working set\" is the amount of unique data you expect to see written between re-mappings of the private view. For information on views, see :ref:`journaling-storage-views`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:36
# c7579b14f8f84dafadf12ee1ce896c03
msgid "For 64-bit builds of :program:`mongod`, journaling is enabled by default.  For other platforms, see :setting:`journal`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:41
# f860c5624a3c41e1b295aec8aa57a130
msgid "Procedures"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:44
# d3272d3070f440ed8e83ec2cf7e3d8c3
msgid "Enable Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:46
# a2d489af356e45a4bd0ab6d774e0c258
msgid "For 64-bit builds of :program:`mongod`, journaling is enabled by default."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:49
# 800043bee12549749a39aac64d789c69
msgid "To enable journaling, start :program:`mongod` with the :option:`--journal <mongod --journal>` command line option."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:52
# f8b4a531686044a6b0d5b5805a8a7df5
msgid "If no journal files exist, when :program:`mongod` starts, it must preallocate new journal files. During this operation, the :program:`mongod` is not listening for connections until preallocation completes: for some systems this may take a several minutes. During this period your applications and the :program:`mongo` shell are not available."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:60
# 63b112dd5bde443fb874bceceaec82ae
msgid "Disable Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:64
# eb645b16e4bd4a31a5eff691d25a5c31
msgid "Do not disable journaling on production systems. If your :program:`mongod` instance stops without shutting down cleanly unexpectedly for any reason, (e.g. power failure) and you are not running with journaling, then you must recover from an unaffected :term:`replica set` member or backup, as described in :doc:`repair  </tutorial/recover-data-following-unexpected-shutdown>`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:71
# 048ba8d60d4a400f91cedb407570056f
msgid "To disable journaling, start :program:`mongod` with the :option:`--nojournal <mongod --nojournal>` command line option."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:75
# 5f8d4dbe74d14404bbe9e09abe6a513b
msgid "Get Commit Acknowledgment"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:77
# a469b3b994394afb95fab89962bde545
msgid "You can get commit acknowledgment with the :dbcommand:`getLastError` command and the ``j`` option. For details, see :ref:`write-concern-operation`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:84
# 0dbfae9d173547b88ae42db3a5ec90d9
msgid "Avoid Preallocation Lag"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:86
# 1f7d2646c60f4563a57688aeee0ae128
msgid "To avoid :ref:`preallocation lag <journaling-journal-files>`, you can preallocate files in the journal directory by copying them from another instance of :program:`mongod`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:90
# 9c4eee7ce7b54dd7a02f299c85b67b35
msgid "Preallocated files do not contain data. It is safe to later remove them. But if you restart :program:`mongod` with journaling, :program:`mongod` will create them again."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:0
# e7357bf15b464f7091e3e33f34b0d481
msgid "Example"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:98
# 76ba8f9071e2433bb6e5c164b7cd3a5b
msgid "For demonstration purposes, the sequence starts by creating a set of journal files in the usual way."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:101
# 0e3838d7b96c41978ca1cd382656781d
msgid "Create a temporary directory into which to create a set of journal files:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:108
# 99079a33b2c44e2db51876ca4971cc2b
msgid "Create a set of journal files by staring a :program:`mongod` instance that uses the temporary directory:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:115
# be1af9fecd204251a5244e3a69498b0e
msgid "When you see the following log output, indicating :program:`mongod` has the files, press CONTROL+C to stop the :program:`mongod` instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:123
# 95decec74da24b1094dc05530a0a2d7a
msgid "Preallocate journal files for the new instance of :program:`mongod` by moving the journal files from the data directory of the existing instance to the data directory of the new instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:131
# 31b4557cfb4b45edb9ac7310e6e7c3d6
msgid "Start the new :program:`mongod` instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:138
# 29fa3f008ab447179a6883d9ff7a8d7f
msgid "Monitor Journal Status"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:140
# bd48e18113bb42df945dc289c65bcd6b
msgid "Use the following commands and methods to monitor journal status:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:142
# e34fb85a7c2b49069e0a235d1baa5c76
msgid ":dbcommand:`serverStatus`"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:144
# 4e020cfe3cb74faca9634310539720e9
msgid "The :dbcommand:`serverStatus` command returns database status information that is useful for assessing performance."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:147
# 660d20ef18424941bbab9f267dc468f2
msgid ":dbcommand:`journalLatencyTest`"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:149
# a041de83f5f949ba8196479f420940a5
msgid "Use :dbcommand:`journalLatencyTest` to measure how long it takes on your volume to write to the disk in an append-only fashion. You can run this command on an idle system to get a baseline sync time for journaling. You can also run this command on a busy system to see the sync time on a busy system, which may be higher if the journal directory is on the same volume as the data files."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:156
# 5417ab53ff284b52a947d7174f69e6a8
msgid "The :dbcommand:`journalLatencyTest` command also provides a way to check if your disk drive is buffering writes in its local cache. If the number is very low (i.e., less than 2 milliseconds) and the drive is non-SSD, the drive is probably buffering writes. In that case, enable cache write-through for the device in your operating system, unless you have a disk controller card with battery backed RAM."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:166
# d79fb831f1924fa8b868b353640206e6
msgid "Change the Group Commit Interval"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:170
# cd9507fe2b4f4e5d98791b9778d2ee33
msgid "You can set the group commit interval using the :option:`--journalCommitInterval <mongod --journalCommitInterval>` command line option. The allowed range is ``2`` to ``300`` milliseconds."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:174
# d7e433dfbf1b4d1582f49e176d421af6
msgid "Lower values increase the durability of the journal at the expense of disk performance."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:178
# 7247f3436c0142438755b7fcdb92482f
msgid "Recover Data After Unexpected Shutdown"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:180
# 308078fb96074400a24e5dcd380b740d
msgid "On a restart after a crash, MongoDB replays all journal files in the journal directory before the server becomes available. If MongoDB must replay journal files, :program:`mongod` notes these events in the log output."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:185
# dc470ccec225469bb49004c0e62003d7
msgid "There is no reason to run :dbcommand:`repairDatabase` in these situations."
msgstr ""

