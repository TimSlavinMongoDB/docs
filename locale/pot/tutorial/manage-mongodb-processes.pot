# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/manage-mongodb-processes.txt:3
# b43a5cdc2e0247eca1b0ed9b52751664
msgid "Manage ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:7
# 13efc600a01d42deba67f3c4bc59377e
msgid "MongoDB runs as a standard program. You can start MongoDB from a command line by issuing the :program:`mongod` command and specifying options. For a list of options, see :doc:`/reference/program/mongod`. MongoDB can also run as a Windows service. For details, see :ref:`tutorial-mongod-as-windows-service`. To install MongoDB, see :doc:`/installation`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:14
# bc0002f00654444d8408f503a779b71e
msgid "The following examples assume the directory containing the :program:`mongod` process is in your system paths. The :program:`mongod` process is the primary database process that runs on an individual server. :program:`mongos` provides a coherent MongoDB interface equivalent to a :program:`mongod` from the perspective of a client. The :program:`mongo` binary provides the administrative shell."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:22
# 339c89c5dffb449fb4d2084477ef4464
msgid "This document  page discusses the :program:`mongod` process; however, some portions of this document may be applicable to :program:`mongos` instances."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:26
# fe899be34d774e029c7060b60176b1a3
msgid ":doc:`/administration/configuration`, :doc:`/reference/program/mongod`, :doc:`/reference/program/mongos`, and :doc:`/reference/configuration-options`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:31
# f74979059ff445e98e723d9ec6908284
msgid "Start ``mongod``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:33
# 61adb5c18d2a49adbf88fcb01813fd05
msgid "By default, MongoDB stores data in the ``/data/db`` directory. On Windows, MongoDB stores data in ``C:\\data\\db``. On all platforms, MongoDB listens for connections from clients on port ``27017``."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:37
# d6c515c590c44b588992d3103844d9ce
msgid "To start MongoDB using all defaults, issue the following command at the system shell:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:45
# 0db3e20140014a81945488aed128e4e2
msgid "Specify a Data Directory"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:47
# 80aefd6d49a544b9bbcb0ead327e0e8d
msgid "If you want :program:`mongod` to store data files at a path *other than* ``/data/db`` you can specify a :setting:`dbpath`. The :setting:`dbpath` must exist before you start :program:`mongod`. If it does not exist, create the directory and the permissions so that :program:`mongod` can read and write data to this path. For more information on permissions, see the :ref:`security operations documentation <security-operations>`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:55
# b1c1d6ccefcc4ed88ae8e1915e044b4c
msgid "To specify a :setting:`dbpath` for :program:`mongod` to use as a data directory, use the :option:`--dbpath <mongod --dbpath>` option. The following invocation will start a :program:`mongod` instance and store data in the ``/srv/mongodb`` path"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:65
# 9729f1f5b89143c198af10fe7aa82704
msgid "Specify a TCP Port"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:67
# a2a783b13f8f4bd081232390a7288950
msgid "Only a single process can listen for connections on a network interface at a time. If you run multiple :program:`mongod` processes on a single machine, or have other processes that must use this port, you must assign each a different port to listen on for client connections."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:73
# 270ced8bbf7b43398cab4094f89df1a6
msgid "To specify a port to :program:`mongod`, use the :option:`--port <mongod --port>` option on the command line. The following command starts :program:`mongod` listening on port ``12345``:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:81
# 99f3607d1b0b40d8aea82668b41b5bda
msgid "Use the default port number when possible, to avoid confusion."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:84
# b30b3a0f01bd452598a87d58de9260a5
msgid "Start ``mongod`` as a Daemon"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:86
# 7f9292d4bde54225bf89b14ffc57c43b
msgid "To run a :program:`mongod` process as a daemon (i.e. :setting:`fork`), *and* write its output to a log file, use the :option:`--fork <mongod --fork>` and :option:`--logpath <mongod --logpath>` options. You must create the log directory; however, :program:`mongod` will create the log file if it does not exist."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:92
# f4a56910247c42b4b5aa845e0c4bd8b2
msgid "The following command starts :program:`mongod` as a daemon and records log output to ``/var/log/mongodb.log``."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:100
# e7111606fd46487285a177b173e8a086
msgid "Additional Configuration Options"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:102
# 322cb7912f6a4e48bfe60e8cde0682db
msgid "For an overview of common configurations and common configuration deployments. configurations for common use cases, see :doc:`/administration/configuration`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:107
# a6c3f3ab9ab647b49eeb6c7cdc36710f
msgid "Stop ``mongod``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:109
# 72639645d721462a99aa11aca8ae32e6
msgid "In a clean shutdown a :program:`mongod` completes all pending operations, flushes all data to data files, and closes all data files. Other shutdowns are *unclean* and can compromise the validity the data files."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:120
# b538d36caaf74f62b5c3c68f73336d38
msgid "To ensure a clean shutdown, always shutdown :program:`mongod` instances using one of the following methods:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:124
# e0a715b7d76443cb95b890b0fa9ce764
msgid "Use ``shutdownServer()``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:126
# cf08cf13351447a98921d9bf2938e51f
msgid "Shut down the :program:`mongod` from the :program:`mongo` shell using the :method:`db.shutdownServer()` method as follows:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:134
# 63460fe26efb4cd0841aacfdf482d24c
msgid "Calling the same method from a control script accomplishes the same result."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:136
# ff5d7eb39d1f45d6a16422f6d42c25fb
msgid "For systems with :setting:`auth` enabled, users may only issue :method:`db.shutdownServer()` when authenticated to the ``admin`` database or via the localhost interface on systems without authentication enabled."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:142
# 0f2f64010c0f4f3a905780b55c6bbeb5
msgid "Use ``--shutdown``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:144
# 24a9a76144c54f9ba11a4bb7a6797476
msgid "From the Linux command line, shut down the :program:`mongod` using the :option:`--shutdown <mongod --shutdown>` option in the following command:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:152
# 39f186f0595943ccb284071379719f60
msgid "Use ``CTRL-C``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:154
# b3df77d51da44c18807c05362d5d5e2f
msgid "When running the :program:`mongod` instance in interactive mode (i.e. without :option:`--fork <mongod --fork>`), issue ``Control-C`` to perform a clean shutdown."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:159
# 98f0c18bc66d4ceeb7461b2f667fc01a
msgid "Use ``kill``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:161
# b8a3028de9b047b0ac16b872eb11dd3f
msgid "From the Linux command line, shut down a specific :program:`mongod` instance using the following command:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:170
# 743a18e50b734b49843828327a20fc30
msgid "Never use ``kill -9`` (i.e. ``SIGKILL``) to terminate a mongod instance."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:173
# d8f2a73e77ce48d2af76c0222b15e6e2
msgid "Stop a Replica Set"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:176
# 2523f857aed44a1687bb7e0394cdf164
msgid "Procedure"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:178
# dc3a4f08b23e4399af0aa657cbcdd09f
msgid "If the :program:`mongod` is the :term:`primary` in a :term:`replica set`, the shutdown process for these :program:`mongod` instances has the following steps:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:182
# 3bf24111b61d4ff6b5cf671f4024b2ac
msgid "Check how up-to-date the :term:`secondaries <secondary>` are."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:184
# d4d093ec69744828ae75a8ebaaca0e8f
msgid "If no secondary is within 10 seconds of the primary, :program:`mongod` will return a message that it will not shut down. You can pass the :dbcommand:`shutdown` command a ``timeoutSecs`` argument to wait for a secondary to catch up."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:189
# aa17c35327684adea2746b5b65e60f1e
msgid "If there is a secondary within 10 seconds of the primary, the primary will step down and wait for the secondary to catch up."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:192
# 50f71b5e2aa742afaa5ae4425e659c32
msgid "After 60 seconds or once the secondary has caught up, the primary will shut down."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:196
# 0b996ad3d10041be83f1a7fcc3df3476
msgid "Force Replica Set Shutdown"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:198
# f596eafb618a4d30aeb005841e0203aa
msgid "If there is no up-to-date secondary and you want the primary to shut down, issue the :dbcommand:`shutdown` command with the ``force`` argument, as in the following :program:`mongo` shell operation:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:206
# d2091513c0b443dd859e2a300f33a37e
msgid "To keep checking the secondaries for a specified number of seconds if none are immediately up-to-date, issue :dbcommand:`shutdown` with the ``timeoutSecs`` argument. MongoDB will keep checking the secondaries for the specified number of seconds if none are immediately up-to-date. If any of the secondaries catch up within the allotted time, the primary will shut down. If no secondaries catch up, it will not shut down."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:213
# 0dee23c7f76648de8ae34d064b077f1a
msgid "The following command issues :dbcommand:`shutdown` with ``timeoutSecs`` set to ``5``:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:220
# 121fa6ec652f4c2694f8040cf1785e37
msgid "Alternately you can use the ``timeoutSecs`` argument with the :method:`db.shutdownServer()` method:"
msgstr ""

