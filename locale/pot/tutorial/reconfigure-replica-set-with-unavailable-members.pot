# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:3
# 7406b81ccb6b4559960529f86b676dc4
msgid "Reconfigure a Replica Set with Unavailable Members"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:7
# 14e1b3acbec242e086bde682ed740ec1
msgid "To reconfigure a :term:`replica set` when a **minority** of members are unavailable, use the :method:`rs.reconfig()` operation on the current :term:`primary`, following the example in the :ref:`Replica Set Reconfiguration Procedure <replica-set-reconfiguration-usage>`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:14
# 7a8ab443541c4aada1be09812b2642be
msgid "This document provides the following options for re-configuring a replica set when a **majority** of members are *not* accessible:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:17
# cf393aa5c23b45daaf2597dfc998df2c
msgid ":ref:`replica-set-force-reconfiguration`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:18
# f1633366fea74cb4bb02672dfa7f6da1
msgid ":ref:`replica-set-reconfigure-by-replacing`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:20
# 82b47d0a0694475c94be151babc1d1d2
msgid "You may need to use one of these procedures, for example, in a geographically distributed replica set, where *no* local group of members can reach a majority. See :ref:`replica-set-elections` for more information on this situation."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:29
# aaa43b9de2d945e68c8856848feb16e8
msgid "Reconfigure by Forcing the Reconfiguration"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:33
# 0cdfc60cb7324d14b44daaf156e22af0
msgid "This procedure lets you recover while a majority of :term:`replica set` members are down or unreachable. You connect to any surviving member and use the ``force`` option to the :method:`rs.reconfig()`  method."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:37
# bc6e1ca84bf744a083577310e12f94d4
msgid "The ``force`` option forces a new configuration onto the. Use this procedure only to recover from catastrophic interruptions. Do not use ``force`` every time you reconfigure. Also, do not use the ``force`` option in any automatic scripts and do not use ``force`` when there is still a :term:`primary`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:42
# 11d0189bdb1b411aa12b992b9725d017
msgid "To force reconfiguration:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:44
# 2157faaf6262459386b44654259396a9
msgid "Back up a surviving member."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:46
# 75273a5711de4df8b38810a184c61f13
msgid "Connect to a surviving member and save the current configuration. Consider the following example commands for saving the configuration:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:55
# 7763728d09314de88c3f64d2a533ee62
msgid "On the same member, remove the down and unreachable members of the replica set from the :data:`~local.system.replset.members` array by setting the array equal to the surviving members alone. Consider the following example, which uses the ``cfg`` variable created in the previous step:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:65
# 6d6bc0e330c9459c9d3f0d7845552b6b
msgid "On the same member, reconfigure the set by using the :method:`rs.reconfig()` command with the ``force`` option set to ``true``:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:73
# bcb6ad29491c4bf5ad27302342a9f3ba
msgid "This operation forces the secondary to use the new configuration. The configuration is then propagated to all the surviving members listed in the ``members`` array. The replica set then elects a new primary."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:79
# 0e2ea17b4be94436bc2fa3f17a0ddc17
msgid "When you use ``force : true``, the version number in the replica set configuration increases significantly, by tens or hundreds of thousands. This is normal and designed to prevent set version collisions if you accidentally force re-configurations on both sides of a network partition and then the network partitioning ends."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:86
# 773e4ad2137848df988622539a392e54
msgid "If the failure or partition was only temporary, shut down or decommission the removed members as soon as possible."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:92
# edd464958b93467494a21f2979da238a
msgid "Reconfigure by Replacing the Replica Set"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:94
# 8ebab23dfc1e4be9b5c0b479dd53f99b
msgid "Use the following procedure **only** for versions of MongoDB prior to version 2.0. If you're running MongoDB 2.0 or later, use the above procedure, :ref:`replica-set-force-reconfiguration`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:98
# aa0cb1a9ae134d9dba24a6b546bf41b0
msgid "These procedures are for situations where a *majority* of the :term:`replica set` members are down or unreachable. If a majority is *running*, then skip these procedures and instead use the :method:`rs.reconfig()` command according to the examples in :ref:`replica-set-reconfiguration-usage`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:104
# bd7aad1be83b46d6870d491e05ecc532
msgid "If you run a pre-2.0 version and a majority of your replica set is down, you have the two options described here. Both involve replacing the replica set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:109
# 11643b2d0c5b42b78bc5f223424c1775
msgid "Reconfigure by Turning Off Replication"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:111
# f3a728ead4fe40aaa09e1032093695c6
msgid "This option replaces the :term:`replica set` with a :term:`standalone` server."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:113
#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:151
# bb803b1d20c24f228cb88e82d746734c
# 8c11732ea47e4911b3959bb50cea2857
msgid "Stop the surviving :program:`mongod` instances. To ensure a clean shutdown, use an existing :term:`control script` or use the :method:`db.shutdownServer()` method."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:116
#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:155
# c6039b6a60ee48d0a32c61b72e55f169
# 3ac1500cc46540ec8c2b27081a4a3757
msgid "For example, to use the :method:`db.shutdownServer()` method, connect to the server using the :program:`mongo` shell and issue the following sequence of commands:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:125
# 4f47f0e5c0f8498a902545cd8967afd8
msgid "Create a backup of the data directory (i.e. :setting:`dbpath`) of the surviving members of the set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:131
# 42cc62cff0df41e3abcf54112cc58e17
msgid "Restart one of the :program:`mongod` instances *without* the :option:`--replSet <mongod --replSet>` parameter."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:134
# 103740e4618e433bbd32c55df5c13dc0
msgid "The data is now accessible and provided by a single server that is not a replica set member. Clients can use this server for both reads and writes."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:138
# eb0bd4a7726b4311881eab5475bd1a70
msgid "When possible, re-deploy a replica set to provide redundancy and to protect your deployment from operational interruption."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:144
# 6060457ff7b14213abed510bffb55e42
msgid "Reconfigure by \"Breaking the Mirror\""
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:146
# 9b23dcbbd2d541c590d276738043dc52
msgid "This option selects a surviving :term:`replica set` member to be the new :term:`primary` and to \"seed\" a new replica set. In the following procedure, the new primary is ``db0.example.net``. MongoDB copies the data from ``db0.example.net`` to all the other members."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:164
# af248aa4d5dc483a921a459782128654
msgid "Move the data directories (i.e. :setting:`dbpath`) for all the members except ``db0.example.net``, so that all the members except ``db0.example.net`` have empty data directories. For example:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:173
# 2be0e70e2e3c4ef18ba4b566e4c59f30
msgid "Move the data files for ``local`` database (i.e. ``local.*``) so that ``db0.example.net`` has no local database. For example"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:181
# c14e58fede7b46f386b04477ab7373e7
msgid "Start each member of the replica set normally."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:183
# e275e30088dd40a8a80242cd0e9f1c07
msgid "Connect to ``db0.example.net`` in a :program:`mongo` shell and run :method:`rs.initiate()` to initiate the replica set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:186
# df5882a5f36e4c1294f8229947c1220f
msgid "Add the other set members using :method:`rs.add()`. For example, to add a member running on ``db1.example.net`` at port ``27017``, issue the following command:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:194
# cfc6413307a1446f8595ed5cc3b18e3b
msgid "MongoDB performs an initial sync on the added members by copying all data from ``db0.example.net`` to the added members."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:197
# f17c83708e6d41039235470fb83aedc8
msgid ":doc:`/tutorial/resync-replica-set-member`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:25
# 68273a8473604603a1580a123a0a6d95
msgid "replica set"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:25
# 68273a8473604603a1580a123a0a6d95
msgid "reconfiguration"
msgstr ""

