# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/create-indexes-to-support-queries.txt:3
# be0569e265b945948ae10abb013518af
msgid "Create Indexes to Support Your Queries"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:7
# 73053d27fa334ad49b76d55a2264e88b
msgid "An index supports a query when the index contains all the fields scanned by the query. The query scans the index and not the collection. Creating indexes that supports queries results in greatly increased query performance."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:11
# 92523cb1317e45f0874846537e6d30bc
msgid "This document describes strategies for creating indexes that support queries."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:14
# 9a45487df317477b8495597d38db1065
msgid "Create a Single-Key Index if All Queries Use the Same, Single Key"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:16
# b74e5b55b3274149badd2fa2562ac120
msgid "If you only ever query on a single key in a given collection, then you need to create just one single-key index for that collection. For example, you might create an index on ``category`` in the ``product`` collection:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:27
# efa781345bdf4d948b868866ecb4a7ae
msgid "Create Compound Indexes to Support Several Different Queries"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:29
# 8e71f33babad4356ac6733771c5544b0
msgid "If you sometimes query on only one key and at other times query on that key combined with a second key, then creating a compound index is more efficient than creating a single-key index. MongoDB will use the compound index for both queries. For example, you might create an index on both ``category`` and ``item``."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:39
# a4fde33f80324e4c834a79abae802739
msgid "This allows you both options. You can query on just ``category``, and you also can query on ``category`` combined with ``item``. A single :ref:`compound index <index-type-compound>` on multiple fields can support all the queries that search a \"prefix\" subset of those fields."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:44
# 070df9ccb3a444a589156cc9d2b69140
msgid "With the exception of queries that use the :query:`$or` operator, a query does not use multiple indexes. A query uses only one index."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:0
# f3cfc31209074ffcab7f2e7f34b84174
msgid "Example"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:50
# 8ab3a526662c4f9f848f74d3a9976eb2
msgid "The following index on a collection:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:56
# b61eb068ecff41d09d85166729e7e28b
msgid "Can support queries that the following indexes support:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:63
# 1107372fe529410e863830d136716404
msgid "There are some situations where the prefix indexes may offer better query performance: for example if ``z`` is a large array."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:66
# a5e949ffefe74d4f929412001b932602
msgid "The ``{ x: 1, y: 1, z: 1 }`` index can also support many of the same queries as the following index:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:73
# 6927b3230d7d484a90782bc21dbfe2fe
msgid "Also, ``{ x: 1, z: 1 }`` has an additional use. Given the following query:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:80
# 0e6764d57d114f5ba3f3c1629d0cd927
msgid "The ``{ x: 1, z: 1 }`` index supports both the query and the sort operation, while the ``{ x: 1, y: 1, z: 1 }`` index only supports the query. For more information on sorting, see :ref:`sorting-with-indexes`."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:89
# 217637fc86974732b3a13a47ea15531d
msgid "Create Indexes that Support Covered Queries"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:91
# e84b764c00de4195a8d4ec08039df573
msgid "A covered query is a query in which:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:93
# 0670d5ee965442d5953cd9c6fc0ccc7c
msgid "all the fields in the :ref:`query <read-operations-query-document>` are part of an index, **and**"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:96
# 3278b5eb808442418ce4a5370af4e1f0
msgid "all the fields returned in the results are in the same index."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:98
# 53508280f1204870b787beb4965c4a1a
msgid "Because the index \"covers\" the query, MongoDB can both match the :ref:`query conditions <read-operations-query-document>` **and** return the results using only the index; MongoDB does not need to look at the documents, only the index, to fulfill the query. An index can also cover an :ref:`aggregation pipeline operation <aggregation-pipeline-operators-and-performance>` on unsharded collections."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:106
# 6cfaa29ec6014d9589f732b68d359d95
msgid "Querying *only* the index can be much faster than querying documents outside of the index. Index keys are typically smaller than the documents they catalog, and indexes are typically available in RAM or located sequentially on disk."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:111
# fabae1f619f449ba87ed69bbd285d10b
msgid "MongoDB automatically uses an index that covers a query when possible. To ensure that an index can *cover* a query, create an index that includes all the fields listed in the :ref:`query document <read-operations-query-document>` and in the query result. You can specify the fields to return in the query results with a :ref:`projection <projection>` document. By default, MongoDB includes the ``_id`` field in the query result. So, if the index does **not** include the ``_id`` field, then you must exclude the ``_id`` field (i.e. ``_id: 0``) from the query results."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:123
# da3c85e2358a426d9a016a59e13eaa9d
msgid "Given collection ``users`` with an index on the fields ``user`` and ``status``, as created by the following option:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:130
# 161869dfa25c474ab36bd6ba2da10d1a
msgid "Then, this index will cover the following query which selects on the ``status`` field and returns only the ``user`` field:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:137
# 38689f2ad28f4fceb90baa97600e6e4b
msgid "In the operation, the projection document explicitly specifies ``_id: 0`` to exclude the ``_id`` field from the result since the index is only on the ``status`` and the ``user`` fields."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:141
# 63d7e4076b2d431f86953f771cfa5319
msgid "If the projection document does not specify the exclusion of the ``_id`` field, the query returns the ``_id`` field. The following query is **not** covered by the index on the ``status`` and the ``user`` fields because with the projection document ``{ user: 1 }``, the query returns both the ``user`` field and the ``_id`` field:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:151
# 3bce5dac92164d23b3ee5d2535b7ccb0
msgid "An index **cannot** cover a query if:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:153
# cb3764159ada4e06a07573d7fa837ae5
msgid "any of the indexed fields in any of the documents in the collection includes an array. If an indexed field is an array, the index becomes a :ref:`multi-key index <index-type-multikey>` index and cannot support a covered query."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:158
# 3ab0f1103ee24d48a43dbc2d952ffda1
msgid "any of the indexed fields are fields in subdocuments. To index fields in subdocuments, use :term:`dot notation`. For example, consider a collection ``users`` with documents of the following form:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:166
# 1d014dc74f9a43799589a5829e980448
msgid "The collection has the following indexes:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:174
# 6334bcfea6dc46179cbc193d97115bd7
msgid "The ``{ user: 1 }`` index covers the following query:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:180
# d7f0f3325414466389393dcb7372504a
msgid "However, the ``{ \"user.login\": 1 }`` index does **not** cover the following query:"
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:187
# e9bf14a1238942f695eb7530466a7c1d
msgid "The query, however, does use the ``{ \"user.login\": 1 }`` index to find matching documents."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:190
# be92c4ade4b04f3e8b4cfd7107591d06
msgid "To determine whether a query is a covered query, use the :method:`~cursor.explain()` method. If the :method:`~cursor.explain()` output displays ``true`` for the :data:`~explain.indexOnly` field, the query is covered by an index, and MongoDB queries only that index to match the query **and** return the results."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:196
# e682baf85de340a0abb5dde3b354bc2c
msgid "For more information see :ref:`indexes-measuring-use`."
msgstr ""

