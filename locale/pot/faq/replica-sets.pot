# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/replica-sets.txt:3
# da73253d4eee4ad687a213b7803a7b6f
msgid "FAQ: Replica Sets and Replication in MongoDB"
msgstr ""

#: ../source/faq/replica-sets.txt:0
# e379eafd3aee4329a8aba2b62d41cab6
msgid "Frequently Asked Questions:"
msgstr ""

#: ../source/faq/replica-sets.txt:12
# b4df4b5c12df4bfe82d5598ba6168558
msgid "This document answers common questions about database replication in MongoDB."
msgstr ""

#: ../source/faq/replica-sets.txt:15
# 270c23f841a0417e94e1ea4987492872
msgid "If you don't find the answer you're looking for, check the :doc:`complete list of FAQs </faq>` or post your question to the `MongoDB User Mailing List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."
msgstr ""

#: ../source/faq/replica-sets.txt:20
# a86cf7516f254593b86ef764bc6e5511
msgid "What kinds of replication does MongoDB support?"
msgstr ""

#: ../source/faq/replica-sets.txt:22
# eb6b77df3cb140cbb17309b53300bc92
msgid "MongoDB supports master-slave replication and a variation on master-slave replication known as replica sets. Replica sets are the recommended replication topology."
msgstr ""

#: ../source/faq/replica-sets.txt:27
# b2902e0dc62c4922ad91b1afb8fbd64c
msgid "What do the terms \"primary\" and \"master\" mean?"
msgstr ""

#: ../source/faq/replica-sets.txt:29
# 5a6ee415dc084b77ac3215dd534c835d
msgid ":term:`Primary` and :term:`master` nodes are the nodes that can accept writes. MongoDB's replication is \"single-master:\" only one node can accept write operations at a time."
msgstr ""

#: ../source/faq/replica-sets.txt:33
# 2df5a608c93c4b45b84ad5b2e37e0422
msgid "In a replica set, if the current \"primary\" node fails or becomes inaccessible, the other members can autonomously :term:`elect <election>` one of the other members of the set to be the new \"primary\"."
msgstr ""

#: ../source/faq/replica-sets.txt:37
# f59cadc67c4344cbbaf1db5e51ace33e
msgid "By default, clients send all reads to the primary; however, :term:`read preference` is configurable at the client level on a per-connection basis, which makes it possible to send reads to secondary nodes instead."
msgstr ""

#: ../source/faq/replica-sets.txt:43
# 804861f6460946c691dc67e7df7a0d74
msgid "What do the terms \"secondary\" and \"slave\" mean?"
msgstr ""

#: ../source/faq/replica-sets.txt:45
# 554425e352854c70946dee40cd9be49f
msgid ":term:`Secondary` and :term:`slave` nodes are read-only nodes that replicate from the :term:`primary`."
msgstr ""

#: ../source/faq/replica-sets.txt:48
# 4d82cd89b7c843098421c8e7edf08d2c
msgid "Replication operates by way of an :term:`oplog`, from which secondary/slave members apply new operations to themselves. This replication process is asynchronous, so secondary/slave nodes may not always reflect the latest writes to the primary. But usually, the gap between the primary and secondary nodes is just few milliseconds on a local network connection."
msgstr ""

#: ../source/faq/replica-sets.txt:55
# cc8261e13dba4f97b53091e46384c89e
msgid "How long does replica set failover take?"
msgstr ""

#: ../source/faq/replica-sets.txt:57
# 1f863ff8403047058f3cb00ae814460e
msgid "It varies, but a replica set will select a new primary within a minute."
msgstr ""

#: ../source/faq/replica-sets.txt:59
# 9546167a70264fdebc0507bbe8d20e49
msgid "It may take 10-30 seconds for the members of a :term:`replica set` to declare a :term:`primary` inaccessible. This triggers an :term:`election`. During the election, the cluster is unavailable for writes."
msgstr ""

#: ../source/faq/replica-sets.txt:64
# 6a1a119e13dc40c9b8350f0d9cde590c
msgid "The election itself may take another 10-30 seconds."
msgstr ""

#: ../source/faq/replica-sets.txt:68
# 1e7035561bc2494f9f56f0d1a4027f97
msgid ":term:`Eventually consistent <eventual consistency>` reads, like the ones that will return from a replica set are only possible with a :term:`write concern` that permits reads from :term:`secondary` members."
msgstr ""

#: ../source/faq/replica-sets.txt:74
# b31da234cba943f28a073c29389e6b13
msgid "Does replication work over the Internet and WAN connections?"
msgstr ""

#: ../source/faq/replica-sets.txt:76
#: ../source/faq/replica-sets.txt:142
#: ../source/faq/replica-sets.txt:247
# af5abba2fc7d42f19a72a4a92172d06c
# fe233ba5069e4cd5a759d51026a5cca5
# 8b33cabd72014e34b0c588589b6ca58e
msgid "Yes."
msgstr ""

#: ../source/faq/replica-sets.txt:78
# 0ce8d8524c0d4417894b7de7eabcf01b
msgid "For example, a deployment may maintain a :term:`primary` and :term:`secondary` in an East-coast data center along with a :term:`secondary` member for disaster recovery in a West-coast data center."
msgstr ""

#: ../source/faq/replica-sets.txt:82
# 53370d6bb28b4310addc79b64fcc3a76
msgid ":doc:`/tutorial/deploy-geographically-distributed-replica-set`"
msgstr ""

#: ../source/faq/replica-sets.txt:85
# 0902f68c1fc146d88d2846f5622126eb
msgid "Can MongoDB replicate over a \"noisy\" connection?"
msgstr ""

#: ../source/faq/replica-sets.txt:87
# ce2c835908c049d8852ef01a02ffa046
msgid "Yes, but not without connection failures and the obvious latency."
msgstr ""

#: ../source/faq/replica-sets.txt:89
# 0e0eab4e0cb7425593dbfa5913161334
msgid "Members of the set will attempt to reconnect to the other members of the set in response to networking flaps. This does not require administrator intervention. However, if the network connections among the nodes in the replica set are very slow, it might not be possible for the members of the node to keep up with the replication."
msgstr ""

#: ../source/faq/replica-sets.txt:95
# 6b8fe8a1f63b44d49454755b8f1628b2
msgid "If the TCP connection between the secondaries and the :term:`primary` instance breaks, a :term:`replica set` will automatically elect one of the :term:`secondary` members of the set as primary."
msgstr ""

#: ../source/faq/replica-sets.txt:100
# 375a324836164b6fb951e15052d0aaf0
msgid "What is the preferred replication method: master/slave or replica sets?"
msgstr ""

#: ../source/faq/replica-sets.txt:104
# dfd6d3a5573c4c01837ec96fe11b0441
msgid ":term:`Replica sets <replica set>` are the preferred :term:`replication` mechanism in MongoDB. However, if your deployment requires more than 12 nodes, you must use master/slave replication."
msgstr ""

#: ../source/faq/replica-sets.txt:109
# ce71763af0c24bcd8ffda4c48bf56b7c
msgid "What is the preferred replication method: replica sets or replica pairs?"
msgstr ""

#: ../source/faq/replica-sets.txt:113
# df7b0eb73dfe4a20a8aa84f77d9608de
msgid ":term:`Replica sets <replica set>` replaced :term:`replica pairs` in version 1.6. :term:`Replica sets <replica set>` are the preferred :term:`replication` mechanism in MongoDB."
msgstr ""

#: ../source/faq/replica-sets.txt:118
# a27baf8fcde34266a33d82a06ee956b0
msgid "Why use journaling if replication already provides data redundancy?"
msgstr ""

#: ../source/faq/replica-sets.txt:120
# 81faba53546e4fd88a59f8be57302da7
msgid ":term:`Journaling <journal>` facilitates faster crash recovery. Prior to journaling, crashes often required :dbcommand:`database repairs <repairDatabase>` or full data resync. Both were slow, and the first was unreliable."
msgstr ""

#: ../source/faq/replica-sets.txt:124
# d9b4a7597c454bbe8396a3ad00a93e6e
msgid "Journaling is particularly useful for protection against power failures, especially if your replica set resides in a single data center or power circuit."
msgstr ""

#: ../source/faq/replica-sets.txt:128
# cba65b2bf9ed447c80455919b20c038d
msgid "When a :term:`replica set` runs with journaling, :program:`mongod` instances can safely restart without any administrator intervention."
msgstr ""

#: ../source/faq/replica-sets.txt:133
# 9c95a83bbfbf46b6a92e862924210335
msgid "Journaling requires some resource overhead for write operations. Journaling has no effect on read performance, however."
msgstr ""

#: ../source/faq/replica-sets.txt:136
# 9fed35b41ad14b10ae9fe21e0b6c3e33
msgid "Journaling is enabled by default on all 64-bit builds of MongoDB v2.0 and greater."
msgstr ""

#: ../source/faq/replica-sets.txt:140
# c4cde507f1b4460e9120efe7e92f5783
msgid "Are write operations durable if write concern does not acknowledge writes?"
msgstr ""

#: ../source/faq/replica-sets.txt:144
# c47c11d0bc3f47b88affe4bde4cd7947
msgid "However, if you want confirmation that a given write has arrived at the server, use :ref:`write concern <write-concern>`. The :dbcommand:`getLastError` command provides the facility for write concern. However, after the :ref:`default write concern change <driver-write-concern-change>`, the default write concern acknowledges all write operations, and unacknowledged writes must be explicitly configured. See the :doc:`/applications/drivers` documentation for your driver for more information."
msgstr ""

#: ../source/faq/replica-sets.txt:154
# b6868b927a42434e98cc14a5ef9b25b9
msgid "How many arbiters do replica sets need?"
msgstr ""

#: ../source/faq/replica-sets.txt:156
# 90737f89eebc4928aedde31fb2325e7f
msgid "Some configurations do not require any :term:`arbiter` instances. Arbiters vote in :term:`elections <election>` for :term:`primary` but do not replicate the data like :term:`secondary` members."
msgstr ""

#: ../source/faq/replica-sets.txt:161
# 37eca6b6829f490daa70511c89314359
msgid ":term:`Replica sets <replica set>` require a majority of the remaining nodes present to elect a primary. Arbiters allow you to construct this majority without the overhead of adding replicating nodes to the system."
msgstr ""

#: ../source/faq/replica-sets.txt:166
# fe5078e944fe4a24a80f1b2f559fde24
msgid "There are many possible replica set :doc:`architectures </core/replica-set-architectures>`."
msgstr ""

#: ../source/faq/replica-sets.txt:169
# 11805a95c2ec4875a6c28784bab81211
msgid "A replica set with an odd number of voting nodes does not need an arbiter."
msgstr ""

#: ../source/faq/replica-sets.txt:171
# d11a3a740b5a41d49739733f978ae096
msgid "A common configuration consists of two replicating nodes that include a :term:`primary` and a :term:`secondary`, as well as an :term:`arbiter` for the third node. This configuration makes it possible for the set to elect a primary in the event of failure, without requiring three replicating nodes."
msgstr ""

#: ../source/faq/replica-sets.txt:177
# e5a51c7d1a8e4e938cd22881c036b669
msgid "You may also consider adding an arbiter to a set if it has an equal number of nodes in two facilities and network partitions between the facilities are possible. In these cases, the arbiter will break the tie between the two facilities and allow the set to elect a new primary."
msgstr ""

#: ../source/faq/replica-sets.txt:183
# fb56bcfed0854715bc094dcd24d8c219
msgid ":doc:`/core/replica-set-architectures`"
msgstr ""

#: ../source/faq/replica-sets.txt:186
# 51505cd2b6e240689937bc1979e1912c
msgid "What information do arbiters exchange with the rest of the replica set?"
msgstr ""

#: ../source/faq/replica-sets.txt:188
# 16fc57fa6eea45ee9ec9da2e20d6834b
msgid "Arbiters never receive the contents of a collection but do exchange the following data with the rest of the replica set:"
msgstr ""

#: ../source/faq/replica-sets.txt:191
# 07f6b892e6b54fb0b3261cdcae77f5b9
msgid "Credentials used to authenticate the arbiter with the replica set. All MongoDB processes within a replica set use keyfiles. These exchanges are encrypted."
msgstr ""

#: ../source/faq/replica-sets.txt:195
# eeff1b16153543c497d055db4dbb3d26
msgid "Replica set configuration data and voting data. This information is not encrypted. Only credential exchanges are encrypted."
msgstr ""

#: ../source/faq/replica-sets.txt:198
# ba0259977860433587819ddf99262e0e
msgid "If your MongoDB deployment uses SSL, then all communications between arbiters and the other members of the replica set are secure. See the documentation for :doc:`/tutorial/configure-ssl` for more information. Run all arbiters on secure networks, as with all MongoDB components."
msgstr ""

#: ../source/faq/replica-sets.txt:0
# 71aa3f26798b4ce6a4fa19bffa80b0c9
msgid "See"
msgstr ""

#: ../source/faq/replica-sets.txt:208
# 5b63428558304862a928611f8ed79be4
msgid "Which members of a replica set vote in elections?"
msgstr ""

#: ../source/faq/replica-sets.txt:210
# 7cbc8a9c0bb94249aaf8a42e99bd00ed
msgid "All members of a replica set, unless the value of :data:`votes <local.system.replset.members[n].votes>` is equal to ``0``, vote in elections. This includes all :ref:`delayed <replica-set-delayed-members>`, :ref:`hidden <replica-set-hidden-members>` and :ref:`secondary-only <replica-set-secondary-only-members>` members, as well as the :ref:`arbiters <replica-set-arbiters>`."
msgstr ""

#: ../source/faq/replica-sets.txt:218
# 3538ec313d4a441e919d1ab7298638b7
msgid "Additionally, the :data:`~replSetGetStatus.members.state` of the voting members also determine whether the member can vote. Only voting members in the following states are eligible to vote:"
msgstr ""

#: ../source/faq/replica-sets.txt:222
# 1f7c66269f424be0a078fae116ab236d
msgid "``PRIMARY``"
msgstr ""

#: ../source/faq/replica-sets.txt:224
# f23b3a54806446f4a43b6cd5e0718287
msgid "``SECONDARY``"
msgstr ""

#: ../source/faq/replica-sets.txt:226
# ce711e5ad4f94ca5b88057fe0645bfc6
msgid "``RECOVERING``"
msgstr ""

#: ../source/faq/replica-sets.txt:228
# 91b1b381dba546b58388c0ac05700a0e
msgid "``ARBITER``"
msgstr ""

#: ../source/faq/replica-sets.txt:230
# c550de22d80848fda7aabeebed7d3e6e
msgid "``ROLLBACK``"
msgstr ""

#: ../source/faq/replica-sets.txt:232
#: ../source/faq/replica-sets.txt:242
# bcc80ebabe2d429cb035d7e31d661790
# 36aa25807cfc44e3aa5d66b28209f50a
msgid ":ref:`replica-set-elections`"
msgstr ""

#: ../source/faq/replica-sets.txt:235
# 40abb823cdea4b3dbee69a27d5a0171d
msgid "Do hidden members vote in replica set elections?"
msgstr ""

#: ../source/faq/replica-sets.txt:237
# 664e9a5ea9d848fc8483dd56a4d7fb34
msgid ":ref:`Hidden members <replica-set-hidden-members>` of :term:`replica sets <replica set>` *do* vote in elections. To exclude a member from voting in an :term:`election`, change the value of the member's :data:`~local.system.replset.members[n].votes` configuration to ``0``."
msgstr ""

#: ../source/faq/replica-sets.txt:245
# 83d9e6a02d1d4347862dc2c7f93fd3f9
msgid "Is it normal for replica set members to use different amounts of disk space?"
msgstr ""

#: ../source/faq/replica-sets.txt:249
# 0cccfe2e8e2c4aaa90ca2ce94710a427
msgid "Factors including: different oplog sizes, different levels of storage fragmentation, and MongoDB's data file pre-allocation can lead to some variation in storage utilization between nodes. Storage use disparities will be most pronounced when you add members at different times."
msgstr ""

