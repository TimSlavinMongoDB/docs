# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/fundamentals.txt:3
# eedbaaa71b6840448d7d19552be6ef0f
msgid "FAQ: MongoDB Fundamentals"
msgstr ""

#: ../source/faq/fundamentals.txt:0
# 20b9c81e104441a29d584f1181f36718
msgid "Frequently Asked Questions:"
msgstr ""

#: ../source/faq/fundamentals.txt:12
# 7266ae60bf194c858e404af5302733eb
msgid "This document addresses basic high level questions about MongoDB and its use."
msgstr ""

#: ../source/faq/fundamentals.txt:15
# 3254916198bb4f5ab451b2209665112c
msgid "If you don't find the answer you're looking for, check the :doc:`complete list of FAQs </faq>` or post your question to the `MongoDB User Mailing List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."
msgstr ""

#: ../source/faq/fundamentals.txt:20
# 3d46b9a970b54ec3b49718280e1a93ae
msgid "What kind of database is MongoDB?"
msgstr ""

#: ../source/faq/fundamentals.txt:22
# 65a8cb02be074346a35a4a4080758b8b
msgid "MongoDB is a :term:`document`\\-oriented DBMS. Think of MySQL but with :term:`JSON`-like objects comprising the data model, rather than RDBMS tables. Significantly, MongoDB supports neither joins nor transactions. However, it features secondary indexes, an expressive query language, atomic writes on a per-document level, and fully-consistent reads."
msgstr ""

#: ../source/faq/fundamentals.txt:28
# 344602014a2542048a58c6f7d55d413d
msgid "Operationally, MongoDB features master-slave replication with automated failover and built-in horizontal scaling via automated range-based partitioning."
msgstr ""

#: ../source/faq/fundamentals.txt:34
# 68447222206b47568c4b8e1393544c5b
msgid "MongoDB uses :term:`BSON`, a binary object format similar to, but more expressive than :term:`JSON`."
msgstr ""

#: ../source/faq/fundamentals.txt:38
# 9759763253684342bf32c8bf870bb32f
msgid "Do MongoDB databases have tables?"
msgstr ""

#: ../source/faq/fundamentals.txt:40
# fee7510d438e48b48ee4454e8922787c
msgid "Instead of tables, a MongoDB database stores its data in :term:`collections <collection>`, which are the rough equivalent of RDBMS tables. A collection holds one or more :term:`documents <document>`, which corresponds to a record or a row in a relational database table, and each document has one or more fields, which corresponds to a column in a relational database table."
msgstr ""

#: ../source/faq/fundamentals.txt:48
# 46505a52f4874490a7ebb086a3b51725
msgid "Collections have important differences from RDBMS tables. Documents in a single collection may have a unique combination and set of fields. Documents need not have identical fields. You can add a field to some documents in a collection without adding that field to all documents in the collection."
msgstr ""

#: ../source/faq/fundamentals.txt:59
# e0093179f2614ed291d9f41964117a50
msgid "Do MongoDB databases have schemas?"
msgstr ""

#: ../source/faq/fundamentals.txt:61
# 886d605dc4de495e894f76fd4d302ac9
msgid "MongoDB uses dynamic schemas. You can create collections without defining the structure, i.e. the fields or the types of their values, of the documents in the collection. You can change the structure of documents simply by adding new fields or deleting existing ones. Documents in a collection need not have an identical set of fields."
msgstr ""

#: ../source/faq/fundamentals.txt:67
# f50b44ef7260413ab3d122f34fdb6a2e
msgid "In practice, it is common for the documents in a collection to have a largely homogeneous structure; however, this is not a requirement. MongoDB's flexible schemas mean that schema migration and augmentation are very easy in practice, and you will rarely, if ever, need to write scripts that perform \"alter table\" type operations, which simplifies and facilitates iterative software development with MongoDB."
msgstr ""

#: ../source/faq/fundamentals.txt:78
# 0f2192b2792c439ab39f11114c79e2bf
msgid "What languages can I use to work with MongoDB?"
msgstr ""

#: ../source/faq/fundamentals.txt:80
# 36e791cbc3464b6dbdb8cd16f80dc715
msgid "MongoDB :term:`client drivers <driver>` exist for all of the most popular programming languages, and many other ones. See the :ecosystem:`latest list of drivers </drivers>` for details."
msgstr ""

#: ../source/faq/fundamentals.txt:86
# e7422f4b33094ace88b7c187a8b53e8c
msgid ":doc:`/applications/drivers`."
msgstr ""

#: ../source/faq/fundamentals.txt:89
# 9def0cac960c42d4b61036dcfe53a071
msgid "Does MongoDB support SQL?"
msgstr ""

#: ../source/faq/fundamentals.txt:91
# 7aa6a3fd90524994889e55bd0b151bbe
msgid "No."
msgstr ""

#: ../source/faq/fundamentals.txt:93
# 68afe760641a4ff9a172d8e83d1ee0a9
msgid "However, MongoDB does support a rich, ad-hoc query language of its own."
msgstr ""

#: ../source/faq/fundamentals.txt:96
# 2cd84938fd6e422a874303688cb7b525
msgid ":doc:`/reference/operator`"
msgstr ""

#: ../source/faq/fundamentals.txt:99
# 4fe0f273a1d945e79ab93b38fa4d1c8b
msgid "What are typical uses for MongoDB?"
msgstr ""

#: ../source/faq/fundamentals.txt:101
# 543441677a804ae2b1cb3dca155f354f
msgid "MongoDB has a general-purpose design, making it appropriate for a large number of use cases. Examples include content management systems, mobile applications, gaming, e-commerce, analytics, archiving, and logging."
msgstr ""

#: ../source/faq/fundamentals.txt:106
# 3bfaf144fabd4e4987e91eb8dcf5a192
msgid "Do not use MongoDB for systems that require SQL, joins, and multi-object transactions."
msgstr ""

#: ../source/faq/fundamentals.txt:110
# 65efdd0b63e74183ace898138f7fa303
msgid "Does MongoDB support transactions?"
msgstr ""

#: ../source/faq/fundamentals.txt:112
# d03ba6f03d2b4a139c768bec0b0e4c58
msgid "MongoDB does not provide ACID transactions."
msgstr ""

#: ../source/faq/fundamentals.txt:114
# 6512bf384ac74e68b0bbbfbbcd935e8b
msgid "However, MongoDB does provide some basic transactional capabilities. Atomic operations are possible within the scope of a single document: that is, we can debit ``a`` and credit ``b`` as a transaction if they are fields within the same document. Because documents can be rich, some documents contain thousands of fields, with support for testing fields in sub-documents."
msgstr ""

#: ../source/faq/fundamentals.txt:121
# 7335ecac21e34a02aec22346fdc0480f
msgid "Additionally, you can make writes in MongoDB durable (the 'D' in ACID). To get durable writes, you must enable journaling, which is on by default in 64-bit builds. You must also issue writes with a write concern of ``{j: true}`` to ensure that the writes block until the journal has synced to disk."
msgstr ""

#: ../source/faq/fundamentals.txt:127
# 2546d05d85f44950a64c329d7bb51e2c
msgid "Users have built successful e-commerce systems using MongoDB, but applications requiring multi-object commits with rollback generally aren't feasible."
msgstr ""

#: ../source/faq/fundamentals.txt:132
# 4388283776b64ebfb483b5015a2bac42
msgid "Does MongoDB require a lot of RAM?"
msgstr ""

#: ../source/faq/fundamentals.txt:134
# ade94a53b2a44c6d99a9bd8edd632e97
msgid "Not necessarily. It's certainly possible to run MongoDB on a machine with a small amount of free RAM."
msgstr ""

#: ../source/faq/fundamentals.txt:137
# a841b0e078674c489bf3963851873c21
msgid "MongoDB automatically uses all free memory on the machine as its cache. System resource monitors show that MongoDB uses a lot of memory, but its usage is dynamic. If another process suddenly needs half the server's RAM, MongoDB will yield cached memory to the other process."
msgstr ""

#: ../source/faq/fundamentals.txt:142
# 71d86376b468457aaa5f301313f40385
msgid "Technically, the operating system's virtual memory subsystem manages MongoDB's memory. This means that MongoDB will use as much free memory as it can, swapping to disk as needed. Deployments with enough memory to fit the application's working data set in RAM will achieve the best performance."
msgstr ""

#: ../source/faq/fundamentals.txt:148
# b59487022b034807acee7030895dfe57
msgid ":doc:`/faq/diagnostics` for answers to additional questions about MongoDB and Memory use."
msgstr ""

#: ../source/faq/fundamentals.txt:152
# d7c33f9b17394fdb86213e2203d934cd
msgid "How do I configure the cache size?"
msgstr ""

#: ../source/faq/fundamentals.txt:154
# bd5e330dcc794efcb06f1800ad8a745e
msgid "MongoDB has no configurable cache. MongoDB uses all *free* memory on the system automatically by way of memory-mapped files. Operating systems use the same approach with their file system caches."
msgstr ""

#: ../source/faq/fundamentals.txt:161
# 3acd9b1028f04efa87ff44c053521cca
msgid "Does MongoDB require a separate caching layer for application-level caching?"
msgstr ""

#: ../source/faq/fundamentals.txt:163
# a2480a1c95ba451c8386d2c7a6a194e9
msgid "No. In MongoDB, a document's representation in the database is similar to its representation in application memory. This means the database already stores the usable form of data, making the data usable in both the persistent store and in the application cache. This eliminates the need for a separate caching layer in the application."
msgstr ""

#: ../source/faq/fundamentals.txt:169
# e53c344f10644ce296f4cb15d7230c2d
msgid "This differs from relational databases, where caching data is more expensive. Relational databases must transform data into object representations that applications can read and must store the transformed data in a separate cache: if these transformation from data to application objects require joins, this process increases the overhead related to using the database which increases the importance of the caching layer."
msgstr ""

#: ../source/faq/fundamentals.txt:178
# b5fb7eecb6924b4eb73c87e3a19a6afd
msgid "Does MongoDB handle caching?"
msgstr ""

#: ../source/faq/fundamentals.txt:180
# 55a6ebf660a245248330a49518dba12d
msgid "Yes. MongoDB keeps all of the most recently used data in RAM. If you have created indexes for your queries and your working data set fits in RAM, MongoDB serves all queries from memory."
msgstr ""

#: ../source/faq/fundamentals.txt:184
# 2c66e8a12b264255a561fa628847c8d3
msgid "MongoDB does not implement a query cache: MongoDB serves all queries directly from the indexes and/or data files."
msgstr ""

#: ../source/faq/fundamentals.txt:188
# 5dffe85514c942229bd9a4a716a54c9b
msgid "Are writes written to disk immediately, or lazily?"
msgstr ""

#: ../source/faq/fundamentals.txt:190
# e8a569af86f947339fa19288e5c88399
msgid "Writes are physically written to the :doc:`journal </core/journaling>` within 100 milliseconds, by default. At that point, the write is \"durable\" in the sense that after a pull-plug-from-wall event, the data will still be recoverable after a hard restart. See :setting:`journalCommitInterval` for more information on the journal commit window."
msgstr ""

#: ../source/faq/fundamentals.txt:196
# 351fb29448444ef8ac4666dde551b149
msgid "While the journal commit is nearly instant, MongoDB writes to the data files lazily. MongoDB may wait to write data to the data files for as much as one minute by default. This does not affect durability, as the journal has enough information to ensure crash recovery. To change the interval for writing to the data files, see :setting:`syncdelay`."
msgstr ""

#: ../source/faq/fundamentals.txt:203
# df838a6ceb8d4398b6e1049bc0aa75ed
msgid "What language is MongoDB written in?"
msgstr ""

#: ../source/faq/fundamentals.txt:205
# 82277a608aa4451b8783ba1349ebe23e
msgid "MongoDB is implemented in C++. :term:`Drivers <driver>` and client libraries are typically written in their respective languages, although some drivers use C extensions for better performance."
msgstr ""

#: ../source/faq/fundamentals.txt:212
# db030c1e638a472291a26a3f6b32e645
msgid "What are the limitations of 32-bit versions of MongoDB?"
msgstr ""

#: ../source/faq/fundamentals.txt:214
# 57bb471817fa47d2b5725941483b6941
msgid "MongoDB uses :ref:`memory-mapped files <faq-storage-memory-mapped-files>`. When running a 32-bit build of MongoDB, the total storage size for the server, including data and indexes, is 2 gigabytes. For this reason, do not deploy MongoDB to production on 32-bit machines."
msgstr ""

#: ../source/faq/fundamentals.txt:220
# 31b4c6b68fa340459d49f13ee6a93371
msgid "If you're running a 64-bit build of MongoDB, there's virtually no limit to storage size. For production deployments, 64-bit builds and operating systems are strongly recommended."
msgstr ""

#: ../source/faq/fundamentals.txt:224
# 96d6b1546e564ad3864f539122af5a46
msgid "\"`Blog Post: 32-bit Limitations <http://blog.mongodb.org/post/137788967/32-bit-limitations>`_\""
msgstr ""

#: ../source/faq/fundamentals.txt:228
# 3f2e24ac232b460e97c7a4a766536e78
msgid "32-bit builds disable :term:`journaling <journal>` by default because journaling further limits the maximum amount of data that the database can store."
msgstr ""

