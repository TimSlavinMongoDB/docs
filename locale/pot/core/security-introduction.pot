# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/security-introduction.txt:3
# 091d6c33810c43e6a506c0d36e182f75
msgid "Security Introduction"
msgstr ""

#: ../source/core/security-introduction.txt:7
# 8c970e653ef640b29d0f46ae73d75c07
msgid "As with all software running in a networked environment, administrators of MongoDB must consider security and risk exposures for a MongoDB deployment. There are no magic solutions for risk mitigation, and maintaining a secure MongoDB deployment is an ongoing process."
msgstr ""

#: ../source/core/security-introduction.txt:13
# f6a5963430a74ca2841ffc2321edd8ab
msgid "Defense in Depth"
msgstr ""

#: ../source/core/security-introduction.txt:15
# c16ba435b1434a57beee5575ecc99f2f
msgid "The documents in this section takes a *Defense in Depth* approach to securing MongoDB deployments and addresses a number of different methods for managing risk and reducing risk exposure."
msgstr ""

#: ../source/core/security-introduction.txt:19
# e7da586dde534084ba447c80ca2a7723
msgid "The intent of a *Defense In Depth* approach is to ensure there are no exploitable points of failure in your deployment that could allow an intruder or un-trusted party to access the data stored in the MongoDB database. The easiest and most effective way to reduce the risk of exploitation is to run MongoDB in a trusted environment, limit access, follow a system of least privilege, and follow best development and deployment practices."
msgstr ""

#: ../source/core/security-introduction.txt:30
# 3dbe92c6b423495a9932c9c82d5ff1f1
msgid "Trusted Environments"
msgstr ""

#: ../source/core/security-introduction.txt:32
# 26edbd5f779946c18f7e949dee5b2af2
msgid "The most effective way to reduce risk for MongoDB deployments is to run your entire MongoDB deployment, including all MongoDB components (i.e. :program:`mongod`, :program:`mongos` and application instances) in a *trusted environment*. Trusted environments use the following strategies to control access:"
msgstr ""

#: ../source/core/security-introduction.txt:38
# aec99df73d89480a8a2880f6c76e5d02
msgid "Use network filter (e.g. firewall) rules that block all connections from unknown systems to MongoDB components."
msgstr ""

#: ../source/core/security-introduction.txt:41
# a01f7b40fb384cc7b0052308208ee059
msgid "Bind :program:`mongod` and :program:`mongos` instances to specific IP addresses to limit accessibility."
msgstr ""

#: ../source/core/security-introduction.txt:44
# 821b258539a740c8940965d2915de950
msgid "Limit MongoDB programs to non-public local networks, and virtual private networks."
msgstr ""

#: ../source/core/security-introduction.txt:50
# f3c10149f3ce40698fa30ee2588c48ea
msgid "Operational Practices to Reduce Risk"
msgstr ""

#: ../source/core/security-introduction.txt:52
# 9279899db53a451db2698ff803fecbeb
msgid "You may further reduce risk by :doc:`controlling access </core/access-control>` to the database by employing authentication and authorization. Require :ref:`authentication <authentication>` for access to MongoDB instances and require strong, complex, single purpose authentication credentials. This should be part of your internal security policy. Employ :ref:`authorization <authorization>` and deploy a model of least privilege, where all users have *only* the amount of access they need to accomplish required tasks and no more. See :doc:`/core/access-control` for more information."
msgstr ""

#: ../source/core/security-introduction.txt:62
# ede1d3bab0e74320bcd434721d609478
msgid "Follow the best application development and deployment practices, which includes: validating all inputs, managing sessions, and application-level access control."
msgstr ""

#: ../source/core/security-introduction.txt:66
# 335ba5a3136841fe9a9cfc99f63a9e52
msgid "Always run the :program:`mongod` or :program:`mongos` process as a *unique* user with the minimum required permissions and access. Never run a MongoDB program as a ``root`` or administrative users. The system users that run the MongoDB processes should have robust authentication credentials that prevent unauthorized or casual access."
msgstr ""

#: ../source/core/security-introduction.txt:72
# b2ac6133a11d44aba7c574fc9dbbfb61
msgid "To further limit the environment, you can run the :program:`mongod` or :program:`mongos` process in a ``chroot`` environment. Both user-based access restrictions and ``chroot`` configuration follow recommended conventions for administering all daemon processes on Unix-like systems."
msgstr ""

#: ../source/core/security-introduction.txt:79
# 576abd2fc2274f15a7a9bbbceda3c337
msgid "Data Encryption"
msgstr ""

#: ../source/core/security-introduction.txt:81
# ac52ac6be3114a7d88722b3a4d2e4f45
msgid "To support audit requirements, you may need to encrypt data stored in MongoDB. For best results, you can encrypt this data in the application layer by encrypting the content of fields that hold secure data."
msgstr ""

#: ../source/core/security-introduction.txt:85
# a9e4f1f1ddbd4d3aac2d7838ff6366eb
msgid "Additionally, `MongoDB`_ has a `partnership`_ with `Gazzang`_ to encrypt and secure sensitive data within MongoDB. The solution encrypts data in real time and Gazzang provides advanced key management that ensures only authorized processes can access this data. The Gazzang software ensures that the cryptographic keys remain safe and ensures compliance with standards including HIPAA, PCI-DSS, and FERPA."
msgstr ""

#: ../source/core/security-introduction.txt:92
# aa9fea57008b46bbbbd89adf0659d820
msgid "For more information, refer to the following resources: `Datasheet`_ and `Webinar`_."
msgstr ""

#: ../source/core/security-introduction.txt:102
# 77f9fb01585e44e8bae1b5974621e71d
msgid "Additional Security Strategies"
msgstr ""

#: ../source/core/security-introduction.txt:104
# 180fee79422149c99f62833c7592ee97
msgid "MongoDB provides various strategies to reduce network risk, such as configuring MongoDB or configuring firewalls for MongoDB. See :doc:`/core/security-network` for more information."
msgstr ""

#: ../source/core/security-introduction.txt:108
# 60c2c0e5d56b4df8be8e753b9187f5c0
msgid "In addition, consider the strategies listed in :doc:`/core/security-interface` to reduce interface-related risks for the :program:`mongo` shell, HTTP status interface and the REST API."
msgstr ""

#: ../source/core/security-introduction.txt:112
# 7143fd1b99ca478e93066047249becfc
msgid "MongoDB Enterprise supports authentication using Kerberos. For Linux systems, see :doc:`/tutorial/control-access-to-mongodb-with-kerberos-authentication`."
msgstr ""

#: ../source/core/security-introduction.txt:117
# b8bf9d14db5a4bb99c53d21ed24a434e
msgid "Vulnerability Notification"
msgstr ""

#: ../source/includes/fact-report-security-vulnerability.rst:1
# 049c4117fe6d403cb9a2342f620d75fd
msgid "MongoDB takes security very seriously. If you discover a vulnerability in MongoDB, or would like to know more about our vulnerability reporting and response process, see the :doc:`/tutorial/create-a-vulnerability-report` document."
msgstr ""

