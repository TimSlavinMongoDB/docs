# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-creation.txt:7
# 36979eebfa4849ddba8bcc2aa00c29df
msgid "Index Creation"
msgstr ""

#: ../source/core/index-creation.txt:11
# 2ca9bf12420445c9893380e2db400b4c
msgid "MongoDB provides several options that *only* affect the creation of the index. Specify these options in a document as the second argument to the :method:`db.collection.ensureIndex()` method. This section describes the uses of these creation options and their behavior."
msgstr ""

#: ../source/core/index-creation.txt:0
# 66d9602cbf094a8baced08f0cba58c45
msgid "Related"
msgstr ""

#: ../source/core/index-creation.txt:18
# 43e57ea8b8114e90bc856e13e3914671
msgid "Some options that you can specify to :method:`~db.collection.ensureIndex()` options control the :doc:`properties of the index </core/index-properties>`, which are *not* index creation options. For example, the :doc:`unique </core/index-unique>` option affects the behavior of the index after creation."
msgstr ""

#: ../source/core/index-creation.txt:25
# 849fde99cb374f70adb04ce0bb1f1299
msgid "For a detailed description of MongoDB's index types, see :doc:`/core/index-types` and :doc:`/core/index-properties` for related documentation."
msgstr ""

#: ../source/core/index-creation.txt:33
# d4d333dbe84044c7b8f5ee9dab647c0b
msgid "Background Construction"
msgstr ""

#: ../source/core/index-creation.txt:35
# d2c0927111a44372a463928d756b8aa4
msgid "By default, creating an index blocks all other operations on a database. When building an index on a collection, the database that holds the collection is unavailable for read or write operations until the index build completes. Any operation that requires a read or write lock on all databases (e.g. :command:`listDatabases`) will wait for the foreground index build to complete."
msgstr ""

#: ../source/core/index-creation.txt:42
# 4d8a6c776c7440768eea9e50b26d3951
msgid "For potentially long running index building operations, consider the ``background`` operation so that the MongoDB database remains available during the index building operation. For example, to create an index in the background of the ``zipcode`` field of the ``people`` collection, issue the following:"
msgstr ""

#: ../source/core/index-creation.txt:52
# 9f17df63881046aaa11daa13b9bcd671
msgid "By default, ``background`` is ``false`` for building MongoDB indexes."
msgstr ""

#: ../source/core/index-creation.txt:54
# 2f057c8cd7eb4490a6b6d7206f8a8b7c
msgid "You can combine the background option with other options, as in the following:"
msgstr ""

#: ../source/core/index-creation.txt:62
# eef4d932b4644bfb86e2ffc9d028d077
msgid "Behavior"
msgstr ""

#: ../source/core/index-creation.txt:64
# 611a13a091f041c197e72f374a710586
msgid "As of MongoDB version 2.4, a :program:`mongod` instance can build more than one index in the background concurrently."
msgstr ""

#: ../source/core/index-creation.txt:67
# 84941fc6d36f4f2dac9ebc58fb030074
msgid "Before 2.4, a :program:`mongod` instance could only build one background index per database at a time."
msgstr ""

#: ../source/core/index-creation.txt:71
# f70600e19f99429d9883455d8c04c2a9
msgid "Before 2.2, a single :program:`mongod` instance could only build one index at a time."
msgstr ""

#: ../source/core/index-creation.txt:75
# 969676012b7f472486a4c8fc569351dc
msgid "Background indexing operations run in the background so that other database operations can run while creating the index. However, the :program:`mongo` shell session or connection where you are creating the index *will* block until the index build is complete. To continue issuing commands to the database, open another connection or :program:`mongo` instance."
msgstr ""

#: ../source/core/index-creation.txt:82
# 8918d7f2dc1346f18f85e8a4bdf643a8
msgid "Queries will not use partially-built indexes: the index will only be usable once the index build is complete."
msgstr ""

#: ../source/core/index-creation.txt:87
# b203e81ad7f54efda45815bf05df22d0
msgid "If MongoDB is building an index in the background, you cannot perform other administrative operations involving that collection, including running :dbcommand:`repairDatabase`, dropping the collection (i.e. :method:`db.collection.drop()`), and running :dbcommand:`compact`. These operations will return an error during background index builds."
msgstr ""

#: ../source/core/index-creation.txt:95
# 1d2c6f9c9ede48d8a4b55f6652e9f683
msgid "Performance"
msgstr ""

#: ../source/core/index-creation.txt:97
# d1939cf7fe5445a0b355dc62a345f2a2
msgid "The background index operation uses an incremental approach that is slower than the normal \"foreground\" index builds. If the index is larger than the available RAM, then the incremental process can take *much* longer than the foreground build."
msgstr ""

#: ../source/core/index-creation.txt:102
# 375d0186f7604fd4be779f577c59e9d1
msgid "If your application includes :method:`ensureIndex() <db.collection.ensureIndex()>` operations, and an index *doesn't* exist for other operational concerns, building the index can have a severe impact on the performance of the database."
msgstr ""

#: ../source/core/index-creation.txt:108
# 5e2d9f55b68e486daa506445eb280ec2
msgid "To avoid performance issues, make sure that your application checks for the indexes at start up using the :method:`~db.collection.getIndexes()` method or the :api:`equivalent method for your driver <>` and terminates if the proper indexes do not exist. Always build indexes in production instances using separate application code, during designated maintenance windows."
msgstr ""

#: ../source/core/index-creation.txt:116
# 39ba677930ef4ccf8fa76e0767dfa50e
msgid "Building Indexes on Secondaries"
msgstr ""

#: ../source/core/index-creation.txt:118
# 53814e8bc7a64ba591492b108e69e974
msgid "Secondary members can now build indexes in the background. Previously all index builds on secondaries were in the foreground."
msgstr ""

#: ../source/core/index-creation.txt:123
# f399ae66faa1422ab6554bc8bf0a33a2
msgid "Background index operations on a :term:`replica set` :term:`secondaries <secondary>` begin after the :term:`primary` completes building the index. If MongoDB builds an index in the background on the primary, the secondaries will then build that index in the background."
msgstr ""

#: ../source/core/index-creation.txt:129
# 7169e40a181b40b8ad591b8839cb9186
msgid "To build large indexes on secondaries the best approach is to restart one secondary at a time in :term:`standalone` mode and build the index. After building the index, restart as a member of the replica set, allow it to catch up with the other members of the set, and then build the index on the next secondary. When all the secondaries have the new index, step down the primary, restart it as a standalone, and build the index on the former primary."
msgstr ""

#: ../source/core/index-creation.txt:137
# 265eaecf3df74bb3be31b9e5164cdf41
msgid "The amount of time required to build the index on a secondary must be within the window of the :term:`oplog`, so that the secondary can catch up with the primary."
msgstr ""

#: ../source/core/index-creation.txt:141
# 7034985103ca4cf78650fffc9af13ff1
msgid "Indexes on secondary members in \"recovering\" mode are always built in the foreground to allow them to catch up as soon as possible."
msgstr ""

#: ../source/core/index-creation.txt:144
# 85b4a8383b17405bb13ef0bde813a7fe
msgid "See :ref:`index-building-replica-sets` for a complete procedure for building indexes on secondaries."
msgstr ""

#: ../source/core/index-creation.txt:152
# 6256743437a44d40b8640678947cd02e
msgid "Drop Duplicates"
msgstr ""

#: ../source/core/index-creation.txt:154
# 3068a9b4e7774f51a762582bd578ab71
msgid "MongoDB cannot create a :ref:`unique index <index-type-unique>` on a field that has duplicate values. To force the creation of a unique index, you can specify the ``dropDups`` option, which will only index the first occurrence of a value for the key, and delete all subsequent values."
msgstr ""

#: ../source/core/index-creation.txt:162
# b5b2c9d6e8e147c8b14c623f552879bc
msgid "As in all unique indexes, if a document does not have the indexed field, MongoDB will include it in the index with a \"null\" value."
msgstr ""

#: ../source/core/index-creation.txt:165
# cb8ce59633204d6099924316508cfa5c
msgid "If subsequent fields *do not* have the indexed field, and you have set ``{dropDups: true}``, MongoDB will remove these documents from the collection when creating the index. If you combine ``dropDups`` with the :ref:`sparse <index-type-sparse>` option, this index will only include documents in the index that have the value, and the documents without the field will remain in the database."
msgstr ""

#: ../source/core/index-creation.txt:172
# 646eeede678f4d65b091190b700885f6
msgid "To create a unique index that drops duplicates on the ``username`` field of the ``accounts`` collection, use a command in the following form:"
msgstr ""

#: ../source/core/index-creation.txt:181
# 58cec7bd527a4fee92522a45b469f605
msgid "Specifying ``{ dropDups: true }`` will delete data from your database. Use with extreme caution."
msgstr ""

#: ../source/core/index-creation.txt:184
# cf0670dade83462ab1dd93a057cb8e35
msgid "By default, ``dropDups`` is ``false``."
msgstr ""

#: ../source/core/index-creation.txt:190
# b6df6524c2dd43e3b6ef2ce3b3b7efcf
msgid "Index Names"
msgstr ""

#: ../source/core/index-creation.txt:194
# d1264789fd1c4f3881e07cfcf6099a56
msgid "The default name for an index is the concatenation of the indexed keys and each key's direction in the index, 1 or -1."
msgstr ""

#: ../source/core/index-creation.txt:0
#: ../source/core/index-creation.txt:0
# 8bedab3c39cc4380bff74bd813d52cef
# ec9e043cb17540b09115be0b775c793b
msgid "Example"
msgstr ""

#: ../source/core/index-creation.txt:204
# 8725b3a87dba41a3aec85223f77c4389
msgid "The resulting index is named: ``item_1_quantity_-1``."
msgstr ""

#: ../source/core/index-creation.txt:206
# 2619233b74804dadab4cd9df0e01709e
msgid "Optionally, you can specify a name for an index instead of using the default name."
msgstr ""

#: ../source/core/index-creation.txt:216
# 72eb1ce0c76c438c8afac5b1fd988c1f
msgid "The resulting index has the name ``inventory``."
msgstr ""

#: ../source/core/index-creation.txt:218
# 905ae8b8a8ca4ee8a8f0c4c517780b12
msgid "To view the name of an index, use the :method:`getIndexes() <db.collection.getIndexes()>` method."
msgstr ""

#: ../source/core/index-creation.txt:1
#: ../source/core/index-creation.txt:29
#: ../source/core/index-creation.txt:147
#: ../source/core/index-creation.txt:148
#: ../source/core/index-creation.txt:186
# b2272242ec7c417da0f8e0e63e199308
# 8bffc79da8d84996af0573c0fa97d0a4
# 2a42b339fa9f477ca628da963c964868
# 90173ba19aa64e498f0b44460a5d4955
# e46c0851768f4ab4883c5060aee2e86a
msgid "index"
msgstr ""

#: ../source/core/index-creation.txt:1
# b2272242ec7c417da0f8e0e63e199308
msgid "options"
msgstr ""

#: ../source/core/index-creation.txt:29
# 8bffc79da8d84996af0573c0fa97d0a4
msgid "background creation"
msgstr ""

#: ../source/core/index-creation.txt:147
# 2a42b339fa9f477ca628da963c964868
msgid "duplicates"
msgstr ""

#: ../source/core/index-creation.txt:148
# 90173ba19aa64e498f0b44460a5d4955
msgid "drop duplicates"
msgstr ""

#: ../source/core/index-creation.txt:186
# e46c0851768f4ab4883c5060aee2e86a
msgid "name"
msgstr ""

