# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/data-model-design.txt:5
# 62e0528dcda94cf89da88827ba483b5c
msgid "Data Model Design"
msgstr ""

#: ../source/core/data-model-design.txt:9
# d585800b526a435188896bcf7410084f
msgid "Effective data models support your application needs. The key consideration for the structure of your documents is the decision to :ref:`embed <data-modeling-embedding>` or to :ref:`use references <data-modeling-referencing>`."
msgstr ""

#: ../source/core/data-model-design.txt:17
# 84a5f74952154d8084f11e0777b7af75
msgid "Embedded Data Models"
msgstr ""

#: ../source/core/data-model-design.txt:19
# 8341ba9309be4fea865a7280dcc46c32
msgid "With MongoDB, you may embed related data in a single structure or document. These schema are generally known as \"denormalized\" models, and take advantage of MongoDB's rich documents. Consider the following diagram:"
msgstr ""

#: ../source/core/data-model-design.txt:26
# f10e551507694b92a5033493821960b4
msgid "Embedded data models allow applications to store related pieces of information in the same database record. As a result, applications may need to issue fewer queries and updates to complete common operations."
msgstr ""

#: ../source/core/data-model-design.txt:30
# 085a8bdd680146f4bfbe112a8f5ef055
msgid "In general, use embedded data models when:"
msgstr ""

#: ../source/core/data-model-design.txt:32
# d7eb0e840a7340a182d0cad439a60e18
msgid "you have \"contains\" relationships between entities. See :ref:`data-modeling-example-one-to-one`."
msgstr ""

#: ../source/core/data-model-design.txt:35
# 666d1842e226442fadd14f1474d07a42
msgid "you have one-to-many relationships between entities. In these relationships the \"many\" or child documents always appear with or are viewed in the context of the \"one\" or parent documents.  See :ref:`data-modeling-example-one-to-many`."
msgstr ""

#: ../source/core/data-model-design.txt:40
# dadbc99f5d674e3f9836c869554dddb1
msgid "In general, embedding provides better performance for read operations, as well as the ability to request and retrieve related data in a single database operation. Embedded data models make it possible to update related data in a single atomic write operation."
msgstr ""

#: ../source/core/data-model-design.txt:45
# e5f234c1cab54e5d99b5c5d3f46c0f27
msgid "However, embedding related data in documents may lead to situations where documents grow after creation. Document growth can impact write performance and lead to data fragmentation. See :ref:`data-model-document-growth` for details. Furthermore, documents in MongoDB must be smaller than the :limit:`maximum BSON document size <BSON Document Size>`. For bulk binary data, consider :doc:`GridFS </core/gridfs>`."
msgstr ""

#: ../source/core/data-model-design.txt:53
# 0c740cdab8cb4c56a452ce195e6a5701
msgid "To interact with embedded documents, use :term:`dot notation` to \"reach into\" embedded documents. See :ref:`query for data in arrays <read-operations-arrays>` and :ref:`query data in sub-documents <read-operations-subdocuments>` for more examples on accessing data in arrays and embedded documents."
msgstr ""

#: ../source/core/data-model-design.txt:62
# 35e633d3a2b348198d8026aa8a175546
msgid "Normalized Data Models"
msgstr ""

#: ../source/core/data-model-design.txt:64
# 5f1f248f0b31475ab84da1d919da47c7
msgid "Normalized data models describe relationships using :doc:`references </reference/database-references>` between documents."
msgstr ""

#: ../source/core/data-model-design.txt:69
# 1a778dca7ded4426ba89aa48d7961827
msgid "In general, use normalized data models:"
msgstr ""

#: ../source/core/data-model-design.txt:71
# 3dbfa2f2b13b439797dadf6cdee9c49d
msgid "when embedding would result in duplication of data but would not provide sufficient read performance advantages to outweigh the implications of the duplication."
msgstr ""

#: ../source/core/data-model-design.txt:75
# b2a46d736398454986cdc57adccfc9f5
msgid "to represent more complex many-to-many relationships."
msgstr ""

#: ../source/core/data-model-design.txt:77
# b2bb8127f38e4730803f1bc8f6a27afe
msgid "to model large hierarchical data sets."
msgstr ""

#: ../source/core/data-model-design.txt:79
# 379f0c2d16d64146853eb7e1281f5d02
msgid "References provides more flexibility than embedding. However, client-side applications must issue follow-up queries to resolve the references. In other words, normalized data models can require more roundtrips to the server."
msgstr ""

#: ../source/core/data-model-design.txt:84
# 71816212fe2643368bc4ed8cca5d9cda
msgid "See :ref:`data-modeling-publisher-and-books` for an example of referencing. For examples of various tree models using references, see :doc:`/applications/data-models-tree-structures`."
msgstr ""

