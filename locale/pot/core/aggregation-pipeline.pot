# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/aggregation-pipeline.txt:3
# f7d917325b444bfdaadaaf5a7533f370
msgid "Aggregation Pipeline"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:9
# 3df048b5758044ea915948853ed9361e
msgid "The aggregation pipeline is a framework for data aggregation modeled on the concept of data processing pipelines. Documents enter a multi-stage pipeline that transforms the documents into an aggregated results."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:14
# 9bd43005649a4e57aa817a27f8cc8cd2
msgid "The aggregation pipeline provides an alternative to :term:`map-reduce` and may be the preferred solution for many aggregation tasks where the complexity of map-reduce may be unwarranted."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:20
# a66879cee37d4f2da30852709db1718c
msgid "Aggregation pipeline have some limitations on value types and result size. See :doc:`/core/aggregation-pipeline-limits` for details on limits and restrictions on the aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:27
# 5a44541c9778454aa1c47a1fee998b0b
msgid "Pipeline"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:29
# 484fdc7a8a634950ad6fbcbc30537257
msgid "Conceptually, documents from a collection travel through an aggregation pipeline, which transforms these objects as they pass through. For those familiar with UNIX-like shells (e.g. bash), the concept is analogous to the pipe (i.e. ``|``)."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:34
# 46f1cd2ac8054ddead0d42e4f8667438
msgid "The MongoDB aggregation pipeline starts with the documents of a collection and streams the documents from one :ref:`pipeline operator <aggregation-pipeline-operator-reference>` to the next to process the documents. Each operator in the pipeline transforms the documents as they pass through the pipeline. Pipeline operators do not need to produce one output document for every input document. Operators may generate new documents or filter out documents. Pipeline operators can be repeated in the pipeline."
msgstr ""

#: ../source/includes/fact-agg-helper-returns-cursor.rst:1
# d7cac89f84fe4237bf59ff606e4841e9
msgid "The :method:`db.collection.aggregate()` method returns a cursor and can return result sets of any size. Previous versions returned all results in a single document, and the result set was subject to a size limit of 16 megabytes."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:45
# 340dba03c1d340fa98e51213dee6ebf4
msgid "See :ref:`aggregation-pipeline-operator-reference` for the list of pipeline operators that define the stages."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:48
# 29a8d0599fce4dfea1bbc3616dd8b62e
msgid "For example usage of the aggregation pipeline, consider :doc:`/tutorial/aggregation-with-user-preference-data` and :doc:`/tutorial/aggregation-zip-code-data-set`, as well as the :dbcommand:`aggregate` command and the :method:`db.collection.aggregate()` method reference pages."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:57
# 5cd9122d58ed408c84bf1f2cdc3a73bd
msgid "Pipeline Expressions"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:59
# 2beceb62e1b74190a322bd9ca845c938
msgid "Each pipeline operator takes a pipeline expression as its operand. Pipeline expressions specify the transformation to apply to the input documents. Expressions have a :term:`document` structure and can contain fields, values, and :ref:`operators <aggregation-expression-operators>`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:65
# c96ded758fe04f8eacceebc00b2a0893
msgid "Pipeline expressions can only operate on the current document in the pipeline and cannot refer to data from other documents: expression operations provide in-memory transformation of documents."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:69
# 1e9c012919164ea7ba341ce87fdb7dff
msgid "Generally, expressions are stateless and are only evaluated when seen by the aggregation process with one exception: :term:`accumulator` expressions. The accumulator expressions, used with the :pipeline:`$group` pipeline operator, maintain their state (e.g. totals, maximums, minimums, and related data) as documents progress through the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:76
# 5259ce72e31e42baaf4372b235024f36
msgid "For the expression operators, see :ref:`aggregation-expression-operators`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:82
# a8d1c83f2d484b2c83e2367ac2683619
msgid "Aggregation Pipeline Behavior"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:84
# feb7af1e312f4c18806fb18185397cf9
msgid "In MongoDB, the :dbcommand:`aggregate` command operates on a single collection, logically passing the *entire* collection into the aggregation pipeline. To optimize the operation, wherever possible, use the following strategies to avoid scanning the entire collection."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:92
# 834f975d53914d9ba9dea6808365603c
msgid "Pipeline Operators and Indexes"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:94
# 3063c612479d4678b0e39794cad11264
msgid "The :pipeline:`$match`, :pipeline:`$sort`, :pipeline:`$limit`, and :pipeline:`$skip` pipeline operators can take advantage of an index when they occur at the **beginning** of the pipeline **before** any of the following aggregation operators: :pipeline:`$project`, :pipeline:`$unwind`, and :pipeline:`$group`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:100
# aaa4417b0c3e498ba68942b148f1aa76
msgid "The :pipeline:`$geoNear` pipeline operator takes advantage of a geospatial index. When using :pipeline:`$geoNear`, the :pipeline:`$geoNear` pipeline operation must appear as the first stage in an aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:106
# b781e635503842899558db7415b13c97
msgid "For unsharded collections, when the aggregation pipeline only needs to access the indexed fields to fulfill its operations, an index can :ref:`cover <read-operations-covered-query>` the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:0
# 8ad79b77e49d42ef86233c8a2251bac2
msgid "Example"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:112
# 37002e7ffcb848cfbfb6d024dc863798
msgid "Consider the following index on the ``orders`` collection:"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:118
# 5e7dd1cc16074c29a25e45f94d89382f
msgid "This index can cover the following aggregation pipeline operation because MongoDB does not need to inspect the data outside of the index to fulfill the operation:"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:131
# ef6b9a6049e543879737eff2f02adb3d
msgid "Early Filtering"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:133
# ca647bea71af426a8afdb83dd44e3130
msgid "If your aggregation operation requires only a subset of the data in a collection, use the :pipeline:`$match`, :pipeline:`$limit`, and :pipeline:`$skip` stages to restrict the documents that enter at the beginning of the pipeline. When placed at the beginning of a pipeline, :pipeline:`$match` operations use suitable indexes to scan only the matching documents in a collection."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:140
# 532cdb97767e4fbf8787a3a959fd5b83
msgid "Placing a :pipeline:`$match` pipeline stage followed by a :pipeline:`$sort` stage at the start of the pipeline is logically equivalent to a single query with a sort and can use an index. When possible, place :pipeline:`$match` operators at the beginning of the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:147
# 6188742fec8849419e219ec72f425053
msgid "Additional Features"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:149
# 2b8523e9c8fe4dd0a3a42f4492e3e38c
msgid "The aggregation pipeline has an internal optimization phase that provides improved performance for certain sequences of operators. For details, see :ref:`aggregation-pipeline-sequence-optimization`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:153
# 35823a48935748f8844d66a7c5b0eb46
msgid "The aggregation pipeline supports operations on sharded collections. See :ref:`aggregation-pipeline-sharded-collection`."
msgstr ""

