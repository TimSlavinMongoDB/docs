# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/query-optimization.txt:5
# 68c9d35b76db462f8e48fd2c33f29911
msgid "Query Optimization"
msgstr ""

#: ../source/core/query-optimization.txt:9
# bfdd25793f3046cba02bc19ed5525ce2
msgid "Indexes improve the efficiency of read operations by reducing the amount of data that query operations need to process. This simplifies the work associated with fulfilling queries within MongoDB."
msgstr ""

#: ../source/core/query-optimization.txt:14
# f849a6289ac04d9e854737cb49bba35c
msgid "Create an Index to Support Read Operations"
msgstr ""

#: ../source/core/query-optimization.txt:16
# e5d3de1be4a94e409fa405e7219c2461
msgid "If your application queries a collection on a particular field or fields, then an index on the queried field or fields can prevent the query from scanning the whole collection to find and return the query results. For more information about indexes, see the :doc:`complete documentation of indexes in MongoDB</core/indexes>`."
msgstr ""

#: ../source/core/query-optimization.txt:0
#: ../source/core/query-optimization.txt:0
# a7219814d66548d1802a9840900c4a96
# b726066e79514b7fb46db42f7b0be6d9
msgid "Example"
msgstr ""

#: ../source/core/query-optimization.txt:30
# dba50de91adb4cbeb764c39cefa4e495
msgid "To improve the performance of this query, add an ascending, or a descending, index to the ``inventory`` collection on the ``type`` field. [#ensureIndexOrder]_ In the :program:`mongo` shell, you can create indexes using the :method:`db.collection.ensureIndex()` method:"
msgstr ""

#: ../source/core/query-optimization.txt:40
# 853f3354eb3a4046b5ee47b49ac09601
msgid "This index can prevent the above query on ``type`` from scanning the whole collection to return the results."
msgstr ""

#: ../source/core/query-optimization.txt:43
# eade249343d54e1e901a5e218b9634ff
msgid "To analyze the performance of the query with an index, see :doc:`/tutorial/analyze-query-plan`."
msgstr ""

#: ../source/core/query-optimization.txt:46
# 056b824167bf440fb9086d4aedb7ed9f
msgid "In addition to optimizing read operations, indexes can support sort operations and allow for a more efficient storage utilization. See :method:`db.collection.ensureIndex()` and :doc:`/administration/indexes` for more information about index creation."
msgstr ""

#: ../source/core/query-optimization.txt:53
# fb26c1151a2d4a19b780749d57a1e9de
msgid "For single-field indexes, the selection between ascending and descending order is immaterial. For compound indexes, the selection is important. See :ref:`indexing order <index-ascending-and-descending>` for more details."
msgstr ""

#: ../source/core/query-optimization.txt:61
# aa5d357cd7b34ce6a4755a0442e7c9b7
msgid "Query Selectivity"
msgstr ""

#: ../source/core/query-optimization.txt:63
# 7c1fa315749544f09a41153269a8bbf5
msgid "Some query operations are not selective. These operations cannot use indexes effectively or cannot use indexes at all."
msgstr ""

#: ../source/core/query-optimization.txt:66
# 41abdaed2e8c4a44beb4dd51c9c43d35
msgid "The inequality operators :query:`$nin` and :query:`$ne` are not very selective, as they often match a large portion of the index. As a result, in most cases, a :query:`$nin` or :query:`$ne` query with an index may perform no better than a :query:`$nin` or :query:`$ne` query that must scan all documents in a collection."
msgstr ""

#: ../source/core/query-optimization.txt:72
# 447c647cf2f8426c9e6865ac2d90f2c1
msgid "Queries that specify regular expressions, with inline JavaScript regular expressions or :query:`$regex` operator expressions, cannot use an index with one exception. Queries that specify regular expression *with anchors* at the beginning of a string *can* use an index."
msgstr ""

#: ../source/core/query-optimization.txt:81
# 13e5a115ae8b4185b9e125ff58d2cb1d
msgid "Covering a Query"
msgstr ""

#: ../source/core/query-optimization.txt:83
# d4daf6488df044538cfc1455fb64cf99
msgid "An index :ref:`covers <indexes-covered-queries>` a query, a *covered query*, when:"
msgstr ""

#: ../source/core/query-optimization.txt:86
# 1f56e8d13cbb4f0b8646f4f1a055df7f
msgid "all the fields in the :ref:`query <read-operations-query-document>` are part of that index, **and**"
msgstr ""

#: ../source/core/query-optimization.txt:89
# 9d2153f189eb41d6829efd1af24ea0cd
msgid "all the fields returned in the documents that match the query are in the same index."
msgstr ""

#: ../source/core/query-optimization.txt:92
# 13740c1d338541ba8cd9fb892dc5d621
msgid "For these queries, MongoDB does not need to inspect documents outside of the index. This is often more efficient than inspecting entire documents."
msgstr ""

#: ../source/core/query-optimization.txt:98
# 56a27d87e53f4c81a1033e569dbddbb2
msgid "Given a collection ``inventory`` with the following index on the ``type`` and ``item`` fields:"
msgstr ""

#: ../source/core/query-optimization.txt:105
# 6aa2069dc64d4a31a6494ff97e6e7eb3
msgid "This index will cover the following query on the ``type`` and ``item`` fields, which returns only the ``item`` field:"
msgstr ""

#: ../source/core/query-optimization.txt:113
# 3558648977504c31a5367133799a1b75
msgid "However, the index will **not** cover the following query, which returns the ``item`` field **and** the ``_id`` field:"
msgstr ""

#: ../source/core/query-optimization.txt:121
# ac0355502da54624bb8d738a3b618b25
msgid "See :ref:`indexes-covered-queries` for more information on the behavior and use of covered queries."
msgstr ""

