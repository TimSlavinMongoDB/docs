# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replication-introduction.txt:5
# b4d37e2661464050b7d3ee2f08924e9f
msgid "Replication Introduction"
msgstr ""

#: ../source/core/replication-introduction.txt:9
# 2ecdc3119dcc4683b117a2f531014392
msgid "Replication is the process of synchronizing data across multiple servers."
msgstr ""

#: ../source/core/replication-introduction.txt:13
# 1a6c462135464687bc47cbf7ba1bd620
msgid "Purpose of Replication"
msgstr ""

#: ../source/core/replication-introduction.txt:15
# af3cb24307c1443ba14b99951045ac0a
msgid "Replication provides redundancy and increases data availability. With multiple copies of data on different database servers, replication protects a database from the loss of a single server. Replication also allows you to recover from hardware failure and service interruptions. With additional copies of the data, you can dedicate one to disaster recovery, reporting, or backup."
msgstr ""

#: ../source/core/replication-introduction.txt:22
# d75ac74b13f24e63aeae51f18122c6f4
msgid "In some cases, you can use replication to increase read capacity. Clients have the ability to send read and write operations to different servers. You can also maintain copies in different data centers to increase the locality and availability of data for distributed applications."
msgstr ""

#: ../source/core/replication-introduction.txt:29
# 472fc6c41bad4feb8685f5b5706dcadd
msgid "Replication in MongoDB"
msgstr ""

#: ../source/core/replication-introduction.txt:31
# ae7fec4793bb4b93834ad2558add2cf0
msgid "A replica set is a group of :program:`mongod` instances that host the same data set. One :program:`mongod`, the primary, receives all write operations. All other instances, secondaries, apply operations from the primary so that they have the same data set."
msgstr ""

#: ../source/core/replication-introduction.txt:36
# f3794172387e4a4d867c8e21d1c6ddb1
msgid "The **primary** accepts all write operations from clients. Replica set can have only one primary. Because only one member can accept write operations, replica sets provide **strict consistency**. To support replication, the primary logs all changes to its data sets in its :doc:`oplog </core/replica-set-oplog>`. See :doc:`primary </core/replica-set-primary>` for more information."
msgstr ""

#: ../source/core/replication-introduction.txt:45
# 848839eebf864c29990c850c9db2e114
msgid "The **secondaries** replicate the primary's oplog and apply the operations to their data sets. Secondaries' data sets reflect the primary's data set. If the primary is unavailable, the replica set will elect a secondary to be primary. By default, clients read from the primary, however, clients can specify a :doc:`read preferences </core/read-preference>` to send read operations to secondaries. See :doc:`secondaries </core/replica-set-secondary>` for more information"
msgstr ""

#: ../source/core/replication-introduction.txt:55
# 0b1aa9b8c3b44a2d9cc8825773c6fbff
msgid "You may add an extra :program:`mongod` instance a replica set as an **arbiter**. Arbiters do not maintain a data set. Arbiters only exist to vote in elections. If your replica set has an even number of members, add an arbiter to obtain a majority of votes in an election for primary. Arbiters do not require dedicated hardware. See :doc:`arbiter </core/replica-set-arbiter>` for more information."
msgstr ""

#: ../source/core/replication-introduction.txt:66
# 2036bcbcb60f4d32b11255801b63400d
msgid "An **arbiter** will always be an arbiter. A **primary** may step down and become a **secondary**. A **secondary** may become the primary during an election."
msgstr ""

#: ../source/core/replication-introduction.txt:71
# 2ff736354c6742d39b641a3c48ab19ce
msgid "Asynchronous Replication"
msgstr ""

#: ../source/core/replication-introduction.txt:73
# 8ad67af3aa014cedb0dce47316c09ac9
msgid "Secondaries apply operations from the primary asynchronously. By applying operations after the primary, sets can continue to function without some members. However, as a result secondaries may not return the most current data to clients."
msgstr ""

#: ../source/core/replication-introduction.txt:78
# d7af58e523d548859742cbe92b53e7c8
msgid "See :doc:`/core/replica-set-oplog` and :doc:`/core/replica-set-sync` for more information. See :doc:`/core/read-preference` for more on read operations and secondaries."
msgstr ""

#: ../source/core/replication-introduction.txt:83
# 02843fcc1ed143bb896720ea79103672
msgid "Automatic Failover"
msgstr ""

#: ../source/core/replication-introduction.txt:85
# 7ef6484f8fd34e219be2a2d0ca17009b
msgid "When a primary does not communicate with the other members of the set for more than 10 seconds, the replica set will attempt to select another member to become the new primary. The first secondary that receives a majority of the votes becomes primary."
msgstr ""

#: ../source/core/replication-introduction.txt:92
# ef0f2b58f2314617b8e5681bb871cd95
msgid "See :doc:`/core/replica-set-elections` and :doc:`/core/replica-set-rollbacks` for more information."
msgstr ""

#: ../source/core/replication-introduction.txt:96
# e1f451bb2fdc4459b308e5c614b87027
msgid "Additional Features"
msgstr ""

#: ../source/core/replication-introduction.txt:98
# 3877827ba25546f98b645b5a47bd4f47
msgid "Replica sets provide a number of options to support application needs. For example, you may deploy a replica set with :doc:`members in multiple data centers </core/replica-set-architecture-geographically-distributed>`, or control the outcome of elections by adjusting the :data:`~local.system.replset.members[n].priority` of some members. Replica sets also support dedicated members for reporting, disaster recovery, or backup functions."
msgstr ""

#: ../source/core/replication-introduction.txt:107
# 9b14a8b3973e4bfd8f1f52b5d3cd471f
msgid "See :doc:`/core/replica-set-priority-0-member`, :doc:`/core/replica-set-hidden-member` and :doc:`/core/replica-set-delayed-member` for more information."
msgstr ""

