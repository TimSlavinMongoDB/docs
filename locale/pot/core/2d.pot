# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/2d.txt:3
# 140884ceb6b04d08910f5a0939951e3d
msgid "``2d`` Indexes"
msgstr ""

#: ../source/core/2d.txt:7
# 04ae70e927664aae8f6639e0867afd8e
msgid "Use a ``2d`` index for data stored as points on a two-dimensional plane. The ``2d`` index is intended for legacy coordinate pairs used in MongoDB 2.2 and earlier."
msgstr ""

#: ../source/core/2d.txt:11
# 99726fc673644c80a81f190fd7bb69ca
msgid "Use a ``2d`` index if:"
msgstr ""

#: ../source/core/2d.txt:13
# 22034d64dd934ca9a4973c45b2270963
msgid "your database has legacy location data from MongoDB 2.2 or earlier, *and*"
msgstr ""

#: ../source/core/2d.txt:15
# 338796d9239b435195f0b5e33bb0b96b
msgid "you do not intend to store any location data as :term:`GeoJSON` objects."
msgstr ""

#: ../source/core/2d.txt:17
# a14db15ea9a14527924181e0ecf7910d
msgid "See the :doc:`/reference/operator/query-geospatial` for the query operators that support geospatial queries."
msgstr ""

#: ../source/core/2d.txt:21
# 41590c99a7664ff5a5b16c8841a3c5c5
msgid "Considerations"
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:1
# c6b3c54b1f04494c928b80fa3644e1cf
msgid "MongoDB allows *only one* geospatial index per collection. You can create either a |first-geo-index| **or** a |second-geo-index| per collection."
msgstr ""

#: ../source/core/2d.txt:27
# 0be6cfd2394c4e429ebf3351787a85ac
msgid "Do not use a ``2d`` index if your location data includes GeoJSON objects. To index on both legacy coordinate pairs *and* GeoJSON objects, use a :doc:`2dsphere </core/2dsphere>` index."
msgstr ""

#: ../source/core/2d.txt:31
# 7abae0987c2640498d6a50948e843aef
msgid "You cannot use a ``2d`` index as a shard key when sharding a collection. However, you can create and maintain a geospatial index on a sharded collection by using a different field as the shard key."
msgstr ""

#: ../source/core/2d.txt:36
# 9a789d61738d42c18e40cb5a93e057c6
msgid "Behavior"
msgstr ""

#: ../source/core/2d.txt:38
# 6299de7ebd8649cba0e2ac9329a3c92a
msgid "The ``2d`` index supports calculations on a flat, Euclidean plane. The ``2d`` index also supports *distance-only* calculations on a sphere, but for *geometric* calculations (e.g. :query:`$geoWithin`) on a sphere, store data as GeoJSON objects and use the ``2dsphere`` index type."
msgstr ""

#: ../source/core/2d.txt:44
# 40abd2a8a4f44d8eafd02a4c927ba0d7
msgid "A ``2d`` index can reference two fields. The first must be the location field. A ``2d`` compound index constructs queries that select first on the location field, and then filters those results by the additional criteria. A compound ``2d`` index can cover queries."
msgstr ""

#: ../source/core/2d.txt:52
# c0963605b8404201ae53ec3d759150ac
msgid "Points on a 2D Plane"
msgstr ""

#: ../source/core/2d.txt:56
# b79ea16904c8440da4f59672a1da27bf
msgid "To store location data as legacy coordinate pairs, use an array or an embedded document. When possible, use the array format:"
msgstr ""

#: ../source/core/2d.txt:63
# 424247c9b1e74e40b0defed6f70441b2
msgid "Consider the embedded document form:"
msgstr ""

#: ../source/core/2d.txt:69
# 632fa7405ace4026938f0006ad7321ad
msgid "Arrays are preferred as certain languages do not guarantee associative map ordering."
msgstr ""

#: ../source/core/2d.txt:72
# f7685c4c19c840bea6a8d01e64d73b8d
msgid "For all points, if you use longitude and latitude, store coordinates in **longitude, latitude** order."
msgstr ""

