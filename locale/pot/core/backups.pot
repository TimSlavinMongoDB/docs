# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 11:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/backups.txt:3
# 08434694db3b4a94b456313626877769
msgid "MongoDB Backup Methods"
msgstr ""

#: ../source/core/backups.txt:7
# ecf1c8aa2aa74eea9830d74ad480e189
msgid "When deploying MongoDB in production, you should have a strategy for capturing and restoring backups in the case of data loss events. MongoDB provides backup methods to support different requirements and configurations:"
msgstr ""

#: ../source/core/backups.txt:12
# 15348a270e964835a5dcd3b69feb9a55
msgid ":ref:`backup-with-mms`"
msgstr ""

#: ../source/core/backups.txt:13
# 494ede55750043f89d4cb9fdce95fd72
msgid ":ref:`backup-with-file-copies`"
msgstr ""

#: ../source/core/backups.txt:14
# 6c73946397e74d98a177bff5b4cb6c65
msgid ":ref:`backup-with-mongodump`"
msgstr ""

#: ../source/core/backups.txt:17
# c8a7ef6ffb6c478faaad0717c5feb660
msgid "Backup Methods"
msgstr ""

#: ../source/core/backups.txt:22
# 281f428be6d1441daeb141a5293c69c6
msgid "Backups with the MongoDB Management Service (MMS)"
msgstr ""

#: ../source/core/backups.txt:24
# 747a308592b0447fa9a7efa85f654c31
msgid "The `MongoDB Management Service <https://mms.10gen.com/?pk_campaign=MongoDB-Org&pk_kwd=Backup-Docs>`_ supports backup and restore for MongoDB deployments."
msgstr ""

#: ../source/core/backups.txt:28
# 441c177934af4164806437ac95f82e2c
msgid "MMS continually backs up MongoDB replica sets and sharded systems by reading the oplog data from your MongoDB cluster."
msgstr ""

#: ../source/core/backups.txt:31
# cbaa554191d541db887cec29a2722df9
msgid "MMS Backup offers point in time recovery of MongoDB replica sets and a consistent snapshot of sharded systems."
msgstr ""

#: ../source/core/backups.txt:34
# a53779e57f754e64984ecd85034147b9
msgid "MMS achieves point in time recovery by storing oplog data so that it can create a restore for any moment in time in the last 24 hours for a particular replica set."
msgstr ""

#: ../source/core/backups.txt:38
# f76f186508f34477aa1ebb2fb7ccca58
msgid "For sharded systems, MMS does not provide restores for arbitrary moments in time. MMS does provide periodic consistent snapshots of the entire sharded cluster. Sharded cluster snapshots are difficult to achieve with other MongoDB backup methods."
msgstr ""

#: ../source/core/backups.txt:43
# c11c2275a09d4dc2b50a62250f4247f2
msgid "To restore a MongoDB cluster from an MMS Backup snapshot, you download a compressed archive of your MongoDB data files and distribute those files before restarting the :program:`mongod` processes."
msgstr ""

#: ../source/core/backups.txt:47
# a55acb21fc8a41aea246a9c1242d0d2f
msgid "To get started with MMS Backup `sign up for MMS <http://mms.mongodb.com>`_, and consider the complete documentation of MMS see the  :mms:`MMS Manual </>`."
msgstr ""

#: ../source/core/backups.txt:55
# f057004f2ba544fd953fbe4a8a2072bd
msgid "Backup by Copying Underlying Data Files"
msgstr ""

#: ../source/core/backups.txt:57
# aba60ab8e16642dfa341a26c0c685587
msgid "You can create a backup by copying MongoDB's underlying data files."
msgstr ""

#: ../source/core/backups.txt:60
# bd74d90df7014d0a8007d492115b8948
msgid "If the volume where MongoDB stores data files supports point in time snapshots, you can use these snapshots to create backups of a MongoDB system at an exact moment in time."
msgstr ""

#: ../source/core/backups.txt:64
# 9f0294d4a478410192f080db5e3d86f9
msgid "File systems snapshots are an operating system volume manager feature, and are not specific to MongoDB. The mechanics of snapshots depend on the underlying storage system. For example, if you use Amazonâ€™s EBS storage system for EC2 supports snapshots. On Linux the LVM manager can create a snapshot."
msgstr ""

#: ../source/core/backups.txt:70
# 7100aa6cae8d4111ac75a6a450cc9017
msgid "To get a correct snapshot of a running :program:`mongod` process, you must have journaling enabled and the journal must reside on the same logical volume as the other MongoDB data files. Without journaling enabled, there is no guarantee that the snapshot will be consistent or valid."
msgstr ""

#: ../source/core/backups.txt:76
# 01b26aeaca1c467b979c1260d5b03ca9
msgid "To get a consistent snapshot of a sharded system, you must disable the balancer and capture a snapshot from every shard and a config server at approximately the same moment in time."
msgstr ""

#: ../source/core/backups.txt:80
# d20bfadebc8e43dea4eafe669a8b72c6
msgid "If your storage system does not support snapshots, you can copy the files directly using ``cp``, ``rsync``, or a similar tool. Since copying multiple files is not an atomic operation, you must stop all writes to the :program:`mongod` before copying the files. Otherwise, you will copy the files in an invalid state."
msgstr ""

#: ../source/core/backups.txt:86
# 1cd8456692ee40a58bb27bfb728df8d1
msgid "Backups produced by copying the underlying data do not support point in time recovery for replica sets and are difficult to manage for larger sharded clusters. Additionally, these backups are larger because they include the indexes and duplicate underlying storage padding and fragmentation. :program:`mongodump` by contrast create smaller backups."
msgstr ""

#: ../source/core/backups.txt:93
# 948530803aa34981a1c59b30e7fd7325
msgid "For more information, see the :doc:`/tutorial/backup-with-filesystem-snapshots` and :doc:`/tutorial/backup-sharded-cluster-with-filesystem-snapshots` for complete instructions on using LVM to create snapshots. Also see :ecosystem:`Back up and Restore Processes for MongoDB on Amazon EC2 </tutorial/backup-and-restore-mongodb-on-amazon-ec2>`."
msgstr ""

#: ../source/core/backups.txt:103
# f287ce36b2e0423084547172ce563a5c
msgid "Backup with ``mongodump``"
msgstr ""

#: ../source/core/backups.txt:105
# 63c63f9400e14304942d0e7a0d163315
msgid "The :program:`mongodump` tool reads data from a MongoDB database and creates high fidelity BSON files. The :program:`mongorestore` tool can populate a MongoDB database with the data from these BSON files. These tools are simple and efficient for backing up small MongoDB deployments, but are not ideal for capturing backups of larger systems."
msgstr ""

#: ../source/core/backups.txt:112
# 69c4a618766b402fa54edbe20368e763
msgid ":program:`mongodump` and :program:`mongorestore` can operate against a running :program:`mongod` process, and can manipulate the underlying data files directly. By default, :program:`mongodump` does not capture the contents of the :doc:`local database </reference/local-database>`."
msgstr ""

#: ../source/core/backups.txt:117
# 9a1f4c675600427ea929297f815fe56f
msgid ":program:`mongodump` only captures the documents in the database. The resulting backup is space efficient, but :program:`mongorestore` or :program:`mongod` must rebuild the indexes after restoring data."
msgstr ""

#: ../source/core/backups.txt:121
# be0b7d483a1243a381fd17ac07b7c99a
msgid "When connected to a MongoDB instance, :program:`mongodump` can adversely affect :program:`mongod` performance. If your data is larger than system memory, the queries will push the working set out of memory."
msgstr ""

#: ../source/core/backups.txt:126
# 69f120326a8f4840a51e5d95fe540d24
msgid "To mitigate the impact of :program:`mongodump` on the performance of the replica set, use :program:`mongodump` to capture backups from a :doc:`secondary </core/replica-set-secondary>` member of a replica set. Alternatively, you can shut down a secondary and use :program:`mongodump` with the data files directly. If you shut down a secondary to capture data with :program:`mongodump` ensure that the operation can complete before its oplog becomes too stale to continue replicating."
msgstr ""

#: ../source/core/backups.txt:135
# c0ca27d3d6924fe1b354ece86977e76f
msgid "For replica sets, :program:`mongodump` also supports a point in time feature with the :option:`--oplog <mongodump --oplog>` option. Applications may continue modifying data while :program:`mongodump` captures the output. To restore a point in time backup created with :option:`--oplog <mongodump --oplog>`, use :program:`mongorestore` with the :option:`--oplogReplay <mongorestore --oplogReplay>` option."
msgstr ""

#: ../source/core/backups.txt:143
# 43884cbaee314928917c42216a5a9ecf
msgid "If applications modify data while :program:`mongodump` is creating a backup, :program:`mongodump` will compete for resources with those applications."
msgstr ""

#: ../source/core/backups.txt:147
# d369891ee16840eb991f3e84b9ce1712
msgid "See :doc:`/tutorial/backup-with-mongodump`, :doc:`/tutorial/backup-small-sharded-cluster-with-mongodump`, and :doc:`/tutorial/backup-sharded-cluster-with-database-dumps` for more information."
msgstr ""

#: ../source/core/backups.txt:153
# 597cd9f3d83d41a1a31491ded1d0014b
msgid "Further Reading"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:7
# dd3efd9165f64432b5e0b9eee6a47c1e
msgid ":doc:`/tutorial/backup-with-filesystem-snapshots`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:4
# db9ce7c8a8af4fb8aef271a221876321
msgid "An outline of procedures for creating MongoDB data set backups using system-level file snapshot tool, such as :term:`LVM` or native storage appliance tools."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:13
# b8eda39cbf074a5d815e187b636fcec2
msgid ":doc:`/tutorial/restore-replica-set-from-backup`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:10
# 081a88ac890043118d34756925ad7ae9
msgid "Describes procedure for restoring a replica set from an archived backup such as a :program:`mongodump` or `MMS Backup <https://mms.mongodb.com/?pk_campaign=mongodb-docs-admin-tutorials>`_ file."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:18
# 65fcacbe90844d7d9149f958eb443fc1
msgid ":doc:`/tutorial/backup-with-mongodump`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:16
# 63d8792e142a4e78be60414aaabe353f
msgid "The procedure for writing the contents of a database to a BSON (i.e. binary) dump file for backing up MongoDB databases."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:23
# bb7004fac60348398056e38924870b87
msgid ":doc:`/administration/backup-sharded-clusters`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:21
# b55a2d59f1a249bc9c3451583164f707
msgid "Detailed procedures and considerations for backing up sharded clusters and single shards."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:26
# d3807bb434d34ffa9a311205dcf6f89c
msgid ":doc:`/tutorial/recover-data-following-unexpected-shutdown`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:26
# 4dbfaebabb5741ecb396dc6dcc7d7af5
msgid "Recover data from MongoDB data files that were not properly closed or have an invalid state."
msgstr ""

