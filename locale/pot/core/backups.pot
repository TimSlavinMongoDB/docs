# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/backups.txt:3
# 0925780c71454128bae197dd839caa34
msgid "MongoDB Backup Methods"
msgstr ""

#: ../source/core/backups.txt:7
# 76ba76a6ac04463d92b51286dde95653
msgid "When deploying MongoDB in production, you should have a strategy for capturing and restoring backups in the case of data loss events. MongoDB provides backup methods to support different requirements and configurations:"
msgstr ""

#: ../source/core/backups.txt:12
# 821a955414864c1cbe5021932ce0d643
msgid ":ref:`backup-with-mms`"
msgstr ""

#: ../source/core/backups.txt:13
# aa0814fcfcc6411f9e306b9bb67647d4
msgid ":ref:`backup-with-file-copies`"
msgstr ""

#: ../source/core/backups.txt:14
# 59dd6689ac0f4a8382f7316215ddcd79
msgid ":ref:`backup-with-mongodump`"
msgstr ""

#: ../source/core/backups.txt:17
# 4d511e4fba4c425faea598eab63e5e96
msgid "Backup Methods"
msgstr ""

#: ../source/core/backups.txt:22
# caccd314b8d14ac393b9edddf5c86442
msgid "Backups with the MongoDB Management Service (MMS)"
msgstr ""

#: ../source/core/backups.txt:24
# caa0c2973eb74dfca6b876767b003db9
msgid "The `MongoDB Management Service <https://mms.10gen.com/?pk_campaign=MongoDB-Org&pk_kwd=Backup-Docs>`_ supports backup and restore for MongoDB deployments."
msgstr ""

#: ../source/core/backups.txt:28
# dcb14a255e914fb193a1ca5565c8f468
msgid "MMS continually backs up MongoDB replica sets and sharded systems by reading the oplog data from your MongoDB cluster."
msgstr ""

#: ../source/core/backups.txt:31
# 56227e99c495490188df3b623a2ea31e
msgid "MMS Backup offers point in time recovery of MongoDB replica sets and a consistent snapshot of sharded systems."
msgstr ""

#: ../source/core/backups.txt:34
# 038da1ef564245cc9aa6ab8f6abd65eb
msgid "MMS achieves point in time recovery by storing oplog data so that it can create a restore for any moment in time in the last 24 hours for a particular replica set."
msgstr ""

#: ../source/core/backups.txt:38
# ace0c6a544974ed7826f5f1be1ebf9c2
msgid "For sharded systems, MMS does not provide restores for arbitrary moments in time. MMS does provide periodic consistent snapshots of the entire sharded cluster. Sharded cluster snapshots are difficult to achieve with other MongoDB backup methods."
msgstr ""

#: ../source/core/backups.txt:43
# 87bafcb26f5f479c9d47790b1a37940d
msgid "To restore a MongoDB cluster from an MMS Backup snapshot, you download a compressed archive of your MongoDB data files and distribute those files before restarting the :program:`mongod` processes."
msgstr ""

#: ../source/core/backups.txt:47
# 324c736a681944349f1fa583c5b79e9f
msgid "To get started with MMS Backup `sign up for MMS <http://mms.mongodb.com>`_, and consider the complete documentation of MMS see the  :mms:`MMS Manual </>`."
msgstr ""

#: ../source/core/backups.txt:55
# 5ce8765083f94efcb5a87ce481470742
msgid "Backup by Copying Underlying Data Files"
msgstr ""

#: ../source/core/backups.txt:57
# 8d5f14e1d1124d14b7beec3a84791e06
msgid "You can create a backup by copying MongoDB's underlying data files."
msgstr ""

#: ../source/core/backups.txt:60
# b3605e626e6f46ce9a920356d13a0f4e
msgid "If the volume where MongoDB stores data files supports point in time snapshots, you can use these snapshots to create backups of a MongoDB system at an exact moment in time."
msgstr ""

#: ../source/core/backups.txt:64
# 833bedfcacb24f3d935366b717593344
msgid "File systems snapshots are an operating system volume manager feature, and are not specific to MongoDB. The mechanics of snapshots depend on the underlying storage system. For example, if you use Amazonâ€™s EBS storage system for EC2 supports snapshots. On Linux the LVM manager can create a snapshot."
msgstr ""

#: ../source/core/backups.txt:70
# 9d7b6086ca244277b132f21c99393277
msgid "To get a correct snapshot of a running :program:`mongod` process, you must have journaling enabled and the journal must reside on the same logical volume as the other MongoDB data files. Without journaling enabled, there is no guarantee that the snapshot will be consistent or valid."
msgstr ""

#: ../source/core/backups.txt:76
# 62e23d86446f41459b643ff32325dc85
msgid "To get a consistent snapshot of a sharded system, you must disable the balancer and capture a snapshot from every shard and a config server at approximately the same moment in time."
msgstr ""

#: ../source/core/backups.txt:80
# d6377a0bac9f4868998ef972a183cc8f
msgid "If your storage system does not support snapshots, you can copy the files directly using ``cp``, ``rsync``, or a similar tool. Since copying multiple files is not an atomic operation, you must stop all writes to the :program:`mongod` before copying the files. Otherwise, you will copy the files in an invalid state."
msgstr ""

#: ../source/core/backups.txt:86
# b84d2ceb11124d5ab782de161d978deb
msgid "Backups produced by copying the underlying data do not support point in time recovery for replica sets and are difficult to manage for larger sharded clusters. Additionally, these backups are larger because they include the indexes and duplicate underlying storage padding and fragmentation. :program:`mongodump` by contrast create smaller backups."
msgstr ""

#: ../source/core/backups.txt:93
# 9e3e8b80d2f44138a683891c76be8049
msgid "For more information, see the :doc:`/tutorial/backup-and-restore-with-filesystem-snapshots` and :doc:`/tutorial/backup-sharded-cluster-with-filesystem-snapshots` for complete instructions on using LVM to create snapshots. Also see :ecosystem:`Back up and Restore Processes for MongoDB on Amazon EC2 </tutorial/backup-and-restore-mongodb-on-amazon-ec2>`."
msgstr ""

#: ../source/core/backups.txt:103
# 95e53e00858b4dc99238935969ca1929
msgid "Backup with ``mongodump``"
msgstr ""

#: ../source/core/backups.txt:105
# aaaf9570477f4d78867e4e5c8958d60f
msgid "The :program:`mongodump` tool reads data from a MongoDB database and creates high fidelity BSON files. The :program:`mongorestore` tool can populate a MongoDB database with the data from these BSON files. These tools are simple and efficient for backing up small MongoDB deployments, but are not ideal for capturing backups of larger systems."
msgstr ""

#: ../source/core/backups.txt:112
# 0be11c215e5143c69eedd9b40c25199d
msgid ":program:`mongodump` and :program:`mongorestore` can operate against a running :program:`mongod` process, and can manipulate the underlying data files directly. By default, :program:`mongodump` does not capture the contents of the :doc:`local database </reference/local-database>`."
msgstr ""

#: ../source/core/backups.txt:117
# a3f0068a6ab947e18052d7c983cde342
msgid ":program:`mongodump` only captures the documents in the database. The resulting backup is space efficient, but :program:`mongorestore` or :program:`mongod` must rebuild the indexes after restoring data."
msgstr ""

#: ../source/core/backups.txt:121
# 63cb65be7cc947f88bb71b654c09118f
msgid "When connected to a MongoDB instance, :program:`mongodump` can adversely affect :program:`mongod` performance. If your data is larger than system memory, the queries will push the working set out of memory."
msgstr ""

#: ../source/core/backups.txt:126
# 5680999341494a309dea841e5c19863d
msgid "To mitigate the impact of :program:`mongodump` on the performance of the replica set, use :program:`mongodump` to capture backups from a :doc:`secondary </core/replica-set-secondary>` member of a replica set. Alternatively, you can shut down a secondary and use :program:`mongodump` with the data files directly. If you shut down a secondary to capture data with :program:`mongodump` ensure that the operation can complete before its oplog becomes too stale to continue replicating."
msgstr ""

#: ../source/core/backups.txt:135
# f8d7ca9e99534233a25ced56f55bd201
msgid "For replica sets, :program:`mongodump` also supports a point in time feature with the :option:`--oplog <mongodump --oplog>` option. Applications may continue modifying data while :program:`mongodump` captures the output. To restore a point in time backup created with :option:`--oplog <mongodump --oplog>`, use :program:`mongorestore` with the :option:`--oplogReplay <mongorestore --oplogReplay>` option."
msgstr ""

#: ../source/core/backups.txt:143
# d465104002c14ca0aa519dc5b9845d0a
msgid "If applications modify data while :program:`mongodump` is creating a backup, :program:`mongodump` will compete for resources with those applications."
msgstr ""

#: ../source/core/backups.txt:147
# 540c439b6a7d4eaeb48b321439ee85da
msgid "See :doc:`/tutorial/backup-and-restore-with-binary-database-dumps`, :doc:`/tutorial/backup-small-sharded-cluster-with-mongodump`, and :doc:`/tutorial/backup-sharded-cluster-with-database-dumps` for more information."
msgstr ""

#: ../source/core/backups.txt:153
# 2f68dd6603394ba09cde3c54e137460a
msgid "Further Reading"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:7
# fc7a54dbe4164dbd974fda83908ab62b
msgid ":doc:`/tutorial/backup-and-restore-with-filesystem-snapshots`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:4
# aca4a3debf1d43a9932a0106f331a0ad
msgid "An outline of procedures for creating MongoDB data set backups using system-level file snapshot tool, such as :term:`LVM` or native storage appliance tools."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:13
# fc7a54dbe4164dbd974fda83908ab62b
msgid ":doc:`/tutorial/restore-replica-set-from-backup`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:10
# 448cba78191b45b6b6ac02a0c8a369c6
msgid "Describes procedure for restoring a replica set from an archived backup such as a :program:`mongodump` or `MMS Backup <https://mms.mongodb.com/?pk_campaign=mongodb-docs-admin-tutorials>`_ file."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:18
# fc7a54dbe4164dbd974fda83908ab62b
msgid ":doc:`/tutorial/backup-and-restore-with-binary-database-dumps`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:16
# 69f4a9a79bf349c8806e3f6d4d425b07
msgid "The procedure for writing the contents of a database to a BSON (i.e. binary) dump file for backing up MongoDB databases."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:23
# eeedb29e51a04e108c3c1d0abf16b980
msgid ":doc:`/administration/backup-sharded-clusters`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:21
# 887a6be644874b75b5c87c514837d9b9
msgid "Detailed procedures and considerations for backing up sharded clusters and single shards."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:26
# fc7a54dbe4164dbd974fda83908ab62b
msgid ":doc:`/tutorial/recover-data-following-unexpected-shutdown`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:26
# d74f3f70a998439794f39f8628627cf5
msgid "Recover data from MongoDB data files that were not properly closed or have an invalid state."
msgstr ""

