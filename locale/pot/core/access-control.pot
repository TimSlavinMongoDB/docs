# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/access-control.txt:3
# a046b642af3640978f8a36662d1922c7
msgid "Access Control"
msgstr ""

#: ../source/core/access-control.txt:7
# 49a3261e62ae4f4981d4f45a03319c9e
msgid "MongoDB provides support for authentication and authorization on a per-database level. Users exist in the context of a single logical database."
msgstr ""

#: ../source/core/access-control.txt:14
# 5757cebe1d0f4f0f9ec4e238dc90e727
msgid "Authentication"
msgstr ""

#: ../source/core/access-control.txt:16
# aabb7586fa73484c864fefb8a1ec10af
msgid "MongoDB provisions authentication, or verification of the user identity, on a per-database level. Authentication disables anonymous access to the database. For basic authentication, MongoDB stores the user credentials in the ``admin`` database's :data:`system.users <admin.system.users>` collection."
msgstr ""

#: ../source/core/access-control.txt:22
# b6ed3da0a3a347eaaa577a1ccee069b1
msgid "Authentication is **disabled** by default. To enable authentication for a given :program:`mongod` or :program:`mongos` instance, use the :setting:`auth` and :setting:`keyFile` configuration settings. For details, see :doc:`/tutorial/enable-authentication`."
msgstr ""

#: ../source/core/access-control.txt:29
# f9d18f663a4e4f08ab67d9dd7aeb8b52
msgid "MongoDB supports x.509 certificate authentication for use with a secure SSL connection. See :doc:`/tutorial/configure-x509`."
msgstr ""

#: ../source/core/access-control.txt:35
# 80222638f5514c72bd068307001d6302
msgid "For MongoDB Enterprise installations, authentication using a Kerberos service is available. For Linux, see :doc:`/tutorial/control-access-to-mongodb-with-kerberos-authentication`."
msgstr ""

#: ../source/core/access-control.txt:41
# 685fbe106e374b94832b7a20fc7ff560
msgid "You can authenticate as only one user for a given database. If you authenticate to a database as one user and later authenticate on the same database as a different user, the second authentication invalidates the first. You can, however, log into a *different* database as a different user and not invalidate your authentication on other databases, though this is not a recommended approach."
msgstr ""

#: ../source/core/access-control.txt:48
# 3109a4d5d0324eb4a7be3a21d52d764b
msgid "Each client connection should authenticate as exactly one user."
msgstr ""

#: ../source/core/access-control.txt:54
# 3ab1abd97ecd427f9931bbe5392f54ab
msgid "Authorization"
msgstr ""

#: ../source/core/access-control.txt:56
# 98afb69e8d994f7a86e9fed7e32728c1
msgid "MongoDB provisions authorization, or access to databases and operations, on a per-database level. MongoDB uses a role-based approach to authorization. A role grants privileges to users, where privileges specify the :doc:`actions </reference/privilege-actions>` permitted on various :ref:`resources <resource-document>`."
msgstr ""

#: ../source/core/access-control.txt:65
# 1da5e55c84f448d5b1ecf10d96c379bb
msgid "User-Defined Roles"
msgstr ""

#: ../source/core/access-control.txt:69
# 46378c7551a843269fe056c43856c4b3
msgid "In addition to the MongoDB :doc:`system-defined roles </reference/system-defined-roles>`, MongoDB provides the ability to create and manage custom roles. To create a role is to define its privileges by pairing :ref:`resources <resource-document>` (e.g. database, collection) with :doc:`actions </reference/privilege-actions>` (e.g. ``insert``, ``find``), and/or by specifying other roles from which the role inherits privileges."
msgstr ""

#: ../source/includes/privilege-resource-for-non-admin-roles.rst:1
# c88fffd131354e24b029a46bf0c40132
msgid "A user-defined role scoped for a non-``admin`` database can **only** contain privileges that :doc:`act </reference/privilege-actions>` on the role's :doc:`database </reference/resource-document>`; its privilege can act on individual collections in that database or multiple collections in that database. User-defined roles scoped for the ``admin`` database can contain privileges that act on other databases and the :ref:`cluster resource <resource-cluster>` as well as on the ``admin`` database."
msgstr ""

#: ../source/includes/privilege-resource-for-non-admin-roles.rst:12
# c6c425f8460845bcbf396d48d29577fe
msgid "A user-defined role scoped for a non-``admin`` database can **only** inherit from other roles that exists in its database. User-defined roles scoped for the ``admin`` database can inherit from roles in other databases as well as in the ``admin`` database."
msgstr ""

#: ../source/core/access-control.txt:79
# a1e8129d58f04346b48c7a4ed14fa49f
msgid "To create and manage roles, MongoDB provides :ref:`role management commands <role-management-commands>`. MongoDB scopes each role to the database in which it is created and uniquely identifies each role by the pairing of its name and its database. MongoDB stores the user-defined roles information in the :doc:`system.roles collection </reference/system-roles-collection>` of the ``admin`` database."
msgstr ""

#: ../source/core/access-control.txt:86
# 6bc39db067564e0588a7826e810d943e
msgid ":dbcommand:`createRole` and :ref:`role-management-commands`."
msgstr ""

#: ../source/core/access-control.txt:91
# 777517a655444390807d9e4d7883a58c
msgid "Collection-Level Access Control"
msgstr ""

#: ../source/core/access-control.txt:95
# 5df7caa13cd4430a827699be1d39aed4
msgid "MongoDB provides the ability to specify user privileges at a collection-level granularity. To specify collection-level access control, create a custom role that pairs its actions to a particular collection in that database in the :ref:`resource document <resource-document>`."
msgstr ""

#: ../source/core/access-control.txt:101
# 4b2345d862744a91b38bcd63d59893ed
msgid "The MongoDB :doc:`system-defined roles </reference/system-defined-roles>` grant privileges at a database-level only, and thus cannot be used to control privileges at the collection-level."
msgstr ""

#: ../source/core/access-control.txt:106
# 99addc14a3404bbfb849d5c291b2b754
msgid "Role Assignment to Users"
msgstr ""

#: ../source/core/access-control.txt:108
# e6123bfaab5e47f9b84a1d253f4dfb86
msgid "Users can have multiple roles and can have different roles on different databases. Assigning roles to a user authorizes the user to have only the privileges granted by the roles. Roles always grant privileges and never limit access. For example, if a user has both :authrole:`read` *and* :authrole:`readWriteAnyDatabase` roles on a database, the greater access prevails. A user's role assignments can include :ref:`system-defined roles <system-user-roles>` provided by MongoDB or a :ref:`custom roles <user-defined-roles>` defined by the user."
msgstr ""

#: ../source/core/access-control.txt:117
# 4d1f9b71f62644ddbd9784e22d770d5d
msgid "To assign roles to users, you must be a user with an administrative role in the database. As such, you must first create an administrative user. For details, see :doc:`/tutorial/add-user-administrator` and :doc:`/tutorial/add-user-to-database`."
msgstr ""

#: ../source/core/access-control.txt:122
# 3ad59f638f864d20978b8eb551b93ba1
msgid "MongoDB stores each user's role assignments in the ``admin`` database's :doc:`system.users collection </reference/system-users-collection>`. To manage data in this collection, MongoDB provides :ref:`user management commands <user-management-commands>`, which require proper authorization to use in order to prevent privilege escalation attacks."
msgstr ""

