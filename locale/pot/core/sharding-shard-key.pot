# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharding-shard-key.txt:10
# 93751d2f30574c678000a3c5bcfe24c9
msgid "Shard Keys"
msgstr ""

#: ../source/core/sharding-shard-key.txt:14
# 079b061bd0e049c4bf778a5b1014b39f
msgid "The shard key determines the distribution of the collection's :term:`documents <document>` among the cluster's :term:`shards <shard>`. The shard key is either an indexed :term:`field` or an indexed compound field that exists in every document in the collection."
msgstr ""

#: ../source/core/sharding-shard-key.txt:20
# 4d4e7b42e20b406a8a4770b3050c6acf
msgid "MongoDB partitions data in the collection using ranges of shard key values. Each range, or :term:`chunk`, defines a non-overlapping range of shard key values. MongoDB distributes the chunks, and their documents, among the shards in the cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:27
# 8856214088d64e748d90ef7dab2ad7ce
msgid "When a chunk grows beyond the :ref:`chunk size <sharding-chunk-size>`, MongoDB :term:`splits <split>` the chunk into smaller chunks, always based on ranges in the shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:31
# 1c12cd4b55564d538e06bf0c8a4fc277
msgid "Shard keys are immutable and cannot be changed after insertion. See the :ref:`system limits for sharded cluster <limits-sharding>` for more information."
msgstr ""

#: ../source/core/sharding-shard-key.txt:38
# 52fe7cd24906471e9adb0d5342992879
msgid "Hashed Shard Keys"
msgstr ""

#: ../source/core/sharding-shard-key.txt:42
# 45d3ddabb0ab4935951b1ee9f1f49961
msgid "Hashed shard keys use a :ref:`hashed index <index-hashed-index>` of a single field as the :term:`shard key` to partition data across your sharded cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:46
# 2fe529a7004b4b49b7dc77ee9cd091b8
msgid "The field you choose as your hashed shard key should have a good cardinality, or large number of different values. Hashed keys work well with fields that increase monotonically like :term:`ObjectId` values or timestamps."
msgstr ""

#: ../source/core/sharding-shard-key.txt:51
# 58790bb8569248588bbe574ccca7534d
msgid "If you shard an empty collection using a hashed shard key, MongoDB will automatically create and migrate chunks so that each shard has two chunks.  You can control how many chunks MongoDB will create with the ``numInitialChunks`` parameter to :dbcommand:`shardCollection` or by manually creating chunks on the empty collection using the :dbcommand:`split` command."
msgstr ""

#: ../source/core/sharding-shard-key.txt:58
# 6917db803eae455bb95ccf94482bda6d
msgid "To shard a collection using a hashed shard key, see :doc:`/tutorial/shard-collection-with-a-hashed-shard-key`."
msgstr ""

#: ../source/includes/tip-applications-do-not-need-to-compute-hashes.rst:0
# b24484ca968d4341924273881f925d7b
msgid "Tip"
msgstr ""

#: ../source/includes/tip-applications-do-not-need-to-compute-hashes.rst:3
# 0e11bd5808264ad88153402cc532e1b2
msgid "MongoDB automatically computes the hashes when resolving queries using hashed indexes.  Applications do **not** need to compute hashes."
msgstr ""

#: ../source/core/sharding-shard-key.txt:64
# 347428099571448fb7ce5e727785f11b
msgid "Impacts of Shard Keys on Cluster Operations"
msgstr ""

#: ../source/core/sharding-shard-key.txt:66
# 5c01dc7cac8b41eb8e9578f4b782042f
msgid "The shard key affects write and query performance by determining how the MongoDB partitions data in the cluster and how effectively the :program:`mongos` instances can direct operations to the cluster. Consider the following operational impacts of shard key selection:"
msgstr ""

#: ../source/core/sharding-shard-key.txt:76
# 3f6bf60860e840f088db87d1788e4f8f
msgid "Write Scaling"
msgstr ""

#: ../source/core/sharding-shard-key.txt:78
# 09e536a0ff3f4b9f85e74879f3ccfb4c
msgid "Some possible shard keys will allow your application to take advantage of the increased write capacity that the cluster can provide, while others do not. Consider the following example where you shard by the values of the default :term:`_id` field, which is :term:`ObjectID`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:83
# 2dca117b147949cb83fd3ba20af76baf
msgid "MongoDB generates ``ObjectID`` values upon document creation to produce a unique identifier for the object. However, the most significant bits of data in this value represent a time stamp, which means that they increment in a regular and predictable pattern. Even though this value has :ref:`high cardinality <sharding-shard-key-cardinality>`, when using this, *any date, or other monotonically increasing number* as the shard key, all insert operations will be storing data into a single chunk, and therefore, a single shard. As a result, the write capacity of this shard will define the effective write capacity of the cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:94
# c010a6aa9ab4420f832320013cb0c8a8
msgid "A shard key that increases monotonically will not hinder performance if you have a very low insert rate, or if most of your write operations are :method:`~db.collection.update()` operations distributed through your entire data set. Generally, choose shard keys that have *both* high cardinality and will distribute write operations across the *entire cluster*."
msgstr ""

#: ../source/core/sharding-shard-key.txt:101
# 493930b1251043ccb1984df70bbb2c95
msgid "Typically, a computed shard key that has some amount of \"randomness,\" such as ones that include a cryptographic hash (i.e. MD5 or SHA1) of other content in the document, will allow the cluster to scale write operations. However, random shard keys do not typically provide :ref:`query isolation <sharding-shard-key-query-isolation>`, which is another important characteristic of shard keys."
msgstr ""

#: ../source/core/sharding-shard-key.txt:108
# 1332aeba01ff4263802a96c6a9b036e8
msgid "MongoDB makes it possible to shard a collection on a hashed index. This can greatly improve write scaling. See :doc:`/tutorial/shard-collection-with-a-hashed-shard-key`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:116
# a7b51781a15047a39947976078abc6ab
msgid "Querying"
msgstr ""

#: ../source/core/sharding-shard-key.txt:118
# f7a8a052ff0c4df1bb85b690056a009f
msgid "The :program:`mongos` provides an interface for applications to interact with sharded clusters that hides the complexity of :term:`data partitioning <partition>`. A :program:`mongos` receives queries from applications, and uses metadata from the :ref:`config server <sharding-config-server>`, to route queries to the :program:`mongod` instances with the appropriate data. While the :program:`mongos` succeeds in making all querying operational in sharded environments, the :term:`shard key` you select can have a profound affect on query performance."
msgstr ""

#: ../source/core/sharding-shard-key.txt:128
# b6e1639670724f5f877ec89d4e6179dd
msgid "The :doc:`/core/sharded-cluster-query-router` and :ref:`config server <sharding-config-server>` sections for a more general overview of querying in sharded environments."
msgstr ""

#: ../source/core/sharding-shard-key.txt:136
# b9cc0d6d39e44d1aa5d9c9d4e2661600
msgid "Query Isolation"
msgstr ""

#: ../source/core/sharding-shard-key.txt:138
# 4e49a0d0e90f479bb281160a95d6fc0c
msgid "The fastest queries in a sharded environment are those that :program:`mongos` will route to a single shard, using the :term:`shard key` and the cluster meta data from the :ref:`config server <sharding-config-server>`. For queries that don't include the shard key, :program:`mongos` must query all shards, wait for their response and then return the result to the application. These \"scatter/gather\" queries can be long running operations."
msgstr ""

#: ../source/core/sharding-shard-key.txt:146
# 4920d6b0f69e409cae6ade8ef1f32b36
msgid "If your query includes the first component of a compound shard key [#shard-key-index]_, the :program:`mongos` can route the query directly to a single shard, or a small number of shards, which provides better performance. Even if you query values of the shard key reside in different chunks, the :program:`mongos` will route queries directly to specific shards."
msgstr ""

#: ../source/core/sharding-shard-key.txt:153
# 4f52ea9a67e946098937a2f93cb955fe
msgid "To select a shard key for a collection:"
msgstr ""

#: ../source/core/sharding-shard-key.txt:155
# 70e12e384ae8473eb666783e335138b2
msgid "determine the most commonly included fields in queries for a given application"
msgstr ""

#: ../source/core/sharding-shard-key.txt:158
# 15825f1ae28647b5a1a8dda0de738f6d
msgid "find which of these operations are most performance dependent."
msgstr ""

#: ../source/core/sharding-shard-key.txt:162
# a121c98d2b4b45bc89696f35e993fe00
msgid "If this field has low cardinality (i.e not sufficiently selective) you should add a second field to the shard key making a compound shard key. The data may become more splittable with a compound shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:170
# 0f919c212f784f30b204f74c63e8ac2e
msgid "In many ways, you can think of the shard key a cluster-wide unique index. However, be aware that sharded systems cannot enforce cluster-wide unique indexes *unless* the unique field is in the shard key. Consider the :doc:`/core/indexes` page for more information on indexes and compound indexes."
msgstr ""

#: ../source/core/sharding-shard-key.txt:177
# 10bd829e06d94f2f8442dee802f340a6
msgid "Sorting"
msgstr ""

#: ../source/core/sharding-shard-key.txt:179
# fd2bc29d15824d8e8e035f748abba053
msgid "In sharded systems, the :program:`mongos` performs a merge-sort of all sorted query results from the shards. See :doc:`/core/sharded-cluster-query-router` and :ref:`index-sort` for more information."
msgstr ""

#: ../source/core/sharding-shard-key.txt:1
#: ../source/core/sharding-shard-key.txt:1
#: ../source/core/sharding-shard-key.txt:72
#: ../source/core/sharding-shard-key.txt:132
# b6b4d6e963d54325970f407e9b7fd0c6
# b6b4d6e963d54325970f407e9b7fd0c6
# 9ab324b378d14905aa51705714f88fe0
# 17e9e49fa2b3405a957aa3901b9c09d9
msgid "shard key"
msgstr ""

#: ../source/core/sharding-shard-key.txt:1
# b6b4d6e963d54325970f407e9b7fd0c6
msgid "sharding"
msgstr ""

#: ../source/core/sharding-shard-key.txt:72
# 9ab324b378d14905aa51705714f88fe0
msgid "write scaling"
msgstr ""

#: ../source/core/sharding-shard-key.txt:132
# 17e9e49fa2b3405a957aa3901b9c09d9
msgid "query isolation"
msgstr ""

