# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-sync.txt:3
# 90b05f47439845908df6c2ff50e30585
msgid "Replica Set Data Synchronization"
msgstr ""

#: ../source/core/replica-set-sync.txt:7
# b8ab865584ff4ecab6b8053cce75a372
msgid "In order to maintain up-to-date copies of the shared data set, members of a replica set :term:`sync` or replicate data from other members. MongoDB uses two forms of data synchronization: :ref:`initial sync <replica-set-initial-sync>` to populate new members with the full data set, and replication to apply ongoing changes to the entire data set."
msgstr ""

#: ../source/core/replica-set-sync.txt:17
# 0a2f419418794b3c8824ea9c80694108
msgid "Initial Sync"
msgstr ""

#: ../source/core/replica-set-sync.txt:19
# 16b8ca3578324d2aa20878c7ef96826f
msgid "Initial sync copies all the data from one member of the replica set to another member. A member uses initial sync when the member has no data, such as when the member is new, or when the member has data but is missing a history of the set's replication."
msgstr ""

#: ../source/core/replica-set-sync.txt:24
# a116b33263c14774835a5bebc19a8a42
msgid "When you perform an initial sync, MongoDB does the following:"
msgstr ""

#: ../source/core/replica-set-sync.txt:26
# 86d1a4dc8a494c38a79d20b01851e9a9
msgid "Clones all databases. To clone, the :program:`mongod` queries every collection in each source database and inserts all data into its own copies of these collections."
msgstr ""

#: ../source/core/replica-set-sync.txt:30
# 73f45f4eb22c41748ed1d84fe4e29503
msgid "Applies all changes to the data set. Using the oplog from the source, the :program:`mongod` updates its data set to reflect the current state of the replica set."
msgstr ""

#: ../source/core/replica-set-sync.txt:34
# a4b4ef9449f642d3be1ccf19bfc7cd82
msgid "Builds all indexes on all collections."
msgstr ""

#: ../source/core/replica-set-sync.txt:36
# 48cf959ddf96433bb4609e20fdd9bcfc
msgid "When the :program:`mongod` finishes building all index builds, the member can transition to a normal state, i.e. :term:`secondary`."
msgstr ""

#: ../source/core/replica-set-sync.txt:39
# 455928eb5d0248918b6f978a88d8d59a
msgid "To perform an initial sync, see :doc:`/tutorial/resync-replica-set-member`."
msgstr ""

#: ../source/core/replica-set-sync.txt:45
# 10c7cabdf02147078c898ce41bda0e30
msgid "Replication"
msgstr ""

#: ../source/core/replica-set-sync.txt:47
# 2dc7cab5adef4819a7481fb2c1890b8e
msgid "Replica set members replicate data continuously after the initial sync. This process keeps the members up to date with all changes to the replica set's data. In most cases, secondaries synchronize from the primary. Secondaries may automatically change their *sync targets* if needed based on changes in the ping time and state of other members' replication."
msgstr ""

#: ../source/core/replica-set-sync.txt:79
# be70deab2b6347ce9f5c196007346a4d
msgid "For a member to sync from another, the :data:`~local.system.replset.members[n].buildIndexes` setting for both members must have the same value/ :data:`~local.system.replset.members[n].buildIndexes` must be either ``true`` or ``false`` for both members."
msgstr ""

#: ../source/core/replica-set-sync.txt:85
# 6f69c80309234ea9bdd56fe1fb4c4e2f
msgid "Beginning in version 2.2, secondaries avoid syncing from :ref:`delayed members <replica-set-delayed-members>` and :ref:`hidden members <replica-set-hidden-members>`."
msgstr ""

#: ../source/core/replica-set-sync.txt:90
# 9a193ce9c7ec49fd8f1e353b3419891b
msgid "Validity and Durability"
msgstr ""

#: ../source/core/replica-set-sync.txt:94
# 3c05f2fc570c4e35a0bbaf387a21caa9
msgid "In a replica set, only the primary can accept write operations. Writing only to the primary provides :term:`strict consistency` among members."
msgstr ""

#: ../source/core/replica-set-sync.txt:97
# 3969cde8a4bb47efb4a2c400fb6b2ebd
msgid ":term:`Journaling <journal>` provides single-instance write durability. Without journaling, if a MongoDB instance terminates ungracefully, you must assume that the database is in an invalid state."
msgstr ""

#: ../source/core/replica-set-sync.txt:104
# 24faeb86f8f3449db2e90090153ef5c0
msgid "Multithreaded Replication"
msgstr ""

#: ../source/core/replica-set-sync.txt:106
# 0f08da33965d4b19938c901119c2a4ea
msgid "MongoDB applies write operations in batches using multiple threads to improve concurrency. MongoDB groups batches by namespace and applies operations using a group of threads, but always applies the write operations to a namespace in order."
msgstr ""

#: ../source/core/replica-set-sync.txt:111
# b92473badd484a328fe03f15bf334665
msgid "While applying a batch, MongoDB blocks all reads. As a result, secondaries can never return data that reflects a state that never existed on the primary."
msgstr ""

#: ../source/core/replica-set-sync.txt:116
# f1d45af0b07f4fbc962799ab066fb23f
msgid "Pre-Fetching Indexes to Improve Replication Throughput"
msgstr ""

#: ../source/core/replica-set-sync.txt:118
# fc37c3db9f144cfeb7398c39fada822b
msgid "To help improve the performance of applying oplog entries, MongoDB fetches memory pages that hold affected data and indexes. This *pre-fetch* stage minimizes the amount of time MongoDB holds the write lock while applying oplog entries. By default, secondaries will pre-fetch all :ref:`indexes`."
msgstr ""

#: ../source/core/replica-set-sync.txt:124
# 8994bbc08c6449359b2a4d157ad305c6
msgid "Optionally, you can disable all pre-fetching or only pre-fetch the index on the ``_id`` field. See the :setting:`replIndexPrefetch` setting for more information."
msgstr ""

