# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/distributed-queries.txt:6
# 61220ab958b64687a1198612e37f6156
msgid "Distributed Queries"
msgstr ""

#: ../source/core/distributed-queries.txt:14
# ebe245be722b4e858b8d4ffd8e0f27bf
msgid "Read Operations to Sharded Clusters"
msgstr ""

#: ../source/core/distributed-queries.txt:16
# 111d46839aa34366b7fe20f023364873
msgid ":term:`Sharded clusters <sharded cluster>` allow you to partition a data set among a cluster of :program:`mongod` instances in a way that is nearly transparent to the application. For an overview of sharded clusters, see the :doc:`/sharding` section of this manual."
msgstr ""

#: ../source/core/distributed-queries.txt:21
# b85a7ec675cc4bbdb8a2bc38090b3658
msgid "For a sharded cluster, applications issue operations to one of the :program:`mongos` instances associated with the cluster."
msgstr ""

#: ../source/core/distributed-queries.txt:26
# f13834953de34268a2ff461bb5681c4a
msgid "Read operations on sharded clusters are most efficient when directed to a specific shard. Queries to sharded collections should include the collection's :ref:`shard key <sharding-shard-key>`. When a query includes a shard key, the :program:`mongos` can use cluster metadata from the :ref:`config database <sharding-config-server>` to route the queries to shards."
msgstr ""

#: ../source/core/distributed-queries.txt:35
# a76540168a7a4a25916440b20e71725f
msgid "If a query does not include the shard key, the :program:`mongos` must direct the query to *all* shards in the cluster. These *scatter gather* queries can be inefficient. On larger clusters, scatter gather queries are unfeasible for routine operations."
msgstr ""

#: ../source/core/distributed-queries.txt:42
# 94d58be020c546d4afa3cf3c2baa96a6
msgid "For more information on read operations in sharded clusters, see the :doc:`/core/sharded-cluster-query-router` and :ref:`sharding-shard-key` sections."
msgstr ""

#: ../source/core/distributed-queries.txt:51
# 0416630f6cf8490c8c7111058e16d011
msgid "Read Operations to Replica Sets"
msgstr ""

#: ../source/core/distributed-queries.txt:53
# cbff47bb36a846d791721ac27ef052b7
msgid ":term:`Replica sets <replica set>` use :term:`read preferences <read preference>` to determine where and how to route read operations to members of the replica set. By default, MongoDB always reads data from a replica set's :term:`primary`. You can modify that behavior by changing the :ref:`read preference mode <replica-set-read-preference-modes>`."
msgstr ""

#: ../source/core/distributed-queries.txt:60
# 85a26eb427a94f9fb0a954cb67429826
msgid "You can configure the :ref:`read preference mode <replica-set-read-preference-modes>` on a per-connection or per-operation basis to allow reads from :term:`secondaries <secondary>` to:"
msgstr ""

#: ../source/core/distributed-queries.txt:65
# dbf30757b74343eba7e91ee59626572c
msgid "reduce latency in multi-data-center deployments,"
msgstr ""

#: ../source/core/distributed-queries.txt:67
# d02bfd2f9321482884e76f79831f3dd5
msgid "improve read throughput by distributing high read-volumes (relative to write volume),"
msgstr ""

#: ../source/core/distributed-queries.txt:70
# 455804072c3c410282f72fb6c6ecb7cd
msgid "for backup operations, and/or"
msgstr ""

#: ../source/core/distributed-queries.txt:72
# 22718960911843cdb514da15dc768b6c
msgid "to allow reads during :ref:`failover <replica-set-failover>` situations."
msgstr ""

#: ../source/core/distributed-queries.txt:77
# e4af7e2eaea64780bd3e45116a4238e6
msgid "Read operations from secondary members of replica sets are not guaranteed to reflect the current state of the primary, and the state of secondaries will trail the primary by some amount of time. Often, applications don't rely on this kind of strict consistency, but application developers should always consider the needs of their application before setting read preference."
msgstr ""

#: ../source/core/distributed-queries.txt:84
# 00ae06d8b66c426980e177bdad5ef2eb
msgid "For more information on read preference or on the read preference modes, see :doc:`/core/read-preference` and :ref:`replica-set-read-preference-modes`."
msgstr ""

#: ../source/core/distributed-queries.txt:1
#: ../source/core/distributed-queries.txt:46
# 5cc1cfffaf03483787d8dc0400d45cf9
# ec35c73c255b48c7a82413f3bd6f2847
msgid "read operation"
msgstr ""

#: ../source/core/distributed-queries.txt:1
# 5cc1cfffaf03483787d8dc0400d45cf9
msgid "architecture"
msgstr ""

#: ../source/core/distributed-queries.txt:46
#: ../source/core/distributed-queries.txt:47
# ec35c73c255b48c7a82413f3bd6f2847
# be3948f1bc8f430eb986d326d9150ddc
msgid "connection pooling"
msgstr ""

#: ../source/core/distributed-queries.txt:47
# be3948f1bc8f430eb986d326d9150ddc
msgid "read operations"
msgstr ""

