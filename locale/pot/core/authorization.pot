# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/authorization.txt:5
# 34ab3980cae8462db18e90012f4a3c70
msgid "Authorization"
msgstr ""

#: ../source/core/authorization.txt:9
# 02494f335d9d4ea091b7d15ea98c877a
msgid "MongoDB employs Role-Based Access Control (RBAC) to govern access to a MongoDB system. A user is granted one or more :ref:`roles <roles>` that determine the user's access to database resources and operations. Outside of role assignments, the user has no access to the system."
msgstr ""

#: ../source/core/authorization.txt:14
# 236adf7ae0784656b384f26ea84519c7
msgid "MongoDB provides :doc:`built-in roles </reference/built-in-roles>`, each with a dedicated purpose for a common use case. Examples include the :authrole:`read`, :authrole:`readWrite`, :authrole:`dbAdmin`, and :authrole:`root` roles."
msgstr ""

#: ../source/core/authorization.txt:19
# 6bf898c73a9147d7888b5acb942df60e
msgid "Administrators also can create new roles and privileges to cater to operational needs. Administrators can assign privileges scoped as granularly as the collection level."
msgstr ""

#: ../source/core/authorization.txt:23
# aaa07fa0feb74ad6b274888720489742
msgid "When granted a role, a user receives all the privileges of that role. A user can have several roles concurrently, in which case the user receives the union of all the privileges of the respective roles."
msgstr ""

#: ../source/core/authorization.txt:30
# 14477ced00ba4f5da6cee46fe6fc45b8
msgid "Roles"
msgstr ""

#: ../source/core/authorization.txt:32
# 58e04934026d4c859b929042b351b9f2
msgid "A role consists of privileges that pair resources with allowed operations. Each privilege is defined directly in the role or inherited from another role."
msgstr ""

#: ../source/core/authorization.txt:36
# 0afcc95dc1884d068958158d2f0f7824
msgid "A role's privileges apply to the database where the role is created. A role created on the ``admin`` database can include privileges that apply to all databases or to the :ref:`cluster <resource-cluster>`."
msgstr ""

#: ../source/core/authorization.txt:40
# 52f49660c7cf4e6aa37e828246e7a871
msgid "A user assigned a role receives all the privileges of that role. The user can have multiple roles and can have different roles on different databases."
msgstr ""

#: ../source/core/authorization.txt:43
# 24dd7101145542d690800b04b0a561f9
msgid "Roles always grant privileges and never limit access. For example, if a user has both :authrole:`read` *and* :authrole:`readWriteAnyDatabase` roles on a database, the greater access prevails."
msgstr ""

#: ../source/core/authorization.txt:50
# e1097cc77bf6461abc3798c91d3d2445
msgid "Privileges"
msgstr ""

#: ../source/core/authorization.txt:52
# 23491574414041ebaf0685fbf6baf6cf
msgid "A privilege consists of a specified resource and the actions permitted on the resource."
msgstr ""

#: ../source/core/authorization.txt:55
# 39d54c6e14184473a5c186494af72b86
msgid "A privilege :doc:`resource </reference/resource-document>` is either a database, collection, set of collections, or the cluster. If the cluster, the affiliated actions affect the state of the system rather than a specific database or collection."
msgstr ""

#: ../source/core/authorization.txt:60
# f9302d06049949c9853136c9e63abc40
msgid "An :doc:`action </reference/privilege-actions>` is a command or method the user is allowed to perform on the resource. A resource can have multiple allowed actions. For available actions see :doc:`/reference/privilege-actions`."
msgstr ""

#: ../source/core/authorization.txt:65
# c703a79ec0884089904ba05d69b29740
msgid "For example, a privilege that includes the :authaction:`update` action allows a user to modify existing documents on the resource. To additionally grant the user permission to create documents on the resource, the administrator would add the :authaction:`insert` action to the privilege."
msgstr ""

#: ../source/core/authorization.txt:71
# 74e092abae8e4bb7a37dccbad636191e
msgid "For privilege syntax, see :data:`admin.system.roles.privileges`."
msgstr ""

#: ../source/core/authorization.txt:76
# 8c24f7e4170541619c1d17e1d78d4f53
msgid "Inherited Privileges"
msgstr ""

#: ../source/core/authorization.txt:78
# c036b2b1c6414f4794533802d0f5a800
msgid "A role can include one or more existing roles in its definition, in which case the role inherits all the privileges of the included roles."
msgstr ""

#: ../source/core/authorization.txt:81
# bb9670c2209e48d896cf7e54f431e49c
msgid "A role can inherit privileges from other roles in its database. A role created on the ``admin`` database can inherit privileges from roles in any database."
msgstr ""

#: ../source/core/authorization.txt:87
# d4c8b23b1961422386c4a0736c1e2f68
msgid "User-Defined Roles"
msgstr ""

#: ../source/core/authorization.txt:91
# 823d683125bf494a8cf9916235736848
msgid "User administrators can create custom roles to ensure collection-level and command-level granularity and to adhere to the policy of :term:`least privilege`. Administrators create and edit roles using the :ref:`role management commands <role-management-commands>`."
msgstr ""

#: ../source/core/authorization.txt:96
# 17249fdbab1148baae3cbfb3c30aa9b7
msgid "MongoDB scopes a user-defined role to the database in which it is created and uniquely identifies the role by the pairing of its name and its database. MongoDB stores the roles in the ``admin`` database's :doc:`system.roles </reference/system-roles-collection>` collection. Do not access this collection directly but instead use the :ref:`role management commands <role-management-commands>` to view and edit custom roles."
msgstr ""

#: ../source/core/authorization.txt:104
# 79b072ce56da456a98c1122901db5708
msgid "Role Assignment to Users"
msgstr ""

#: ../source/core/authorization.txt:106
# bebf2cc33aaa42988a24381f042f4645
msgid "User administrators create the users that access the system's databases. MongoDB's :ref:`user management commands <user-management-commands>` let administrators create users and assign them roles."
msgstr ""

#: ../source/core/authorization.txt:110
# 856bc149da1549918bc3c1e7b48bbb95
msgid "MongoDB scopes a user to the database in which the user is created. MongoDB stores all user definitions in the ``admin`` database, no matter which database the user is scoped to. MongoDB stores users in the ``admin`` database's :doc:`system.users collection </reference/system-users-collection>`. Do not access this collection directly but instead use the :ref:`user management commands <user-management-commands>`."
msgstr ""

#: ../source/core/authorization.txt:118
# 84d6db536c0c4850a9b1ec1e48034cdc
msgid "The first role assigned in a database should be either :authrole:`userAdmin` or :authrole:`userAdminAnyDatabase`. This user can then create all other users in the system. See :doc:`/tutorial/add-user-administrator`."
msgstr ""

#: ../source/core/authorization.txt:123
# 18b17f6411584384ab1b56639cd0ff56
msgid "See Also"
msgstr ""

#: ../source/core/authorization.txt:125
# fbd8c976c9154ae7bcb32caed362b6a2
msgid ":doc:`/reference/built-in-roles`"
msgstr ""

#: ../source/core/authorization.txt:127
# ea0efbd7fe5f41a0a287dd30ebab9fa9
msgid ":doc:`/reference/resource-document`"
msgstr ""

#: ../source/core/authorization.txt:129
# 4ac811629a2647529293c9b5947a29a5
msgid ":doc:`/reference/privilege-actions`"
msgstr ""

#: ../source/core/authorization.txt:131
# 787443c4fcba4656a7bb591fce5c6a78
msgid ":doc:`/tutorial/add-user-administrator`"
msgstr ""

#: ../source/core/authorization.txt:133
# c9c5d30d76894cde9e9977adc384eb86
msgid ":doc:`/tutorial/add-user-to-database`"
msgstr ""

