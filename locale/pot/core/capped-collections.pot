# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/capped-collections.txt:3
# 735216a13d1f4d7b8af1f80c8d9b9e83
msgid "Capped Collections"
msgstr ""

#: ../source/core/capped-collections.txt:7
# c8a72b2d07354941a60d19c8dcbc61ac
msgid ":term:`Capped collections <capped collection>` are fixed-size collections that support high-throughput operations that insert, retrieve, and delete documents based on insertion order. Capped collections work in a way similar to circular buffers: once a collection fills its allocated space, it makes room for new documents by overwriting the oldest documents in the collection."
msgstr ""

#: ../source/core/capped-collections.txt:14
# b97c4f54748e4b98adba06103af2e9fe
msgid "See :method:`~db.createCollection()` or :dbcommand:`createCollection` for more information on creating capped collections."
msgstr ""

#: ../source/core/capped-collections.txt:17
# 43f0347746f0458183333e312a2b8dd7
msgid "Capped collections have the following behaviors:"
msgstr ""

#: ../source/core/capped-collections.txt:19
# 00b6b39030c14b288f9823c24c01b453
msgid "Capped collections guarantee preservation of the insertion order. As a result, queries do not need an index to return documents in insertion order. Without this indexing overhead, they can support higher insertion throughput."
msgstr ""

#: ../source/core/capped-collections.txt:24
# b034125ff0a1460d8d08d63d03be1e0f
msgid "Capped collections guarantee that insertion order is identical to the order on disk (:term:`natural order`) and do so by prohibiting updates that increase document size. Capped collections only allow updates that fit the original document size, which ensures a document does not change its location on disk."
msgstr ""

#: ../source/core/capped-collections.txt:30
# 97e765f2e11544578bf9ef8017587af6
msgid "Capped collections automatically remove the oldest documents in the collection without requiring scripts or explicit remove operations."
msgstr ""

#: ../source/core/capped-collections.txt:33
# 6fe4910edc2e491a9b570c7bedf236d9
msgid "For example, the :term:`oplog.rs <oplog>` collection that stores a log of the operations in a :term:`replica set` uses a capped collection. Consider the following potential use cases for capped collections:"
msgstr ""

#: ../source/core/capped-collections.txt:38
# 6742a7e7d7724a758b32d6240da6287e
msgid "Store log information generated by high-volume systems. Inserting documents in a capped collection without an index is close to the speed of writing log information directly to a file system. Furthermore, the built-in *first-in-first-out* property maintains the order of events, while managing storage use."
msgstr ""

#: ../source/core/capped-collections.txt:44
# 33fe5d8f11d140d8886a615dceb83435
msgid "Cache small amounts of data in a capped collections. Since caches are read rather than write heavy, you would either need to ensure that this collection *always* remains in the working set (i.e. in RAM) *or* accept some write penalty for the required index or indexes."
msgstr ""

#: ../source/core/capped-collections.txt:53
# 85db01ff47b64bc4bc55a4e9500f08fa
msgid "Recommendations and Restrictions"
msgstr ""

#: ../source/core/capped-collections.txt:55
# 220500a5d44b4aac8431c79751194a3b
msgid "You *can* update documents in a collection after inserting them. *However,* these updates **cannot** cause the documents to grow. If the update operation causes the document to grow beyond their original size, the update operation will fail."
msgstr ""

#: ../source/core/capped-collections.txt:60
# b2e00f318b074ae0bac218f73bde9815
msgid "If you plan to update documents in a capped collection, create an index so that these update operations do not require a table scan."
msgstr ""

#: ../source/core/capped-collections.txt:63
# 8470848402fe41e5b6fe6ddd53a92e77
msgid "You cannot delete documents from a capped collection. To remove all records from a capped collection, use the 'emptycapped' command. To remove the collection entirely, use the :method:`~db.collection.drop()` method."
msgstr ""

#: ../source/core/capped-collections.txt:68
# 6ce9642128e04973b131c3133d9b17c1
msgid "You cannot shard a capped collection."
msgstr ""

#: ../source/core/capped-collections.txt:70
# 46bc387619ff49a8b988b1527d8be59b
msgid "Capped collections created after 2.2 have an ``_id`` field and an index on the ``_id`` field by default. Capped collections created before 2.2 do not have an index on the ``_id`` field by default. If you are using capped collections with replication prior to 2.2, you should explicitly create an index on the ``_id`` field."
msgstr ""

#: ../source/core/capped-collections.txt:78
# a836f11b3a574bf897c6f3c2bbaa8141
msgid "If you have a capped collection in a :term:`replica set` outside of the ``local`` database, before 2.2, you should create a unique index on ``_id``. Ensure uniqueness using the ``unique: true`` option to the :method:`~db.collection.ensureIndex()` method or by using an :term:`ObjectId` for the ``_id`` field. Alternately, you can use the ``autoIndexId`` option to :dbcommand:`create` when creating the capped collection, as in the :ref:`capped-collections-options` procedure."
msgstr ""

#: ../source/core/capped-collections.txt:87
# c83a49a6787d48cf80a53964133da606
msgid "Use natural ordering to retrieve the most recently inserted elements from the collection efficiently. This is (somewhat) analogous to tail on a log file."
msgstr ""

#: ../source/core/capped-collections.txt:91
# 137218a1f12948b587b97b54123aed3e
msgid "The aggregation pipeline operator :pipeline:`$out` cannot write results to a capped collection."
msgstr ""

#: ../source/core/capped-collections.txt:95
# 8b518f746dc24d32a32e6bf65fc63994
msgid "Procedures"
msgstr ""

#: ../source/core/capped-collections.txt:98
# 85839ae4f2cd454fb445eb0c56808b81
msgid "Create a Capped Collection"
msgstr ""

#: ../source/core/capped-collections.txt:100
# ccc7fa04ac1347b29f3f24ed7253dac7
msgid "You must create capped collections explicitly using the :method:`~db.createCollection()` method, which is a helper in the :program:`mongo` shell for the :dbcommand:`create` command. When creating a capped collection you must specify the maximum size of the collection in bytes, which MongoDB will pre-allocate for the collection. The size of the capped collection includes a small amount of space for internal overhead."
msgstr ""

#: ../source/core/capped-collections.txt:112
# cb3157246a1b4781a0d89018097d2a67
msgid "Additionally, you may also specify a maximum number of documents for the collection using the ``max`` field as in the following document:"
msgstr ""

#: ../source/core/capped-collections.txt:119
# ca2e89430fe7442a973522fc05d98e95
msgid "The ``size`` argument is *always* required, even when you specify ``max`` number of documents. MongoDB will remove older documents if a collection reaches the maximum size limit before it reaches the maximum document count."
msgstr ""

#: ../source/core/capped-collections.txt:0
# 4f27acfdee5f4de5957ae67a6379ee33
msgid "See"
msgstr ""

#: ../source/core/capped-collections.txt:129
# f9ff749139a14ff99a23021d552a8bae
msgid "Query a Capped Collection"
msgstr ""

#: ../source/core/capped-collections.txt:131
# 6d9dd56adc404a77bc0df882d8e4dc29
msgid "If you perform a :method:`~db.collection.find()` on a capped collection with no ordering specified, MongoDB guarantees that the ordering of results is the same as the insertion order."
msgstr ""

#: ../source/core/capped-collections.txt:135
# 09d0030f98f34bd99c1b9ced15b37aab
msgid "To retrieve documents in reverse insertion order, issue :method:`~db.collection.find()` along with the :method:`~cursor.sort()` method with the :operator:`$natural` parameter set to ``-1``, as shown in the following example:"
msgstr ""

#: ../source/core/capped-collections.txt:145
# 94d4315c09c44ee1a4487fe0d8ecf3da
msgid "Check if a Collection is Capped"
msgstr ""

#: ../source/core/capped-collections.txt:147
# 4c43ef0f11e14e34ae749aa8fde6ab5f
msgid "Use the :method:`~db.collection.isCapped()` method to determine if a collection is capped, as follows:"
msgstr ""

#: ../source/core/capped-collections.txt:155
# 054e0374361c4100b661ad4688a49f3f
msgid "Convert a Collection to Capped"
msgstr ""

#: ../source/core/capped-collections.txt:157
# 5873b832ef474a688cc312fc02f201fe
msgid "You can convert a non-capped collection to a capped collection with the :dbcommand:`convertToCapped` command:"
msgstr ""

#: ../source/core/capped-collections.txt:164
# 3ca04676b80643b9b8c5ef71a87859c5
msgid "The ``size`` parameter specifies the size of the capped collection in bytes."
msgstr ""

#: ../source/includes/warning-blocking-global.rst:3
# f8abe4a054b74d49a9e73144afba15af
msgid "This command obtains a global write lock and will block other operations until it has completed."
msgstr ""

#: ../source/core/capped-collections.txt:169
# f4a08e80168e4e53ac10024e224bd9a4
msgid "Before 2.2, capped collections did not have an index on ``_id`` unless you specified ``autoIndexId`` to the :dbcommand:`create`, after 2.2 this became the default."
msgstr ""

#: ../source/core/capped-collections.txt:175
# 841d768d0ddb4fc9ade7eda78390f4f1
msgid "Automatically Remove Data After a Specified Period of Time"
msgstr ""

#: ../source/core/capped-collections.txt:177
# 377854b88f3e4bddbe2d690aeb764c89
msgid "For additional flexibility when expiring data, consider MongoDB's :term:`TTL` indexes, as described in :doc:`/tutorial/expire-data`. These indexes allow you to expire and remove data from normal collections using a special type, based on the value of a date-typed field and a TTL value for the index."
msgstr ""

#: ../source/core/capped-collections.txt:183
# d714a8d46d4a48d9bfe7b6f160cc368b
msgid ":doc:`TTL Collections </tutorial/expire-data>` are not compatible with capped collections."
msgstr ""

#: ../source/core/capped-collections.txt:187
# ff8a689e992344aab7b8ad159d75933a
msgid "Tailable Cursor"
msgstr ""

#: ../source/core/capped-collections.txt:189
# adc633b7573a42fa97f51d502a79ec55
msgid "You can use a tailable cursor with capped collections. Similar to the Unix ``tail -f`` command, the tailable cursor \"tails\" the end of a capped collection. As new documents are inserted into the capped collection, you can use the tailable cursor to continue retrieving documents."
msgstr ""

#: ../source/core/capped-collections.txt:195
# 99edab010b0545f9acd75d66ec745a78
msgid "See :doc:`/tutorial/create-tailable-cursor` for information on creating a tailable cursor."
msgstr ""

