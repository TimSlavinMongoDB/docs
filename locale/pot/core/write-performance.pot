# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/write-performance.txt:3
# 3fb818b1eb7d4a8f9e922356d2e26284
msgid "Write Operation Performance"
msgstr ""

#: ../source/core/write-performance.txt:12
# 1304ac18cca54d84a1dcc04cf33a6807
msgid "Indexes"
msgstr ""

#: ../source/core/write-performance.txt:14
# a1175acb733c4362b51e72ec83d8a920
msgid "After every insert, update, or delete operation, MongoDB must update *every* index associated with the collection in addition to the data itself. Therefore, every index on a collection adds some amount of overhead for the performance of write operations. [#exceptions]_"
msgstr ""

#: ../source/core/write-performance.txt:19
# 82e7caafe5b74b78a2510318acf60c45
msgid "In general, the performance gains that indexes provide for *read operations* are worth the insertion penalty. However, in order to optimize write performance when possible, be careful when creating new indexes and evaluate the existing indexes to ensure that your queries actually use these indexes."
msgstr ""

#: ../source/core/write-performance.txt:25
# a3930df92c964586a7a16ec3f41566a6
msgid "For indexes and queries, see :doc:`/core/query-optimization`. For more information on indexes, see :doc:`/indexes` and :doc:`/applications/indexes`."
msgstr ""

#: ../source/core/write-performance.txt:29
# f9565477abf940c2bdcb0334678f21b5
msgid "For inserts and updates to un-indexed fields, the overhead for :ref:`sparse indexes <index-type-sparse>` is less than for non-sparse indexes. Also for non-sparse indexes, updates that do not change the record size have less indexing overhead."
msgstr ""

#: ../source/core/write-performance.txt:35
# 7c141056b3f646e2b337e87b3d0966e2
msgid "Document Growth"
msgstr ""

#: ../source/core/write-performance.txt:37
# fe9dc21ca4b64a53a75360cc17b23ca6
msgid "If an update operation causes a document to exceed the currently allocated :term:`record size`, MongoDB relocates the document on disk with enough contiguous space to hold the document. These relocations take longer than in-place updates, particularly if the collection has indexes. If a collection has indexes, MongoDB must update all index entries. Thus, for a collection with many indexes, the move will impact the write throughput."
msgstr ""

#: ../source/core/write-performance.txt:45
# 62459c80fd7f484982a022f6cee56bbb
msgid "Some update operations, such as the :update:`$inc` operation, do not cause an increase in document size. For these update operations, MongoDB can apply the updates in-place. Other update operations, such as the :update:`$push` operation, change the size of the document."
msgstr ""

#: ../source/core/write-performance.txt:50
# f9946f351129493f801dc433460b3ad8
msgid "In-place-updates are significantly more efficient than updates that cause document growth. When possible, use :doc:`data models </core/data-models>` that minimize the need for document growth."
msgstr ""

#: ../source/core/write-performance.txt:54
# b309f04ac70c49ff90408c4da9253aeb
msgid "See :doc:`/core/record-padding` for more information."
msgstr ""

#: ../source/core/write-performance.txt:57
# c0a3edc83cae44d8aa3c99290b547f86
msgid "Storage Performance"
msgstr ""

#: ../source/core/write-performance.txt:60
# 4c69cb7f3ecc44bc8d6327e6cc18ac15
msgid "Hardware"
msgstr ""

#: ../source/core/write-performance.txt:62
# 194d260d83264e1f898a6cce48f6a0c7
msgid "The capability of the storage system creates some important physical limits for the performance of MongoDB's write operations. Many unique factors related to the storage system of the drive affect write performance, including random access patterns, disk caches, disk readahead and RAID configurations."
msgstr ""

#: ../source/core/write-performance.txt:68
# 2ee36d805ffa4cdfb052d22ceded906d
msgid "Solid state drives (SSDs) can outperform spinning hard disks (HDDs) by 100 times or more for random workloads."
msgstr ""

#: ../source/core/write-performance.txt:0
# 38c4ecbc9ae848a49d9598051b75bf18
msgid "See"
msgstr ""

#: ../source/core/write-performance.txt:75
# 5e0715fd70d1409a93e6c7f6ed52693b
msgid "Journaling"
msgstr ""

#: ../source/core/write-performance.txt:77
# 2d4d10cb328241a7ac76f293c25a1b68
msgid "MongoDB uses *write ahead logging* to an on-disk :term:`journal` to guarantee :doc:`write operation </core/write-operations>` durability and to provide crash resiliency. Before applying a change to the data files, MongoDB writes the change operation to the journal."
msgstr ""

#: ../source/core/write-performance.txt:82
# 121b011c982d4f219407a3e15fe486bc
msgid "While the durability assurance provided by the journal typically outweigh the performance costs of the additional write operations, consider the following interactions between the journal and performance:"
msgstr ""

#: ../source/core/write-performance.txt:87
# c1e3062fa85349b98240fe5539d70634
msgid "if the journal and the data file reside on the same block device, the data files and the journal may have to contend for a finite number of available write operations. Moving the journal to a separate device may increase the capacity for write operations."
msgstr ""

#: ../source/core/write-performance.txt:92
# 58241ef665064089be97a64901d62ae7
msgid "if applications specify :doc:`write concern </core/write-concern>` that includes :ref:`journaled <write-concern-replica-journaled>`, :program:`mongod` will decrease the duration between journal commits, which can increases the overall write load."
msgstr ""

#: ../source/core/write-performance.txt:97
# 5591a52fd1ad40a2be52e9fb0cde1aa0
msgid "the duration between journal commits is configurable using the :setting:`journalCommitInterval` run-time option. Decreasing the period between journal commits will increase the number of write operations, which can limit MongoDB's capacity for write operations. Increasing the amount of time between commits may decrease the total number of write operation, but also increases the chance that the journal will not record a write operation in the event of a failure."
msgstr ""

#: ../source/core/write-performance.txt:106
# 3924f31f5ad0435db4a626462b3935a3
msgid "For additional information on journaling, see :doc:`/core/journaling`."
msgstr ""

