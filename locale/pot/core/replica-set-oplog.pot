# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-oplog.txt:3
# 7988e253bcc0420aac3f39ee4c4d68b4
msgid "Replica Set Oplog"
msgstr ""

#: ../source/core/replica-set-oplog.txt:7
# d7d8f25cbcde4b2f8bfe3d1a0e8c6955
msgid "The :term:`oplog` (operations log) is a special :term:`capped collection` that keeps a rolling record of all operations that modify the data stored in your databases. MongoDB applies database operations on the :term:`primary` and then records the operations on the primary's oplog. The :term:`secondary` members then copy and apply these operations in an asynchronous process. All replica set members contain a copy of the oplog, allowing them to maintain the current state of the database."
msgstr ""

#: ../source/core/replica-set-oplog.txt:16
# a6fdbde39b15421f945cbe4c81fe7fce
msgid "To facilitate replication, all replica set members send heartbeats (pings) to all other members. Any member can import oplog entries from any other member."
msgstr ""

#: ../source/core/replica-set-oplog.txt:20
# 327560b1e0204aa2a9770203d32c3dc8
msgid "Whether applied once or multiple times to the target dataset, each operation in the oplog produces the same results, i.e. each operation in the oplog is :term:`idempotent`. For proper replication operations, entries in the oplog must be idempotent:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:25
# ea0288cffe5f4063a1976b5a23f747c0
msgid "initial sync"
msgstr ""

#: ../source/core/replica-set-oplog.txt:26
# 4eb01e4713a34c249f4d034e1280a4ff
msgid "post-rollback catch-up"
msgstr ""

#: ../source/core/replica-set-oplog.txt:27
# d2e29a0cf12643dc8f2149f43c20280c
msgid "sharding chunk migrations"
msgstr ""

#: ../source/core/replica-set-oplog.txt:32
# df7ffbcb7ab84fd7a8ad178ec425db91
msgid "Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:34
# 17fd9adadcc9416188360597814a5ad0
msgid "When you start a replica set member for the first time, MongoDB creates an oplog of a default size. The size depends on the architectural details of your operating system."
msgstr ""

#: ../source/core/replica-set-oplog.txt:38
# 86e72c190f974bca88191144d5d03515
msgid "In most cases, the default oplog size is sufficient. For example, if an oplog is 5% of free disk space and fills up in 24 hours of operations, then secondaries can stop copying entries from the oplog for up to 24 hours without becoming too stale to continue replicating. However, most replica sets have much lower operation volumes, and their oplogs can hold much higher numbers of operations."
msgstr ""

#: ../source/core/replica-set-oplog.txt:45
# 60fe846ad48a4ab6bfdd269acb3a69e3
msgid "Before :program:`mongod` creates an oplog, you can specify its size with the :setting:`oplogSize` option. However, after you have started a replica set member for the first time, you can only change the size of the oplog using the :doc:`/tutorial/change-oplog-size` procedure."
msgstr ""

#: ../source/core/replica-set-oplog.txt:55
# 01a989e5ef8a4b70b1744f00fa306ae4
msgid "By default, the size of the oplog is as follows:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:57
# 4f1ab8a27b59435d8cbd2f5c356438fb
msgid "For 64-bit Linux, Solaris, FreeBSD, and Windows systems, MongoDB allocates 5% of the available free disk space to the oplog. If this amount is smaller than a gigabyte, then MongoDB allocates 1 gigabyte of space."
msgstr ""

#: ../source/core/replica-set-oplog.txt:62
# eaa69158760142c981188259951a2bf6
msgid "For 64-bit OS X systems, MongoDB allocates 183 megabytes of space to the oplog."
msgstr ""

#: ../source/core/replica-set-oplog.txt:65
# 3d62154469644e0f95170fd60216acc1
msgid "For 32-bit systems, MongoDB allocates about 48 megabytes of space to the oplog."
msgstr ""

#: ../source/core/replica-set-oplog.txt:69
# 2c859e7c3d174f0d88ad3e4615cc4837
msgid "Workloads that Might Require a Larger Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:71
# 153ce3281bad4dd9bd5f62195120f769
msgid "If you can predict your replica set's workload to resemble one of the following patterns, then you might want to create an oplog that is larger than the default. Conversely, if your application predominantly performs reads and writes only a small amount of data, you will oplog may be sufficient."
msgstr ""

#: ../source/core/replica-set-oplog.txt:77
# b96e02067f9d4fa6b95a4a05cf0c9b8f
msgid "The following workloads might require a larger oplog size."
msgstr ""

#: ../source/core/replica-set-oplog.txt:80
# 771760fec31142d885c66c1790294b2d
msgid "Updates to Multiple Documents at Once"
msgstr ""

#: ../source/core/replica-set-oplog.txt:82
# 8f1ba6cae2044d499b5dec4925cfb8b0
msgid "The oplog must translate multi-updates into individual operations in order to maintain :term:`idempotency <idempotent>`. This can use a great deal of oplog space without a corresponding increase in data size or disk use."
msgstr ""

#: ../source/core/replica-set-oplog.txt:88
# 4b3f7e3bf98b44ac8b3e083bc651594e
msgid "Deletions Equal the Same Amount of Data as Inserts"
msgstr ""

#: ../source/core/replica-set-oplog.txt:90
# b39141d22156436daacdfc839c7e509c
msgid "If you delete roughly the same amount of data as you insert, the database will not grow significantly in disk use, but the size of the operation log can be quite large."
msgstr ""

#: ../source/core/replica-set-oplog.txt:95
# de7302b6f2e843b49a50cf0d7f8351ef
msgid "Significant Number of In-Place Updates"
msgstr ""

#: ../source/core/replica-set-oplog.txt:97
# 09e0bdd56beb4334841760450a59ae3b
msgid "If a significant portion of the workload is in-place updates, the database records a large number of operations but does not change the quantity of data on disk."
msgstr ""

#: ../source/core/replica-set-oplog.txt:102
# a4b1260ad36e4d2fb19b40942c32fef2
msgid "Oplog Status"
msgstr ""

#: ../source/core/replica-set-oplog.txt:104
# 49f5e39275c744baaa63664bb6ef53ea
msgid "To view oplog status, including the size and the time range of operations, issue the :method:`rs.printReplicationInfo()` method. For more information on oplog status, see :ref:`replica-set-troubleshooting-check-oplog-size`."
msgstr ""

#: ../source/core/replica-set-oplog.txt:109
# 0a66ae285b5b4304927a124d866fb5f2
msgid "Under various exceptional situations, updates to a :term:`secondary's <secondary>` oplog might lag behind the desired performance time.  Use :method:`db.getReplicationInfo()` from a secondary member and the :doc:`replication status </reference/method/db.getReplicationInfo>` output to assess the current state of replication and determine if there is any unintended replication delay."
msgstr ""

#: ../source/core/replica-set-oplog.txt:116
# adaa5bbc5d834b60909327d010162117
msgid "See :ref:`Replication Lag <replica-set-replication-lag>` for more information."
msgstr ""

