# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/crud-introduction.txt:3
# 96ddc173411a41ca945f9ced94febaf4
msgid "MongoDB CRUD Introduction"
msgstr ""

#: ../source/core/crud-introduction.txt:7
# b6c1208ac9a941a6bb4fecd796cdf082
msgid "MongoDB stores data in the form of *documents*, which are JSON-like field and value pairs. Documents are analogous to structures in programming languages that associate keys with values, where keys may hold other pairs of keys and values (e.g. dictionaries, hashes, maps, and associative arrays). Formally, MongoDB documents are :term:`BSON` documents, which is a binary representation of :term:`JSON` with additional type information. For more information, see :doc:`/core/document`."
msgstr ""

#: ../source/core/crud-introduction.txt:18
# d9c1646f5ee3452a95349d9b1c6ffce6
msgid "MongoDB stores all documents in :term:`collections <collection>`. A collection is a group of related documents that have a set of shared common indexes. Collections are analogous to a table in relational databases."
msgstr ""

#: ../source/core/crud-introduction.txt:26
# 13312517b1594d69a8a502a788ed43a7
msgid "Database Operations"
msgstr ""

#: ../source/core/crud-introduction.txt:29
# 4f297099da1a4c2c9add554c7267caa7
msgid "Query"
msgstr ""

#: ../source/core/crud-introduction.txt:31
# 0df76e9091e44f21a5b813f541167eae
msgid "In MongoDB a query targets a specific collection of documents. Queries specify criteria, or conditions, that identify the documents that MongoDB returns to the clients. A query may include a *projection* that specifies the fields from the matching documents to return. You can optionally modify queries to impose limits, skips, and sort orders."
msgstr ""

#: ../source/core/crud-introduction.txt:37
# fded1d80e3454ab7b159b7a34dbcbaf8
msgid "In the following diagram, the query process specifies a query criteria and a sort modifier:"
msgstr ""

#: ../source/core/crud-introduction.txt:43
# a024f52ac84945ad803c71abddedd50b
msgid "Data Modification"
msgstr ""

#: ../source/core/crud-introduction.txt:45
# c91757b6f2c544f2a818743614ce1f39
msgid "Data modification refers to operations that create, update, or delete data. In MongoDB, these operations modify the data of a single :term:`collection`. For the update and delete operations, you can specify the criteria to select the documents to update or remove."
msgstr ""

#: ../source/core/crud-introduction.txt:50
# be07211aec31496cbbab90794f887681
msgid "In the following diagram, the insert operation adds a new document to the ``users`` collection."
msgstr ""

#: ../source/core/crud-introduction.txt:56
# 77b9bf28dc4341328340d3715b001cd4
msgid "Related Features"
msgstr ""

#: ../source/core/crud-introduction.txt:59
# 7c5baf212a6f4e9589293528b8cdefd5
msgid ":doc:`/indexes`"
msgstr ""

#: ../source/core/crud-introduction.txt:61
# d5b5447b3e7f4b4ca4d57609d9d6b39a
msgid "To enhance the performance of common queries and updates, MongoDB has full support for secondary indexes. These indexes allow applications to store a *view* of a portion of the collection in an efficient data structure. Most indexes store an ordered representation of all values of a field or a group of fields. Indexes may also :ref:`enforce uniqueness <index-type-unique>`, store objects in a :doc:`geospatial representation </applications/geospatial-indexes>`, and facilitate :doc:`text search </core/index-text>`."
msgstr ""

#: ../source/core/crud-introduction.txt:72
# 7456ae4515824a689ea7b624d6ab11cb
msgid ":doc:`/core/read-preference`"
msgstr ""

#: ../source/core/crud-introduction.txt:74
# 7ee80c345223455cab1da1f6979e782a
msgid "For replica sets and sharded clusters with replica set components, applications specify :ref:`read preferences <replica-set-read-preference>`. A read preference determines how the client direct read operations to the set."
msgstr ""

#: ../source/core/crud-introduction.txt:80
# b2fac34a7da646c68b78dfc9e740dd60
msgid ":doc:`/core/write-concern`"
msgstr ""

#: ../source/core/crud-introduction.txt:82
# e990e9966e9147058cb678e1846da170
msgid "Applications can also control the behavior of write operations using :ref:`write concern <write-concern>`. Particularly useful for deployments with replica sets, the write concern semantics allow clients to specify the assurance that MongoDB provides when reporting on the success of a write operation."
msgstr ""

#: ../source/core/crud-introduction.txt:89
# 6daff37847084a0d96018afc3423859e
msgid ":doc:`/aggregation`"
msgstr ""

#: ../source/core/crud-introduction.txt:91
# 303df223854c432d9f54812db962afd5
msgid "In addition to the basic queries, MongoDB provides several data aggregation features. For example, MongoDB can return counts of the number of documents that match a query, or return the number of distinct values for a field, or process a collection of documents using a versatile stage-based data processing pipeline or map-reduce operations."
msgstr ""

