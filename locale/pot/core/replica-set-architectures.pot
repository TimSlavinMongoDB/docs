# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 11:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-architectures.txt:6
# 0cfaeb475d674d57968a80f482dcf112
msgid "Replica Set Deployment Architectures"
msgstr ""

#: ../source/core/replica-set-architectures.txt:10
# d8fc201cbf374b9d8a229701ef814323
msgid "The architecture of a :term:`replica set <replica set>` affects the set's capacity and capability. This document provides strategies for replica set deployments and describes common architectures."
msgstr ""

#: ../source/core/replica-set-architectures.txt:14
# 3fded9011ba243c3bbaccaa6c166a23c
msgid "The standard replica set deployment for production system is a three-member replica set. These sets provide redundancy and fault tolerance. Avoid complexity when possible, but let your application requirements dictate the architecture."
msgstr ""

#: ../source/core/replica-set-architectures.txt:20
# c6f25b3ca6f14365a05441d7414a083d
msgid "Strategies"
msgstr ""

#: ../source/core/replica-set-architectures.txt:23
# 98b2f2e8e4e942a3b8efdc8ee39e89fc
msgid "Determine the Number of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:25
# c71c2171b43a4052a8b16149361a95bc
msgid "Add members in a replica set according to these strategies."
msgstr ""

#: ../source/core/replica-set-architectures.txt:28
# e625e84d2da54c1b99d75fcf6cb775e2
msgid "Deploy an Odd Number of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:30
# 0a19ee99885847319482f45292775f5e
msgid "An odd number of members ensures that the replica set is always able to elect a primary. If you have an even number of members, add an arbiter to get an odd number. :term:`Arbiters <arbiter>` do not store a copy of the data and require fewer resources. As a result, you may run an arbiter on an application server or other shared process."
msgstr ""

#: ../source/core/replica-set-architectures.txt:39
# 000e54ae53fb4caa8a030169494bb895
msgid "Consider Fault Tolerance"
msgstr ""

#: ../source/core/replica-set-architectures.txt:41
# fb92b39972ab4fa9b24c77e1ebfd4b2c
msgid "*Fault tolerance* for a replica set is the number of members that can become unavailable and still leave enough members in the set to elect a primary. In other words, it is the difference between the number of members in the set and the majority needed to elect a primary. Without a primary, a replica set cannot accept write operations. Fault tolerance is an effect of replica set size, but the relationship is not direct. See the following table:"
msgstr ""

#: ../source/core/replica-set-architectures.txt:53
# e673364fd382445886d5cd5aef4cca71
msgid "Number of Members."
msgstr ""

#: ../source/core/replica-set-architectures.txt:55
# b120bcc3307f42c3a180b374b804bbd5
msgid "Majority Required to Elect a New Primary."
msgstr ""

#: ../source/core/replica-set-architectures.txt:57
# ac5484c9a5e24311b42bd77917ac8d20
msgid "Fault Tolerance."
msgstr ""

#: ../source/core/replica-set-architectures.txt:59
#: ../source/core/replica-set-architectures.txt:67
#: ../source/core/replica-set-architectures.txt:73
# 0ddb2d2c501546228b8d05679e950b88
# 1918d47ce6864f4399aea440d283d938
# d982c8abbcb0415c85b85fec41689a66
msgid "3"
msgstr ""

#: ../source/core/replica-set-architectures.txt:61
#: ../source/core/replica-set-architectures.txt:75
#: ../source/core/replica-set-architectures.txt:81
# 821e3b912da540d4a9d3ca169b8d4b23
# 4f99d839d92b44ae95838ea54f7e80b3
# ff19f87bbaaa4514a3585cb9b751ebbc
msgid "2"
msgstr ""

#: ../source/core/replica-set-architectures.txt:63
#: ../source/core/replica-set-architectures.txt:69
# f19c8fea5f7147e7b0160df7c8c7d83d
# 1ee447844a3d470096aef6dee347a2bc
msgid "1"
msgstr ""

#: ../source/core/replica-set-architectures.txt:65
#: ../source/core/replica-set-architectures.txt:79
# 9a7f5f52ddaf46109cfa4fd331a5d3c6
# bb67b5a7e34d4aa88696c114d4ce3aae
msgid "4"
msgstr ""

#: ../source/core/replica-set-architectures.txt:71
# 9954f8385625407b972534bc336c162d
msgid "5"
msgstr ""

#: ../source/core/replica-set-architectures.txt:77
# e8ac881940434023b4386f0291865e84
msgid "6"
msgstr ""

#: ../source/core/replica-set-architectures.txt:83
# 83bccc1128664b27afb2c4cc73e992c3
msgid "Adding a member to the replica set does not *always* increase the fault tolerance. However, in these cases, additional members can provide support for dedicated functions, such as backups or reporting."
msgstr ""

#: ../source/core/replica-set-architectures.txt:88
# ea4b000acc314b7a9d07a71a343f165a
msgid "Use Hidden and Delayed Members for Dedicated Functions"
msgstr ""

#: ../source/core/replica-set-architectures.txt:90
# 415a4fc8b2c2477f9b115bc0c4bba3ce
msgid "Add :ref:`hidden <replica-set-hidden-members>` or :ref:`delayed <replica-set-delayed-members>` members to support dedicated functions, such as backup or reporting."
msgstr ""

#: ../source/core/replica-set-architectures.txt:95
# b905cb4f2b0843fb98a4b4c43c37a162
msgid "Load Balance on Read-Heavy Deployments"
msgstr ""

#: ../source/core/replica-set-architectures.txt:97
# 6368cb09887243debe74eafc7e8eecbe
msgid "In a deployment with *very* high read traffic, you can improve read throughput by distributing reads to secondary members. As your deployment grows, add or move members to alternate data centers to improve redundancy and availability."
msgstr ""

#: ../source/core/replica-set-architectures.txt:102
# c0e58614b572446d875c4a5f224b2331
msgid "Always ensure that the main facility is able to elect a primary."
msgstr ""

#: ../source/core/replica-set-architectures.txt:105
# 1e3c4c3cbd4a4ae2b8360d49a706a07d
msgid "Add Capacity Ahead of Demand"
msgstr ""

#: ../source/core/replica-set-architectures.txt:107
# 077c975f6d904457929b38c727502ded
msgid "The existing members of a replica set must have spare capacity to support adding a new member. Always add new members before the current demand saturates the capacity of the set."
msgstr ""

#: ../source/core/replica-set-architectures.txt:114
# 66e95556f487426fa26f203162f0215c
msgid "Determine the Distribution of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:117
# f48da23a22f8433c89b7e391733d9b8c
msgid "Distribute Members Geographically"
msgstr ""

#: ../source/core/replica-set-architectures.txt:119
# 4fa2631d0e4f4ff487e001370685d28e
msgid "To protect your data if your main data center fails, keep at least one member in an alternate data center. Set these members' :data:`~local.system.replset.members[n].priority` to 0 to prevent them from becoming primary."
msgstr ""

#: ../source/core/replica-set-architectures.txt:125
# 70b4fd4b53894a0d9bfe021364ab72a0
msgid "Keep a Majority of Members in One Location"
msgstr ""

#: ../source/core/replica-set-architectures.txt:127
# da999a0509ce471bb3caf92603f6c63e
msgid "When a replica set has members in multiple data centers, network partitions can prevent communication between data centers. To replicate data, members must be able to communicate to other members."
msgstr ""

#: ../source/core/replica-set-architectures.txt:131
# 8d97afc797f0455794f21aebb63e7e09
msgid "In an election, members must see each other to create a majority. To ensure that the replica set members can confirm a majority and elect a primary, keep a majority of the setâ€™s members in one location."
msgstr ""

#: ../source/core/replica-set-architectures.txt:137
# 8ad258b015534960b8aa7e8b44ca0eab
msgid "Target Operations with Tags"
msgstr ""

#: ../source/core/replica-set-architectures.txt:139
# 326f6a98d27e4e07acaeb470bcaf5394
msgid "Use :ref:`replica set tags <replica-set-configuration-tag-sets>` to ensure that operations replicate to specific data centers. Tags also support targeting read operations to specific machines."
msgstr ""

#: ../source/core/replica-set-architectures.txt:143
# e4d4d81a9c774b868f38f11dba404c8e
msgid ":doc:`/data-center-awareness` and :doc:`/core/operational-segregation`."
msgstr ""

#: ../source/core/replica-set-architectures.txt:147
# da9cd71a13ad46c4ab3b5238584a8bf0
msgid "Use Journaling to Protect Against Power Failures"
msgstr ""

#: ../source/core/replica-set-architectures.txt:149
# d1a718924f3b4228bcb3176f6a79630e
msgid "Enable journaling to protect data against service interruptions. Without journaling MongoDB cannot recover data after unexpected shutdowns, including power failures and unexpected reboots."
msgstr ""

#: ../source/core/replica-set-architectures.txt:153
# bdb56cd158bd4263b90302c7ae2354bf
msgid "All 64-bit versions of MongoDB after version 2.0 have journaling enabled by default."
msgstr ""

#: ../source/core/replica-set-architectures.txt:157
# 7b3ac728dca64033abd572597c5acf4c
msgid "Replica Set Naming"
msgstr ""

#: ../source/includes/fact-unique-replica-set-names.rst:1
# 12691fbb392f481fa4827ae1a2bfde61
msgid "If your application connects to more than one replica set, each set should have a distinct name. Some drivers group replica set connections by replica set name."
msgstr ""

#: ../source/core/replica-set-architectures.txt:162
# 9c1ce8aa6a9140bcaf72981cd1eee12e
msgid "Deployment Patterns"
msgstr ""

#: ../source/core/replica-set-architectures.txt:164
# a030bda5db1b443fa5d1ebfda97d70bf
msgid "The following documents describe common replica set deployment patterns. Other patterns are possible and effective depending on the the application's requirements. If needed, combine features of each architecture in your own deployment:"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:6
# 9353b8c396804352839aa06922a769ba
msgid ":doc:`/core/replica-set-architecture-three-members`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:4
# e4b5d9973d0449ec989cfd5edd704edb
msgid "Three-member replica sets provide the minimum recommended architecture for a replica set."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:12
# 38b7d28ffe8b44429f3e597463ef8ec2
msgid ":doc:`/core/replica-set-architecture-four-members`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:9
# 0bcfec27a3c54d43a52ee00a493f58aa
msgid "Four or more member replica sets provide greater redundancy and can support greater distribution of read operations and dedicated functionality."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:16
# 38119f83346c4e0cb4b44a258bf077fa
msgid ":doc:`/core/replica-set-architecture-geographically-distributed`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:15
# 278b1c910d9849359b8e408209690795
msgid "Geographically distributed sets include members in multiple locations to protect against facility-specific failures, such as power outages."
msgstr ""

