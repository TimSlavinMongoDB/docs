# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-write-concern.txt:3
# c802258553ba4a3783781c145168e1f3
msgid "Write Concern for Replica Sets"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:9
# 2dda2c3e0d7b41228a1be540d117f5f7
msgid "MongoDB's built-in :doc:`write concern </core/write-concern>` confirms the success of write operations to a :term:`replica set's <replica set>` :term:`primary`. Write concern uses the :dbcommand:`getLastError` command after write operations to return an object with error information or confirmation that there are no errors."
msgstr ""

#: ../source/core/replica-set-write-concern.txt:15
# 9b219b902e694860abed86601fd2038a
msgid "From the perspective of a client application, whether a MongoDB instance is running as a single server (i.e. \"standalone\") or a :term:`replica set` is transparent. However, replica sets offer some configuration options for write and read operations. [#sharded-clusters]_"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:20
# 7e3b0313db5847b2b100dae1218f32d1
msgid ":term:`Sharded clusters <sharded cluster>` where the shards are also replica sets provide the same configuration options with regards to write and read operations."
msgstr ""

#: ../source/core/replica-set-write-concern.txt:27
# 827a98cf24a44ac5be4c587f5fa4b3aa
msgid "Verify Write Operations"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:29
# eeda23e4d3f442f6987bf1d5b34813e0
msgid "The default write concern confirms write operations only on the primary.  You can configure write concern to confirm write operations to additional replica set members as well by issuing the :dbcommand:`getLastError` command with the ``w`` option."
msgstr ""

#: ../source/core/replica-set-write-concern.txt:36
# 01c86a0324a34a5b8151c905164c5260
msgid "The ``w`` option confirms that write operations have replicated to the specified number of replica set members, including the primary. You can either specify a number or specify ``majority``, which ensures the write propagates to a majority of set members."
msgstr ""

#: ../source/core/replica-set-write-concern.txt:43
# 31fd0a68d42148069f37481ee72469ab
msgid "If you specify a ``w`` value greater than the number of members that hold a copy of the data (i.e., greater than the number of non-:term:`arbiter` members), the operation blocks until those members become available. This can cause the operation to block forever. To specify a timeout threshold for the :dbcommand:`getLastError` operation, use the ``wtimeout`` argument. argument. A ``wtimeout`` value of ``0`` means that the operation will never time out."
msgstr ""

#: ../source/core/replica-set-write-concern.txt:51
# b5d4ace47c9b449a9b73efe612c8f00d
msgid "See :ref:`getLastError Examples <gle-examples>` for example invocations."
msgstr ""

#: ../source/core/replica-set-write-concern.txt:55
# 8739424224e843d782b7e47c5e478d50
msgid "Modify Default Write Concern"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:57
# c10826bffd4f4cdc9979f721a61551c9
msgid "You can configure your own \"default\" :dbcommand:`getLastError` behavior for a replica set. Use the :data:`~local.system.replset.settings.getLastErrorDefaults` setting in the :doc:`replica set configuration </reference/replica-configuration>`. The following sequence of commands creates a configuration that waits for the write operation to complete on a majority of the set members before returning:"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:72
# b15d5605849b47258f0ae1acee2da2ed
msgid "The :data:`~local.system.replset.settings.getLastErrorDefaults` setting affects only those :dbcommand:`getLastError` commands that have *no* other arguments."
msgstr ""

#: ../source/core/replica-set-write-concern.txt:78
# b9b7e1e9c0fd44f3b902d51365aecaf7
msgid "Use of insufficient write concern can lead to :ref:`rollbacks <replica-set-rollbacks>` in the case of :ref:`replica set failover <replica-set-failover>`. Always ensure that your operations have specified the required write concern for your application."
msgstr ""

#: ../source/core/replica-set-write-concern.txt:83
# 65253dc4701d4397878367eae85e0957
msgid ":ref:`write-operations-write-concern` and :ref:`connections-write-concern`"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:87
# 23dba136228d4e258843819db649ef9d
msgid "Custom Write Concerns"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:89
# e1485b829c154e1d942fe2065db33da6
msgid "You can use replica set tags to create custom write concerns using the :data:`~local.system.replset.settings.getLastErrorDefaults` and :data:`~local.system.replset.settings.getLastErrorModes` replica set settings."
msgstr ""

#: ../source/core/replica-set-write-concern.txt:96
# e14bfe6e8cb14503b34269ee03b0e792
msgid "Custom write concern modes specify the field name and a number of *distinct* values for that field. By contrast, read preferences use the value of fields in the tag document to direct read operations."
msgstr ""

#: ../source/core/replica-set-write-concern.txt:100
# e5108b71b23e42bcbecfbcefceaf31ba
msgid "In some cases, you may be able to use the same tags for read preferences and write concerns; however, you may need to create additional tags for write concerns depending on the requirements of your application."
msgstr ""

#: ../source/core/replica-set-write-concern.txt:106
# d6a5e4f3fcf546dda9d6ea445f8b273d
msgid "Single Tag Write Concerns"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:108
# 125f9ca02c904ffe9667f8ecb43d8a5f
msgid "Consider a five member replica set, where each member has one of the following tag sets:"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:119
# 840d79c029a04773abe433e5b4994f28
msgid "You could create a custom write concern mode that will ensure that applicable write operations will not return until members with two different values of the ``use`` tag have acknowledged the write operation. Create the mode with the following sequence of operations in the :program:`mongo` shell:"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:135
# d7b36d946475454b8018ea314779822e
msgid "To use this mode pass the string ``use2`` to the ``w`` option of :dbcommand:`getLastError` as follows:"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:143
# 1d1c96f86fbb451c840a072bd4297f44
msgid "Specific Custom Write Concerns"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:145
# b7047d3b02eb4accbed4c0fef365e748
msgid "If you have a three member replica with the following tag sets:"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:153
# 16ceaef101bc42f1b519f38c60e1ce9d
msgid "You cannot specify a custom :data:`~local.system.replset.settings.getLastErrorModes` value to ensure that the write propagates to the ``san`` before returning. However, you may implement this write concern policy by creating the following additional tags, so that the set resembles the following:"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:166
# ac88ee46b07a4dc593cb47d8c49e65e7
msgid "Then, create a custom :data:`~local.system.replset.settings.getLastErrorModes` value, as follows:"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:180
# c95c7079c98941b3978fee23a0cd14fd
msgid "To use this mode pass the string ``san`` to the ``w`` option of :dbcommand:`getLastError` as follows:"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:187
# 53f66b09d44743d1b8a8638194a50b11
msgid "This operation will not return until a replica set member with the tag ``disk.san`` returns."
msgstr ""

#: ../source/core/replica-set-write-concern.txt:190
# 3933dafe82124530ac0e53ed5ff69327
msgid "You may set a custom write concern mode as the default write concern mode using :data:`~local.system.replset.settings.getLastErrorDefaults` replica set as in the following setting:"
msgstr ""

#: ../source/core/replica-set-write-concern.txt:200
# caa8588f7ca74f01b6216fce1602cd85
msgid ":ref:`replica-set-configuration-tag-sets` for further information about replica set reconfiguration and tag sets."
msgstr ""

