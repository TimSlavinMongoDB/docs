# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharded-cluster-high-availability.txt:5
# 97630c7b44f4493390e560e22b42adee
msgid "Sharded Cluster High Availability"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:9
# ce3672f5cf0a4d7497b8e350d6ed3ed9
msgid "A :ref:`production <sharding-production-architecture>` :term:`cluster` has no single point of failure. This section introduces the availability concerns for MongoDB deployments in general and highlights potential failure scenarios and available resolutions."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:15
# 9ee602e80fd549379d39abca872ff0e1
msgid "Application Servers or :program:`mongos` Instances Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:17
# 8e6004aed3ea4985bbbcba81daa7483a
msgid "If each application server has its own :program:`mongos` instance, other application servers can continue access the database. Furthermore, :program:`mongos` instances do not maintain persistent state, and they can restart and become unavailable without losing any state or data. When a :program:`mongos` instance starts, it retrieves a copy of the :term:`config database` and can begin routing queries."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:25
# 52e816025b4c4180ad3829bf2c8d1de1
msgid "A Single :program:`mongod` Becomes Unavailable in a Shard"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:27
# cf04c39ab18c45e2b1e45d641d11cc48
msgid ":doc:`Replica sets </replication>` provide high availability for shards. If the unavailable :program:`mongod` is a :term:`primary`, then the replica set will :ref:`elect <replica-set-elections>` a new primary. If the unavailable :program:`mongod` is a :term:`secondary`, and it disconnects the primary and secondary will continue to hold all data. In a three member replica set, even if a single member of the set experiences catastrophic failure, two other members have full copies of the data. [#recovery-window]_"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:36
# 2a6360d7e2554ae5a884468d558e034b
msgid "Always investigate availability interruptions and failures. If a system is unrecoverable, replace it and create a new member of the replica set as soon as possible to replace the lost redundancy."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:41
# 0dcc3daada534df183231e97e809d0fb
msgid "All Members of a Replica Set Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:43
# 574e0964375744068359b0c685f155a8
msgid "If all members of a replica set within a shard are unavailable, all data held in that shard is unavailable. However, the data on all other shards will remain available, and it's possible to read and write data to the other shards. However, your application must be able to deal with partial results, and you should investigate the cause of the interruption and attempt to recover the shard as soon as possible."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:51
# 0d5c3992edf44baaa4a878d6ac9dcdfc
msgid "One or Two Config Databases Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:53
# 38c9676a29ab4138b54e0ce1360288f9
msgid "Three distinct :program:`mongod` instances provide the :term:`config database` using a special two-phase commits to maintain consistent state between these :program:`mongod` instances. Cluster operation will continue as normal but :ref:`chunk migration <sharding-balancing>` and the cluster can create no new :doc:`chunk splits </tutorial/split-chunks-in-sharded-cluster>`. Replace the config server as soon as possible. If all multiple config databases become unavailable, the cluster can become inoperable."
msgstr ""

#: ../source/includes/note-config-server-startup.rst:3
# ed3eb15681cd4eb0bec54bcd12362421
msgid "All config servers must be running and available when you first initiate a :term:`sharded cluster`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:64
# 7dbb214096064c83bf86f951b268431b
msgid "If an unavailable secondary becomes available while it still has current oplog entries, it can catch up to the latest state of the set using the normal :term:`replication process <sync>`, otherwise it must perform an :term:`initial sync`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:72
# 59ed6b3f18944533abd7f1c28fd1497f
msgid "Renaming Config Servers and Cluster Availability"
msgstr ""

#: ../source/includes/fact-rename-config-servers-requires-cluster-restart.rst:1
# 468298e8359e4fd9b82969ab5966e5c0
msgid "If the name or address that a sharded cluster uses to connect to a config server changes, you must restart **every** :program:`mongod` and :program:`mongos` instance in the sharded cluster. Avoid downtime by using CNAMEs to identify config servers within the MongoDB deployment."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:76
# 48c7c946f29e4547a7b57042d1f9523e
msgid "To avoid downtime when renaming config servers, use DNS names unrelated to physical or virtual hostnames to refer to your :ref:`config servers <sharding-config-server>`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:80
# 153ca846fdf9413084975f8e3fc31244
msgid "Generally, refer to each config server using a name in DNS (e.g. a CNAME record). When specifying the config server connection string to :program:`mongos`, DNS use this name. These records make it possible to renumber or rename config servers without changing the connection string and without having to restart the entire cluster."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:87
# 8955ecd75d6e4ff6bda527c5c2fbb6e4
msgid "Shard Keys and Cluster Availability"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:89
# a2e148849dcf434cb34b40b1b15ec1a8
msgid "The most important consideration when choosing a :term:`shard key` are:"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:92
# 4229150cde074b35bae048ded9ea81be
msgid "to ensure that MongoDB will be able to distribute data evenly among shards, and"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:95
# 3b04e41cd2404b7f82f82a6be7277bf4
msgid "to scale writes across the cluster, and"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:97
# bfd4c0ff2bcb4051a2e926b4a4c1c76b
msgid "to ensure that :program:`mongos` can isolate most queries to a specific :program:`mongod`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:100
# fa531bfa134b4a8f92da09d7e7fdeccc
msgid "Furthermore:"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:102
# f7841b7a4a7e4974aff5797b23456419
msgid "Each shard should be a :term:`replica set`, if a specific :program:`mongod` instance fails, the replica set members will elect another to be :term:`primary` and continue operation. However, if an entire shard is unreachable or fails for some reason, that data will be unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:108
# 2ce30f25a4174eb2be62a26f4bd9c1c9
msgid "If the shard key allows the :program:`mongos` to isolate most operations to a single shard, then the failure of a single shard will only render *some* data unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:112
# e012dec709fd4b73a2bca79f5e12f7ab
msgid "If your shard key distributes data required for every operation throughout the cluster, then the failure of the entire shard will render the entire cluster unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:116
# 0df9e939bb994be9af8f5acac3a083d2
msgid "In essence, this concern for reliability simply underscores the importance of choosing a shard key that isolates query operations to a single shard."
msgstr ""

