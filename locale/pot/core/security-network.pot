# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/security-network.txt:3
# aac25136ed5648b49fe13dc6be6785c9
msgid "Network Exposure and Security"
msgstr ""

#: ../source/core/security-network.txt:7
# 2ac410bef457445a846ebb5e302ec12f
msgid "By default, MongoDB programs (i.e. :program:`mongos` and :program:`mongod`) will bind to all available network interfaces (i.e. IP addresses) on a system."
msgstr ""

#: ../source/core/security-network.txt:11
# fa1bb71fcc634906af466ec1acbf8866
msgid "This page outlines various runtime options that allow you to limit access to MongoDB programs."
msgstr ""

#: ../source/core/security-network.txt:17
# 2ee84ee83da04769b521736809a9d253
msgid "Configuration Options"
msgstr ""

#: ../source/core/security-network.txt:19
# 1682acc0f299413db02b71aa77d51e05
msgid "You can limit the network exposure with the following :program:`mongod` and and :program:`mongos` configuration options: :setting:`nohttpinterface`, :setting:`rest`, :setting:`bind_ip`, and :setting:`port`. You can use a :doc:`configuration file </reference/configuration-options>` to specify these settings."
msgstr ""

#: ../source/core/security-network.txt:26
# f4b314be4880418c9e37a91cec7b9430
msgid "``nohttpinterface``"
msgstr ""

#: ../source/core/security-network.txt:28
# 1e190b6ff6f349eab0ae588abc3f3432
msgid "The :setting:`nohttpinterface` setting for :program:`mongod` and :program:`mongos` instances disables the \"home\" status page, which would run on port ``28017`` by default. The status interface is read-only by default. You may also specify this option on the command line as :option:`mongod --nohttpinterface` or :option:`mongos --nohttpinterface`."
msgstr ""

#: ../source/core/security-network.txt:35
# 1723d0267f644df89329a356ff4b98a0
msgid "Authentication does not control or affect access to this interface."
msgstr ""

#: ../source/core/security-network.txt:37
# 5ebb82ac59a04c478c592bca75932187
msgid "Disable this option for production deployments. If you *do* leave this interface enabled, you should only allow trusted clients to access this port. See :ref:`security-firewalls`."
msgstr ""

#: ../source/core/security-network.txt:42
# f5943bd7b4884364b23da94c77d06c1d
msgid "``rest``"
msgstr ""

#: ../source/core/security-network.txt:44
# e945468533de491c8304c25c3b064110
msgid "The :setting:`rest` setting for :program:`mongod` enables a fully interactive administrative :term:`REST` interface, which is *disabled by default.* The status interface, which *is* enabled by default, is read-only. This configuration makes that interface fully interactive. The REST interface does not support any authentication and you should always restrict access to this interface to only allow trusted clients to connect to this port."
msgstr ""

#: ../source/core/security-network.txt:52
# 32edc2bf53b44554b8013c0d7cb44e42
msgid "You may also enable this interface on the command line as :option:`mongod --rest`."
msgstr ""

#: ../source/core/security-network.txt:55
# 0bda3cf842624d1ab0b631c73b5dd72d
msgid "Disable this option for production deployments. If *do* you leave this interface enabled, you should only allow trusted clients to access this port."
msgstr ""

#: ../source/core/security-network.txt:60
# e05bb1b505944d7782208cc0291da59a
msgid "``bind_ip``"
msgstr ""

#: ../source/core/security-network.txt:62
# 453e321ccae44138af109a924e5f73fe
msgid "The :setting:`bind_ip` setting for :program:`mongod` and :program:`mongos` instances limits the network interfaces on which MongoDB programs will listen for incoming connections. You can also specify a number of interfaces by passing :setting:`bind_ip` a comma separated list of IP addresses. You can use the :option:`mongod --bind_ip` and :option:`mongos --bind_ip` option on the command line at run time to limit the network accessibility of a MongoDB program."
msgstr ""

#: ../source/core/security-network.txt:72
# a8071a0fec334d468699d06acc4caf57
msgid "Make sure that your :program:`mongod` and :program:`mongos` instances are only accessible on trusted networks. If your system has more than one network interface, bind MongoDB programs to the private or internal network interface."
msgstr ""

#: ../source/core/security-network.txt:78
# 0f038f4814db483680a14856b9394c24
msgid "``port``"
msgstr ""

#: ../source/core/security-network.txt:80
# 2d2a5f614fc14887ab538c45ae3e04ee
msgid "The :setting:`port` setting for :program:`mongod` and :program:`mongos` instances changes the main port on which the :program:`mongod` or :program:`mongos` instance listens for connections. The default port is ``27017``. Changing the port does not meaningfully reduce risk or limit exposure. You may also specify this option on the command line as :option:`mongod --port` or :option:`mongos --port`. Setting :setting:`port` also indirectly sets the port for the HTTP status interface, which is always available on the port numbered ``1000`` greater than the primary :program:`mongod` port."
msgstr ""

#: ../source/core/security-network.txt:90
# d673fe1c69014bf5bc0f90b04abde3be
msgid "Only allow trusted clients to connect to the port for the :program:`mongod` and :program:`mongos` instances. See :ref:`security-firewalls`."
msgstr ""

#: ../source/core/security-network.txt:94
# c511370a5d22453a9aa7b4871c381a4d
msgid "See also :ref:`configuration-security` and :doc:`/reference/default-mongodb-port`."
msgstr ""

#: ../source/core/security-network.txt:100
# bdde3d8ff7ee44b78adf018664dfd559
msgid "Firewalls"
msgstr ""

#: ../source/core/security-network.txt:102
# 8bee0a1dcc99463fadac6a9e71a3eb97
msgid "Firewalls allow administrators to filter and control access to a system by providing granular control over what network communications. For administrators of MongoDB, the following capabilities are important: limiting incoming traffic on a specific port to specific systems, and limiting incoming traffic from untrusted hosts."
msgstr ""

#: ../source/core/security-network.txt:108
# 730eb257ca6d434cb16171c60e011e46
msgid "On Linux systems, the ``iptables`` interface provides access to the underlying ``netfilter`` firewall. On Windows systems, ``netsh`` command line interface provides access to the underlying Windows Firewall. For additional information about firewall configuration, see :doc:`/tutorial/configure-linux-iptables-firewall` and :doc:`/tutorial/configure-windows-netsh-firewall`."
msgstr ""

#: ../source/core/security-network.txt:115
# 34bce815b2e5480cb0f9f2397463bda0
msgid "For best results and to minimize overall exposure, ensure that *only* traffic from trusted sources can reach :program:`mongod` and :program:`mongos` instances and that the :program:`mongod` and :program:`mongos` instances can only connect to trusted outputs."
msgstr ""

#: ../source/core/security-network.txt:120
# 9a7cc51a381846c6bb89ee4882039c5a
msgid "For MongoDB deployments on Amazon's web services, see the :ecosystem:`Amazon EC2 </platforms/amazon-ec2>` page, which addresses Amazon's Security Groups and other EC2-specific security features."
msgstr ""

#: ../source/core/security-network.txt:126
# 58a37168bbdb4cf282628200f933a710
msgid "Virtual Private Networks"
msgstr ""

#: ../source/core/security-network.txt:128
# 64c4a79bc5074b7ea194abe0c71b1544
msgid "Virtual private networks, or VPNs, make it possible to link two networks over an encrypted and limited-access trusted network. Typically MongoDB users who use VPNs use SSL rather than IPSEC VPNs for performance issues."
msgstr ""

#: ../source/core/security-network.txt:133
# 0cdef2ade9ea43a0931afaaa4524f8c0
msgid "Depending on configuration and implementation, VPNs provide for certificate validation and a choice of encryption protocols, which requires a rigorous level of authentication and identification of all clients. Furthermore, because VPNs provide a secure tunnel, by using a VPN connection to control access to your MongoDB instance, you can prevent tampering and \"man-in-the-middle\" attacks."
msgstr ""

