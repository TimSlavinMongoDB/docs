# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/bulk-inserts.txt:5
# d3256cc2701747029f80592e0a1e7947
msgid "Bulk Inserts in MongoDB"
msgstr ""

#: ../source/core/bulk-inserts.txt:13
# df8b194f3bb8400aaa9e7cf52052d58a
msgid "In some situations you may need to insert or ingest a large amount of data into a MongoDB database. These *bulk inserts* have some special considerations that are different from other write operations."
msgstr ""

#: ../source/core/bulk-inserts.txt:21
# d47bbdabfde54c50b16f4837af00140a
msgid "Use the ``insert()`` Method"
msgstr ""

#: ../source/core/bulk-inserts.txt:23
# 8d86cbb1dc544797878601e21237c6f1
msgid "The :method:`insert() <db.collection.insert()>` method, when passed an array of documents, performs a bulk insert, and inserts each document atomically. Bulk inserts can significantly increase performance by amortizing :ref:`write concern <write-operations-write-concern>` costs."
msgstr ""

#: ../source/core/bulk-inserts.txt:28
# e724dedf6e984cad9cd0569fffb1f5b9
msgid ":method:`insert() <db.collection.insert()>` in the :program:`mongo` shell gained support for bulk inserts in version 2.2."
msgstr ""

#: ../source/core/bulk-inserts.txt:32
# a0c3ad892d324667aca4f1d79faa6ca4
msgid "In the :doc:`drivers </applications/drivers>`, you can configure write concern for batches rather than on a per-document level."
msgstr ""

#: ../source/core/bulk-inserts.txt:35
# 776f0975827e4e64865d0b7a1bb0a888
msgid "Drivers have a ``ContinueOnError`` option in their insert operation, so that the bulk operation will continue to insert remaining documents in a batch even if an insert fails."
msgstr ""

#: ../source/core/bulk-inserts.txt:41
# b22d703f6c494989a25bec4fb4a2b3f0
msgid "If multiple errors occur during a bulk insert, clients only receive the last error generated."
msgstr ""

#: ../source/core/bulk-inserts.txt:46
# 7bb431418e964746a3215de1c9e7f1ca
msgid ":doc:`Driver documentation </applications/drivers>` for details on performing bulk inserts in your application. Also see :doc:`/core/import-export`."
msgstr ""

#: ../source/core/bulk-inserts.txt:51
# ab87bf6dd73e4812b331dda1310de855
msgid "Bulk Inserts on Sharded Clusters"
msgstr ""

#: ../source/core/bulk-inserts.txt:53
# f86531fb898f4d688cb0037edfa7b4b3
msgid "While ``ContinueOnError`` is optional on unsharded clusters, all bulk operations to a :term:`sharded collection <sharded cluster>` run with ``ContinueOnError``, which cannot be disabled."
msgstr ""

#: ../source/core/bulk-inserts.txt:57
# e9136f2f3aab4cd2a1d31fd2a55a23e2
msgid "Large bulk insert operations, including initial data inserts or routine data import, can affect :term:`sharded cluster` performance. For bulk inserts, consider the following strategies:"
msgstr ""

#: ../source/core/bulk-inserts.txt:62
# 2ac011ea52b542e3b18620e7bf20b7b6
msgid "Pre-Split the Collection"
msgstr ""

#: ../source/core/bulk-inserts.txt:64
# 51a525f973e34832b138874ed504040b
msgid "If the sharded collection is empty, then the collection has only one initial :term:`chunk`, which resides on a single shard. MongoDB must then take time to receive data, create splits, and distribute the split chunks to the available shards. To avoid this performance cost, you can pre-split the collection, as described in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/core/bulk-inserts.txt:72
# 02627c8de4c1482dabffd37d69a78081
msgid "Insert to Multiple ``mongos``"
msgstr ""

#: ../source/core/bulk-inserts.txt:74
# e5cd579a681844e49aad7364c7380c2b
msgid "To parallelize import processes, send insert operations to more than one :program:`mongos` instance. Pre-split empty collections first as described in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/core/bulk-inserts.txt:79
# 639df53065ae4b1383a8db6fc5066e05
msgid "Avoid Monotonic Throttling"
msgstr ""

#: ../source/core/bulk-inserts.txt:81
# 2b5530937f9d4b7eaf8ca5693ffdf74d
msgid "If your shard key increases monotonically during an insert, then all inserted data goes to the last chunk in the collection, which will always end up on a single shard. Therefore, the insert capacity of the cluster will never exceed the insert capacity of that single shard."
msgstr ""

#: ../source/core/bulk-inserts.txt:86
# f24b424c31e5452e92e89980e895b808
msgid "If your insert volume is larger than what a single shard can process, and if you cannot avoid a monotonically increasing shard key, then consider the following modifications to your application:"
msgstr ""

#: ../source/core/bulk-inserts.txt:90
# 6786ce7baf8b4c9c8039a90e3f7afa03
msgid "Reverse the binary bits of the shard key. This preserves the information and avoids correlating insertion order with increasing sequence of values."
msgstr ""

#: ../source/core/bulk-inserts.txt:94
# bd1a29767df1499bba3fa223f93f88e1
msgid "Swap the first and last 16-bit words to \"shuffle\" the inserts."
msgstr ""

#: ../source/core/bulk-inserts.txt:0
# 214e1f5dceda4ee586e3c1bfcfde72b8
msgid "Example"
msgstr ""

#: ../source/core/bulk-inserts.txt:116
# cc3e81176b0643ffb1dc828464b555fc
msgid ":ref:`sharding-shard-key` for information on choosing a sharded key. Also see :ref:`Shard Key Internals <sharding-internals-shard-keys>` (in particular, :ref:`sharding-internals-operations-and-reliability`)."
msgstr ""

