# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/write-concern.txt:6
# c14c551f9bd944a6b72911a19a12ad28
msgid "Write Concern Reference"
msgstr ""

#: ../source/reference/write-concern.txt:11
# 71c51ebbd53d4c468de4b5557a2d9164
msgid "Overview"
msgstr ""

#: ../source/includes/introduction-write-concern.rst:1
# cd46b8ecfc4f4feea81483e5e764e8c0
msgid ":term:`Write concern` describes the guarantee that MongoDB provides when reporting on the success of a write operation. The strength of the write concerns determine the level of guarantee. When inserts, updates and deletes have a *weak* write concern, write operations return quickly. In some failure cases, write operations issued with weak write concerns may not persist. With *stronger* write concerns, clients wait after sending a write operation for MongoDB to confirm the write operations."
msgstr ""

#: ../source/includes/introduction-write-concern.rst:10
# 49603f0562f941699491a67ffcc0115e
msgid "MongoDB provides different levels of write concern to better address the specific needs of applications. Clients may adjust write concern to ensure that the most important operations persist successfully to an entire MongoDB deployment. For other less critical operations, clients can adjust the write concern to ensure faster performance rather than ensure persistence to the entire deployment."
msgstr ""

#: ../source/reference/write-concern.txt:15
# bb607aede4d3451ba6b1b0ff86aaa6bd
msgid ":doc:`/core/write-concern` for an introduction to write concern in MongoDB."
msgstr ""

#: ../source/reference/write-concern.txt:19
# 5d882b56c12549ba940a29142d3851ef
msgid "Available Write Concern"
msgstr ""

#: ../source/reference/write-concern.txt:21
# 644a7a10897946ae90a6590043cde856
msgid "To provide write concern, :doc:`drivers </applications/drivers>` issue the :dbcommand:`getLastError` command after a write operation and receive a document with information about the last operation. This document's ``err`` field contains either:"
msgstr ""

#: ../source/reference/write-concern.txt:26
# 4505448ddb864fc39156a61f94cd7bea
msgid "``null``, which indicates the write operations have completed successfully, or"
msgstr ""

#: ../source/reference/write-concern.txt:29
# 5ddbdd3ca89f4bba9359f3c60fdcc645
msgid "a description of the last error encountered."
msgstr ""

#: ../source/reference/write-concern.txt:31
# d425dcf4c1314cfaac4b88cdb4ae9d2a
msgid "The definition of a \"successful write\" depends on the arguments specified to :dbcommand:`getLastError`, or in replica sets, the configuration of :data:`~local.system.replset.settings.getLastErrorDefaults`. When deciding the level of write concern for your application, see the introduction to :doc:`/core/write-concern`."
msgstr ""

#: ../source/reference/write-concern.txt:39
# 3a9e6d06fe5f4d36a215a6cf3b0280d1
msgid "The :dbcommand:`getLastError` command has the following options to configure write concern requirements:"
msgstr ""

#: ../source/reference/write-concern.txt:42
# f8c5c2121b37456bb6d627439f081bf6
msgid "``j`` or \"journal\" option"
msgstr ""

#: ../source/reference/write-concern.txt:44
# 137a40022a004756ab815006f7c1934c
msgid "This option confirms that the :program:`mongod` instance has written the data to the on-disk journal and ensures data is not lost if the :program:`mongod` instance shuts down unexpectedly. Set to ``true`` to enable, as shown in the following example:"
msgstr ""

#: ../source/reference/write-concern.txt:53
# 4aa0d99209ee44e28a9a932c0f3a25d3
msgid "If you set :data:`journal` to true, and the :program:`mongod` does not have journaling enabled, as with :setting:`nojournal`, then :dbcommand:`getLastError` will provide basic receipt acknowledgment, and will include a ``jnote`` field in its return document."
msgstr ""

#: ../source/reference/write-concern.txt:58
# 41a8b19840754d6cbc60e263cdde8bc3
msgid "``w`` option"
msgstr ""

#: ../source/reference/write-concern.txt:60
# 02ecbbeab248472a88655eeba2e5eef4
msgid "This option provides the ability to disable write concern entirely *as well as* specifies the write concern operations for :term:`replica sets <replica set>`. See :doc:`Write Concern Considerations </core/write-concern>` for an introduction to the fundamental concepts of write concern. By default, the ``w`` option is set to ``1``, which provides basic receipt acknowledgment on a single :program:`mongod` instance or on the :term:`primary` in a replica set."
msgstr ""

#: ../source/reference/write-concern.txt:69
# a7d16f5d954a4d3796fb90381443b082
msgid "The ``w`` option takes the following values:"
msgstr ""

#: ../source/reference/write-concern.txt:71
# fed7266b82ae45498125963ccf979ad9
msgid "``-1``:"
msgstr ""

#: ../source/reference/write-concern.txt:73
# 638811bcfb2d4c7c9c323e9c5decac93
msgid "Disables all acknowledgment of write operations, and suppresses all errors, including network and socket errors."
msgstr ""

#: ../source/reference/write-concern.txt:76
# 52a607e4166c496795cce056688b7beb
msgid "``0``:"
msgstr ""

#: ../source/reference/write-concern.txt:78
# fe2ba9d0516347449a7023cd2b5ccd8f
msgid "Disables basic acknowledgment of write operations, but returns information about socket exceptions and networking errors to the application."
msgstr ""

#: ../source/reference/write-concern.txt:84
# b86427eb2aba4758b0955f09bcaebbb7
msgid "If you disable basic write operation acknowledgment but require journal commit acknowledgment, the journal commit prevails, and the driver will require that :program:`mongod` will acknowledge the write operation."
msgstr ""

#: ../source/reference/write-concern.txt:89
# 83538cfb123b4546bfc48786d3c56222
msgid "``1``:"
msgstr ""

#: ../source/reference/write-concern.txt:91
# 173a69d73e134629bf4870d814156975
msgid "Provides acknowledgment of write operations on a standalone :program:`mongod` or the :term:`primary` in a replica set."
msgstr ""

#: ../source/reference/write-concern.txt:94
# f49eff4ea52444a4a1ecbc2bee581e63
msgid "*A number greater than 1*:"
msgstr ""

#: ../source/reference/write-concern.txt:96
# eedb39e585e0414f9da143f296309e1e
msgid "Guarantees that write operations have propagated successfully to the specified number of replica set members including the primary. If you set ``w`` to a number that is greater than the number of set members that hold data, MongoDB waits for the non-existent members to become available, which means MongoDB blocks indefinitely."
msgstr ""

#: ../source/reference/write-concern.txt:102
# 02dfb61df24641cca05db24d12722093
msgid "``majority``:"
msgstr ""

#: ../source/reference/write-concern.txt:104
# 86d716cdcc184427aa54f4b93fa6c69f
msgid "Confirms that write operations have propagated to the majority of configured replica set: a majority of the set's configured members must acknowledge the write operation before it succeeds. This allows you to avoid hard coding assumptions about the size of your replica set into your application."
msgstr ""

#: ../source/includes/fact-master-slave-majority.rst:1
# 4060451525f9450bb9285e038c8670cd
msgid "In :doc:`Master/Slave </core/master-slave>` deployments, :dbcommand:`getLastError` treats ``w:majority`` as equivalent to ``w:1``. In earlier versions of MongoDB, ``w:majority`` produces an error in :doc:`master/slave </core/master-slave>` deployments."
msgstr ""

#: ../source/reference/write-concern.txt:112
# 1fe8f832a6da44df9d82cb455b6b672f
msgid "*A tag set*:"
msgstr ""

#: ../source/reference/write-concern.txt:114
# 36e4fec9532b4ab086686a11a33c6dc4
msgid "By specifying a :ref:`tag set <replica-set-configuration-tag-sets>` you can have fine-grained control over which replica set members must acknowledge a write operation to satisfy the required level of write concern."
msgstr ""

#: ../source/reference/write-concern.txt:119
# c5f3b7da011a4912abda7e564b628ed1
msgid ":dbcommand:`getLastError` also supports a ``wtimeout`` setting which allows clients to specify a timeout for the write concern: if you don't specify ``wtimeout``, or if you give it a value of ``0``, and the :program:`mongod` cannot fulfill the write concern the :dbcommand:`getLastError` will block, potentially forever."
msgstr ""

#: ../source/reference/write-concern.txt:125
# c2f1d993f20747c5869c65b433dbe6aa
msgid "For more information on write concern and replica sets, see :ref:`Write Concern for Replica Sets <replica-set-write-concern>` for more information."
msgstr ""

#: ../source/reference/write-concern.txt:129
# 176974bbe506494b88cfec811ad33278
msgid "In sharded clusters, :program:`mongos` instances will pass write concern on to the shard :program:`mongod` instances."
msgstr ""

