# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/update/setOnInsert.txt:3
# 88ce7b28e4b841d39dae38d90feec997
msgid "$setOnInsert"
msgstr ""

#: ../source/reference/operator/update/setOnInsert.txt:11
# 61b051b4ae714dae8cbdac99d974ad55
msgid "If an :term:`upsert` results in an insert of a document, then :update:`$setOnInsert` assigns the specified values to the fields in the document. You can specify an upsert by specifying the :term:`upsert` option for either the :method:`db.collection.update()` or :method:`db.collection.findAndModify()` methods. If the upsert results in an :doc:`update </core/write-operations>`, :update:`$setOnInsert` has no effect."
msgstr ""

#: ../source/reference/operator/update/setOnInsert.txt:29
# 224497a49e97470681b7678989be9833
msgid "Examples"
msgstr ""

#: ../source/reference/operator/update/setOnInsert.txt:32
# 49dfb46575f04ec2ba4d6196e2cc6d00
msgid "Upsert Results in an Insert"
msgstr ""

#: ../source/reference/operator/update/setOnInsert.txt:34
# 2ebbcaa592c746db977f735bb69f8282
msgid "A collection named ``products`` contains no documents."
msgstr ""

#: ../source/reference/operator/update/setOnInsert.txt:36
# e7149a60899f46989985aebcbdac5702
msgid "Then, the following :method:`upsert <db.collection.update()>` operation performs an insert and applies the :update:`$setOnInsert` to set the field ``defaultQty`` to ``100``:"
msgstr ""

#: ../source/reference/operator/update/setOnInsert.txt:49
# 0c70f8626eb743328a604e0fca161395
msgid "The ``products`` collection contains the newly-inserted document:"
msgstr ""

#: ../source/reference/operator/update/setOnInsert.txt:57
# ae5e129afc3141e6928c3043c2021cd0
msgid "Upsert Results in an Update"
msgstr ""

#: ../source/reference/operator/update/setOnInsert.txt:59
# 31a27135b9b649f4bbc171f210ae7b7b
msgid "If the :method:`db.collection.update()` or the :method:`db.collection.findAndModify()` method has the ``upsert`` flag and performs an update and not an insert, :update:`$setOnInsert` has no effect."
msgstr ""

#: ../source/reference/operator/update/setOnInsert.txt:64
# 4cd6287becfc4311a51d2115469550b9
msgid "A collection named ``products`` has the following document:"
msgstr ""

#: ../source/reference/operator/update/setOnInsert.txt:70
# d5e97efac05a4ddb801c4736694f1fd4
msgid "The following :method:`~db.collection.update()` with the *upsert* flag operation performs an update:"
msgstr ""

#: ../source/reference/operator/update/setOnInsert.txt:84
# b2edb4d175b04bb9bce2a7d05997af3e
msgid "Because the :method:`~db.collection.update()` with *upsert* only performs an update, MongoDB ignores the :update:`$setOnInsert` operation and only applies the :update:`$set` operation."
msgstr ""

#: ../source/reference/operator/update/setOnInsert.txt:88
# a7ce5bde9a0f487da18b5716e27646dd
msgid "The ``products`` collection now contains the following modified document:"
msgstr ""

