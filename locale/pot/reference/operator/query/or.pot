# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/or.txt:3
# 6d512df9b081437b90ae8860f5902693
msgid "$or"
msgstr ""

#: ../source/reference/operator/query/or.txt:11
# 5f5623b089f6481897d0fd0001076caa
msgid "You may nest :query:`$or` operations; however, these expressions are not as efficiently optimized as top-level."
msgstr ""

#: ../source/reference/operator/query/or.txt:15
# c690c6117186433482ab9160bc1d7633
msgid "*Syntax*: ``{ $or: [ { <expression1> }, { <expression2> }, ... , { <expressionN> } ] }``"
msgstr ""

#: ../source/reference/operator/query/or.txt:17
# e0f04351b22e4728bb1beb9a87f92496
msgid "The :query:`$or` operator performs a logical ``OR`` operation on an array of *two or more* ``<expressions>`` and selects the documents that satisfy *at least* one of the ``<expressions>``."
msgstr ""

#: ../source/reference/operator/query/or.txt:21
# 20399233afcc4335a4bfbb3688797354
msgid "Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/or.txt:27
# 7a7899eda11e47309b980bf908730f27
msgid "This query will select all documents in the ``inventory`` collection where:"
msgstr ""

#: ../source/reference/operator/query/or.txt:30
# 59d725a9a5b44021aac2cebd8beb5fa8
msgid "the ``price`` field value equals ``1.99`` *and*"
msgstr ""

#: ../source/reference/operator/query/or.txt:31
# 162559ee2d324a5da131a11d2fa9c622
msgid "either the ``qty`` field value is less than ``20`` **or** the ``sale`` field value is ``true``."
msgstr ""

#: ../source/reference/operator/query/or.txt:34
# 7c113c82b7744614995bbb626e5fe753
msgid "Consider the following example which uses the :query:`$or` operator to select fields from embedded documents:"
msgstr ""

#: ../source/reference/operator/query/or.txt:41
# d3d4a4470c1f4a15ad268f4de2cf9d88
msgid "This :method:`~db.collection.update()` operation will set the value of the ``sale`` field in the documents in the ``inventory`` collection where:"
msgstr ""

#: ../source/reference/operator/query/or.txt:45
# 101a3b552e434ff0b31c2cdd49a5a169
msgid "the ``price`` field value equals ``10.99`` **or**"
msgstr ""

#: ../source/reference/operator/query/or.txt:46
# 9e18fc2437f648d696866b73ffc57945
msgid "the ``carrier`` embedded document contains a field ``state`` whose value equals ``NY``."
msgstr ""

#: ../source/reference/operator/query/or.txt:49
# b9b151d7a8b043499a13f65283576b99
msgid "When using :query:`$or` with ``<expressions>`` that are equality checks for the value of the same field, choose the :query:`$in` operator over the :query:`$or` operator."
msgstr ""

#: ../source/reference/operator/query/or.txt:53
# 23f67af2e0394131b4236fd5f222aea1
msgid "Consider the query to select all documents in the ``inventory`` collection where:"
msgstr ""

#: ../source/reference/operator/query/or.txt:56
# a1db778771c34f63b9daa59906452a1a
msgid "either ``price`` field value equals ``1.99`` *or* the ``sale`` field value equals ``true``, **and**"
msgstr ""

#: ../source/reference/operator/query/or.txt:58
# 4f7ccc085d48412b91ad939e416ec8aa
msgid "either ``qty`` field value equals ``20`` *or* ``qty`` field value equals ``50``,"
msgstr ""

#: ../source/reference/operator/query/or.txt:61
# e600989ea343487ea73bd8681fc16ca9
msgid "The most effective query would be:"
msgstr ""

#: ../source/reference/operator/query/or.txt:67
# 65b05bee5831432097252ee675f43898
msgid "Consider the following behaviors when using the :query:`$or` operator:"
msgstr ""

#: ../source/reference/operator/query/or.txt:70
# 8aeec77f23b845fe9240c1266cef7fae
msgid "When using indexes with :query:`$or` queries, remember that each clause of an :query:`$or` query will execute in parallel. These clauses can each use their own index. Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/or.txt:79
# ecad80827f884a0a87334a7fc9d4cf35
msgid "For this query, you would create one index on ``price`` ( ``db.inventory.ensureIndex( { price: 1 } )`` ) and another index on ``sale`` ( ``db.inventory.ensureIndex( { sale: 1 } )`` ) rather than a compound index."
msgstr ""

#: ../source/reference/operator/query/or.txt:84
# c33845f113f94fe3b7d29987db0fc486
msgid "Also, when using the :query:`$or` operator with the :method:`~cursor.sort()` method in a query, the query will **not** use the indexes on the :query:`$or` fields. Consider the following query which adds a :method:`~cursor.sort()` method to the above query:"
msgstr ""

#: ../source/reference/operator/query/or.txt:93
# 07ce03a565134f3c8d025047e19b16e6
msgid "This modified query will not use the index on ``price`` nor the index on ``sale``."
msgstr ""

#: ../source/reference/operator/query/or.txt:96
# 5eccb5eaef36421aaf22fed908d9fb6d
msgid "You cannot use the :query:`$or` operator with ``2d`` :doc:`geospatial queries </core/geospatial-indexes>`."
msgstr ""

#: ../source/reference/operator/query/or.txt:99
# 48309dfc7d4748dba61daebb7428b363
msgid ":method:`~db.collection.find()`, :method:`~db.collection.update()`, :update:`$set`, :query:`$and`, :method:`~cursor.sort()`."
msgstr ""

