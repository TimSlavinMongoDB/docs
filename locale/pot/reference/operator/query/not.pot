# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/not.txt:3
# 64905c5f5e2d4e5c9c26e1eb33d7d45e
msgid "$not"
msgstr ""

#: ../source/reference/operator/query/not.txt:9
# 6b5ea98262114113b96970a35fd84ad7
msgid "*Syntax*: ``{ field: { $not: { <operator-expression> } } }``"
msgstr ""

#: ../source/reference/operator/query/not.txt:11
# 3eaa0f6c7294449e9b943a4ba717119b
msgid ":query:`$not` performs a logical ``NOT`` operation on the specified ``<operator-expression>`` and selects the documents that do *not* match the ``<operator-expression>``. This includes documents that do not contain the ``field``."
msgstr ""

#: ../source/reference/operator/query/not.txt:16
# 1ba57f04302349bbaef3b41dc1f31af8
msgid "Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/not.txt:22
# 0aa88f359b2d4b4da2e39c330e988e7a
msgid "This query will select all documents in the ``inventory`` collection where:"
msgstr ""

#: ../source/reference/operator/query/not.txt:24
# 79c744cb9fe440a4bedf5bb23d2cc30e
msgid "the ``price`` field value is less than or equal to ``1.99`` **or**"
msgstr ""

#: ../source/reference/operator/query/not.txt:25
# 8fc9c127ae224ed2b4637829243a8d23
msgid "the ``price`` field does not exist"
msgstr ""

#: ../source/reference/operator/query/not.txt:27
# a4de28b32fb24b5e9d276130da227313
msgid "``{ $not: { $gt: 1.99 } }`` is different from the :query:`$lte` operator. ``{ $lte: 1.99 }`` returns *only* the documents where ``price`` field exists and its value is less than or equal to ``1.99``."
msgstr ""

#: ../source/reference/operator/query/not.txt:32
# 50f30c0c31124b239301b60afd245315
msgid "Remember that the :query:`$not` operator only affects *other operators* and cannot check fields and documents independently. So, use the :query:`$not` operator for logical disjunctions and the :query:`$ne` operator to test the contents of fields directly."
msgstr ""

#: ../source/reference/operator/query/not.txt:37
# f898fe74588b4c0a8d44784e17c6d945
msgid "Consider the following behaviors when using the :query:`$not` operator:"
msgstr ""

#: ../source/reference/operator/query/not.txt:40
# 89e1ddaebc3940ba823ce5f04ac67a68
msgid "The operation of the :query:`$not` operator is consistent with the behavior of other operators but may yield unexpected results with some data types like arrays."
msgstr ""

#: ../source/reference/operator/query/not.txt:44
# 71733264a7174351b85ba6b6cd880b52
msgid "The :query:`$not` operator does **not** support operations with the :query:`$regex` operator. Instead use ``//`` or in your driver interfaces, use your language's regular expression capability to create regular expression objects."
msgstr ""

#: ../source/reference/operator/query/not.txt:49
# e11f60e90a6e493096d8b7932aa8bf88
msgid "Consider the following example which uses the pattern match expression ``//``:"
msgstr ""

#: ../source/reference/operator/query/not.txt:55
# 688943f5059f4572bb84483fa2a57c1b
msgid "The query will select all documents in the ``inventory`` collection where the ``item`` field value does *not* start with the letter ``p``."
msgstr ""

#: ../source/reference/operator/query/not.txt:59
# fac0441b2a0049679e7a8904d0a3afe1
msgid "If you are using Python, you can write the above query with the PyMongo driver and Python's :py:meth:`python:re.compile()` method to compile a regular expression, as follows:"
msgstr ""

#: ../source/reference/operator/query/not.txt:71
# 09298c9d003b4a7c8cfd549fd9db8559
msgid ":method:`~db.collection.find()`, :method:`~db.collection.update()`, :update:`$set`, :query:`$gt`, :query:`$regex`, :api:`PyMongo <python\\current>`, :term:`driver`."
msgstr ""

