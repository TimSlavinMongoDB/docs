# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/regex.txt:3
# 58e38f4889434547a90a73b012b32fb4
msgid "$regex"
msgstr ""

#: ../source/reference/operator/query/regex.txt:9
# ff3bce252ede47f3936457b1ab8c23c1
msgid "The :query:`$regex` operator provides regular expression capabilities for pattern matching *strings* in queries. MongoDB uses Perl compatible regular expressions (i.e. \"PCRE.\")"
msgstr ""

#: ../source/reference/operator/query/regex.txt:13
# f1f03c854a0e4603bc2b75975020cef0
msgid "You can specify regular expressions using regular expression objects or using the :query:`$regex` operator. The following examples are equivalent:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:22
# 5419713249f04248a85e0bed1238dac4
msgid "These expressions match all documents in ``collection`` where the value of ``field`` matches the case-insensitive regular expression ``acme.*corp``."
msgstr ""

#: ../source/reference/operator/query/regex.txt:26
# a145f6eee6b7450fb5d2ead457854a63
msgid ":query:`$regex` uses \"Perl Compatible Regular Expressions\" (PCRE) as the matching engine."
msgstr ""

#: ../source/reference/operator/query/regex.txt:31
# 463dedb99f4043e6b5bb6be01d424bab
msgid ":query:`$regex` provides four option flags:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:33
# c1d25fe1b2414d598623408b4f8fa049
msgid "``i`` toggles case insensitivity, and allows all letters in the pattern to match upper and lower cases."
msgstr ""

#: ../source/reference/operator/query/regex.txt:36
# 47a1f91c39864bf19e93f425800c81d0
msgid "``m`` toggles multiline regular expression. Without this option, all regular expression match within one line."
msgstr ""

#: ../source/reference/operator/query/regex.txt:39
# ca45ce50a35c4cbcb34506b7975a64f5
msgid "If there are no newline characters (e.g. ``\\n``) or no start/end of line construct, the ``m`` option has no effect."
msgstr ""

#: ../source/reference/operator/query/regex.txt:42
# bd8afe3238a646abb631555c7eb51c7c
msgid "``x`` toggles an \"extended\" capability. When set, :query:`$regex` ignores all white space characters unless escaped or included in a character class."
msgstr ""

#: ../source/reference/operator/query/regex.txt:46
# 83bdbcc5ab2c4b5bae014b7a4c729bbb
msgid "Additionally, it ignores characters between an un-escaped ``#`` character and the next new line, so that you may include comments in complicated patterns. This only applies to data characters; white space characters may never appear within special character sequences in a pattern."
msgstr ""

#: ../source/reference/operator/query/regex.txt:52
# 5258e7cae415447a9c843c300f0015ab
msgid "The ``x`` option does not affect the handling of the VT character (i.e. code 11.)"
msgstr ""

#: ../source/reference/operator/query/regex.txt:57
# b08ad593d94642ebbeef1b6449c2b4bd
msgid "``s`` allows the dot (e.g. ``.``) character to match all characters *including* newline characters."
msgstr ""

#: ../source/reference/operator/query/regex.txt:60
# 4b79113797024ba684048629728e8e2e
msgid ":query:`$regex` only provides the ``i`` and ``m`` options for the native JavaScript regular expression objects (e.g. ``/acme.*corp/i``). To use ``x`` and ``s`` you must use the \":query:`$regex`\" operator with the \":operator:`$options`\" syntax."
msgstr ""

#: ../source/reference/operator/query/regex.txt:65
# 18ee20d037d5497a96e217a2fbb2e27b
msgid "To combine a regular expression match with other operators, you need to use the \":query:`$regex`\" operator. For example:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:72
# 3542061fb5e6481a865148a3edb116ac
msgid "This expression returns all instances of ``field`` in ``collection`` that match the case insensitive regular expression ``acme.*corp`` that *don't* match ``acmeblahcorp``."
msgstr ""

#: ../source/reference/operator/query/regex.txt:76
# f14c78c678db4d079bf3fcdd7a830f80
msgid ":query:`$regex` can only use an :term:`index <index>` efficiently when the regular expression has an anchor for the beginning (i.e. ``^``) of a string and is a case-sensitive match.  Additionally, while ``/^a/``, ``/^a.*/``, and ``/^a.*$/`` match equivalent strings, they have different performance characteristics. All of these expressions use an index if an appropriate index exists; however, ``/^a.*/``, and ``/^a.*$/`` are slower. ``/^a/`` can stop scanning after matching the prefix."
msgstr ""

