# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/repairDatabase.txt:3
# de523a806fbf4d9297bbee84e9a470b6
msgid "repairDatabase"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:12
# ef50e86b115e44c990ece0c66f637401
msgid "Definition"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:16
# e559cbfd5c7b4956b1e8c14a26e67d5b
msgid "Checks and repairs errors and inconsistencies in data storage. :dbcommand:`repairDatabase` is analogous to a ``fsck`` command for file systems. Run the :dbcommand:`repairDatabase` command to ensure data integrity after the system experiences an unexpected system restart or crash, if:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:22
# 44361e19d870404d9ace8cd2af34df42
msgid "The :program:`mongod` instance is not running with :term:`journaling <journal>` enabled."
msgstr ""

#: ../source/includes/note-repair.rst:1
# 941ab2e44af74298919a216305c293e8
msgid "When using :term:`journaling <journal>`, there is almost never any need to run :dbcommand:`repairDatabase`. In the event of an unclean shutdown, the server will be able restore the data files to a pristine state automatically."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:27
# a464f13f4e764fc6afb0be53ced6891a
msgid "There are *no* other intact :term:`replica set` members with a complete data set."
msgstr ""

#: ../source/includes/warning-repair.rst:3
# 6e9569276c8e41838ad0eb98c717a9fa
msgid "During normal operations, only use the :dbcommand:`repairDatabase` command and wrappers including :method:`db.repairDatabase()` in the :program:`mongo` shell and :option:`mongod --repair`, to compact database files and/or reclaim disk space. Be aware that these operations remove and do not save any corrupt data during the repair process."
msgstr ""

#: ../source/includes/warning-repair.rst:10
# 02ca32aa049f4e7fb4ebbfab2cee1a47
msgid "If you are trying to repair a :term:`replica set` member, and you have access to an intact copy of your data (e.g. a recent backup or an intact member of the :term:`replica set`), you should restore from that intact copy, and **not** use :dbcommand:`repairDatabase`."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:32
# 39c60c72b04843b185ed98c543243e2b
msgid ":dbcommand:`repairDatabase` takes the following form:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:38
# a78d9963a4d349a9b749749b59174cf7
msgid ":dbcommand:`repairDatabase` has the following fields:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:42
# 8d8db7eb7d4d4c22a7b2403372ee4de3
msgid "You can explicitly set the options as follows:"
msgstr ""

#: ../source/includes/warning-blocking-global.rst:3
# 6b9480de95b14cabbbc3940955b9988b
msgid "This command obtains a global write lock and will block other operations until it has completed."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:52
# 61011b6a80ff477cafb163ce084bd419
msgid ":dbcommand:`repairDatabase` requires free disk space equal to the size of your current data set plus 2 gigabytes. If the volume that holds dbpath lacks sufficient space, you can mount a separate volume and use that for the repair. When mounting a separate volume for :dbcommand:`repairDatabase` you must run :dbcommand:`repairDatabase` from the command line and use the :option:`--repairpath <mongod --repairpath>` switch to specify the folder in which to store temporary repair files."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:62
# 92935ccdfa114899a7250e8366f48793
msgid "See :option:`mongod --repair` and :option:`mongodump --repair` for information on these related options."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:66
# 36620a7f9877409aa6692161ec9e1a74
msgid "Behavior"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:68
# d83169d8c6094c0e91d02fc894f7feb1
msgid "The :dbcommand:`repairDatabase` command compacts all collections in the database. It is identical to running the :dbcommand:`compact` command on each collection individually."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:72
# 9cf2c7ff34e248cebcf25499f77f6673
msgid ":dbcommand:`repairDatabase` reduces the total size of the data files on disk. It also recreates all indexes in the database."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:75
# eb5460a7c95642ad9fb60183cc602f49
msgid "The time requirement for :dbcommand:`repairDatabase` depends on the size of the data set."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:78
# 8028c23045534e5e882da7b21c527e79
msgid "You may invoke :dbcommand:`repairDatabase` from multiple contexts:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:80
# 392f97f01fe442f29c385a368b58049a
msgid "Use the :program:`mongo` shell to run the command, as above."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:82
# 819ddea977024909bf46a024c074f858
msgid "Use the :method:`db.repairDatabase()` in the :program:`mongo` shell."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:85
# 6dc8b434ed6c456696448df7f314d6f4
msgid "Run :program:`mongod` directly from your system's shell. Make sure that :program:`mongod` isn't already running, and that you invoke :program:`mongod` as a user that has access to MongoDB's data files. Run as:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:94
# b80d3538d39946c4bf5c7a5590156e94
msgid "To add a repair path:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:102
# 8203fa73278044a1b0ffef09546b16b0
msgid ":option:`mongod --repair <mongod --repair>` will fail if your database is not a master or primary. In most cases, you should recover a corrupt secondary using the data from an existing intact node. To run repair on a secondary/slave restart the instance in standalone mode without the :option:`--replSet <mongod --replSet>` or :option:`--slave <mongod --slave>` options."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:110
# f50b0b95cbc74615a4c53968a277a553
msgid "Example"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:117
# 885b05e6eae04999b94612ca810f6440
msgid "Using ``repairDatabase`` to Reclaim Disk Space"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:119
# 989062eedacf47fd95bce96d088059af
msgid "You should not use :dbcommand:`repairDatabase` for data recovery unless you have no other option."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:122
# b4700046efc8494899cc81301f757a04
msgid "However, if you trust that there is no corruption and you have enough free space, then :dbcommand:`repairDatabase` is the appropriate and the only way to reclaim disk space."
msgstr ""

