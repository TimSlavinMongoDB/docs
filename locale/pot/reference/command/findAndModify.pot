# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2013, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-16 16:05-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/findAndModify.txt:3
# 566ed2b5799e4ea0ab13c4d69797b41e
msgid "findAndModify"
msgstr ""

#: ../source/reference/command/findAndModify.txt:13
# 6c63b66af3f74b9e8fd046c6bec72d45
msgid "The :dbcommand:`findAndModify` command atomically modifies and returns a single document. By default, the returned document does not include the modifications made on the update. To return the document with the modifications made on the update, use the ``new`` option."
msgstr ""

#: ../source/reference/command/findAndModify.txt:19
# 8fc72a59c4d64414882de0ec673c4ec3
msgid "The command has the following syntax:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:34
# 5dfddfdabfaf460da5cbfc817b850104
msgid "The :dbcommand:`findAndModify` command takes the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:37
# 94945a394db34362a1935853956b5377
msgid "Required. The collection against which to run the command."
msgstr ""

#: ../source/reference/command/findAndModify.txt:41
# 8367ff8b3d7c49e8861c2bb8861d43bf
msgid "Optional. Specifies the selection criteria for the modification. The ``query`` field employs the same :ref:`query selectors <query-selectors>` as used in the :method:`~db.collection.find()` method. Although the query may match multiple documents, :dbcommand:`findAndModify` will only select one document to modify."
msgstr ""

#: ../source/reference/command/findAndModify.txt:50
# 8355b44177694247bbc6c8c6e45206fb
msgid "Optional. Determines which document the operation will modify if the query selects multiple documents. :dbcommand:`findAndModify` will modify the first document in the sort order specified by this argument."
msgstr ""

#: ../source/reference/command/findAndModify.txt:57
# 064d6c7f58d947d2ae7a87ee9f758601
msgid "Must specify either the ``remove`` or the ``update`` field in the :dbcommand:`findAndModify` command. When ``true``, removes the selected document. The default is ``false``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:63
# 87bc1c97515641a080e9f2f134d39851
msgid "Must specify either the ``remove`` or the ``update`` field in the :dbcommand:`findAndModify` command. The ``update`` field employs the same :ref:`update operators <update-operators>` or ``field: value`` specifications to modify the selected document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:70
# 7b4eaa587392484b9e7a9f6e8dd067a2
msgid "Optional. When ``true``, returns the modified document rather than the original. The :dbcommand:`findAndModify` method ignores the ``new`` option for ``remove`` operations. The default is ``false``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:77
# 3261d5444c19432d9c10df909cf8a292
msgid "Optional. A subset of fields to return. The ``fields`` document specifies an inclusion of a field with ``1``, as in the following:  .. code-block:: javascript     fields: { <field1>: 1, <field2>: 1, ... }  See :ref:`projection <read-operations-projection>`."
msgstr ""

#: ../source/reference/command/findAndModify.txt:79
# b512517b7cf3488da3e40bff6ed6692f
msgid "Optional. A subset of fields to return. The ``fields`` document specifies an inclusion of a field with ``1``, as in the following:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:87
# e4281c68c0af44ce90e54c62539f03ef
msgid "See :ref:`projection <read-operations-projection>`."
msgstr ""

#: ../source/reference/command/findAndModify.txt:89
# ce7dbc8540c04a46a41a71e29531d92f
msgid "Optional. Used in conjunction with the ``update`` field. When ``true``, the :dbcommand:`findAndModify` command creates a new document if the ``query`` returns no documents. The default is ``false``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:96
# 30fcebaf0d9d4ef1917ce91981280e42
msgid "The :dbcommand:`findAndModify` command returns a document, similar to the following:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:114
# eb89a18aa0ff4286a5f1e2ea0c1dd8dc
msgid "The return document contains the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:116
# b278080377f84c989545fb63f6e76341
msgid "The ``lastErrorObject`` field that returns the details of the command:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:119
# 65a8f3ac46564f48bb93727b181b19a4
msgid "The ``updatedExisting`` field **only** appears if the command is either an ``update`` or an ``upsert``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:122
# a4903db376d7414783c2b99397e1ed1d
msgid "The ``upserted`` field **only** appears if the command is an ``upsert``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:125
# c946e63738464a86abc1b6851068e99e
msgid "The ``value`` field that returns either:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:127
# 96d5fc318cdb4f52999a3904430eb79c
msgid "the original (i.e. pre-modification) document if ``new`` is false, or"
msgstr ""

#: ../source/reference/command/findAndModify.txt:130
# e4b0129785104040ad10be7e4fc5188c
msgid "the modified or inserted document if ``new: true``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:132
# 956d962a4698470fb3e65d91af6b8870
msgid "The ``ok`` field that returns the status of the command."
msgstr ""

#: ../source/reference/command/findAndModify.txt:136
# 0387c52b15c44e1ea923ffee65df4c3d
msgid "If the :dbcommand:`findAndModify` finds no matching document, then:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:139
# 8d4db0289a9042c3b52e136deb12f859
msgid "for ``update`` or ``remove`` operations, ``lastErrorObject`` does not appear in the return document and the ``value`` field holds a ``null``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:147
# a97a7c75cd834049b07d182976f22ab1
msgid "for an ``upsert`` operation that performs an insert, when ``new`` is ``false``, **and** includes a ``sort`` option, the return document has ``lastErrorObject``, ``value``, and ``ok`` fields, but the ``value`` field holds an empty document ``{}``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:153
# a06bd878d4c1402c9bc0628a64936963
msgid "for an ``upsert`` that performs an insert, when ``new`` is ``false`` **without** a specified ``sort`` the return document has ``lastErrorObject``, ``value``, and ``ok`` fields, but the ``value`` field holds a ``null``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:158
# e0552f0f9138401a861d8e98dc092b58
msgid "Previously, the command returned an empty document (e.g. ``{}``) in the ``value`` field. See :ref:`the 2.2 release notes <2.2-findandmodify-returns-null>` for more information."
msgstr ""

#: ../source/reference/command/findAndModify.txt:163
# 8884e83e73c9451998b99f47654e92d7
msgid "Consider the following examples:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:165
# 7364ec578af346ec876bae23edd2c0a8
msgid "The following command updates an existing document in the ``people`` collection where the document matches the ``query`` criteria:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:180
# 5960ce5243f34b6dbedc124c835f9ba4
msgid "This command performs the following actions:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:182
# f891cf81d1fb40bc8e649ce7d8bc1cba
msgid "The ``query`` finds a document in the ``people`` collection where the ``name`` field has the value ``Tom``, the ``state`` field has the value ``active`` and the ``rating`` field has a value :operator:`greater than <$gt>` 10."
msgstr ""

#: ../source/reference/command/findAndModify.txt:187
# fdf58d3795d34bed92dc6857695adaac
msgid "The ``sort`` orders the results of the query in ascending order. If multiple documents meet the ``query`` condition, the command will select for modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:192
# 0dc3f8aff8d34ecda8d716215100e828
msgid "The ``update`` :operator:`increments <$inc>` the value of the ``score`` field by 1."
msgstr ""

#: ../source/reference/command/findAndModify.txt:195
# ec38e8df140d4f6287751e64e8e68f1f
msgid "The command returns a document with the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:197
# ba04ba9b7d14470b9a08015bc871a3c3
msgid "The ``lastErrorObject`` field that contains the details of the command, including the field ``updatedExisting`` which is ``true``, and"
msgstr ""

#: ../source/reference/command/findAndModify.txt:201
# e4199ba391a047fdbb707bae63ac6e12
msgid "The ``value`` field that contains the original (i.e. pre-modification) document selected for this update:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:224
# 2c42848fc3da46f6bc1c9f666ce03071
msgid "To return the modified document in the ``value`` field, add the ``new:true`` option to the command."
msgstr ""

#: ../source/reference/command/findAndModify.txt:227
# 47275c9bd8c84355ac9f4bdf4f978472
msgid "If no document match the ``query`` condition, the command returns a document that contains ``null`` in the ``value`` field:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:235
# 8006ae8cc21649bcb90ba3f545086dde
msgid "The :program:`mongo` shell and many :term:`drivers <driver>` provide a :method:`~db.collection.findAndModify()` helper method. Using the shell helper, this previous operation can take the following form:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:248
# cff85a6f012a4f099e4a8458e20e90fe
msgid "However, the :method:`~db.collection.findAndModify()` shell helper method returns just the unmodified document, or the modified document when ``new`` is ``true``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:262
# ade90f5a93e54c859a1b95e31ca8956e
msgid "The following :dbcommand:`findAndModify` command includes the ``upsert: true`` option to insert a new document if no document matches the ``query`` condition:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:278
# 0688290128ab4c108f31e9e3a7f67b37
msgid "If the command does **not** find a matching document, the command performs an upsert and returns a document with the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:282
# a85148fae88c4a23956283d6f0ec7694
msgid "The ``lastErrorObject`` field that contains the details of the command, including the field ``upserted`` that contains the ``ObjectId`` of the newly inserted document, and"
msgstr ""

#: ../source/reference/command/findAndModify.txt:286
# 22152b52e2bc4dc988895c755d67a558
msgid "The ``value`` field that contains an empty document ``{}`` as the original document because the command included the ``sort`` option:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:307
# d46a59a1c4a14d018c565a23d0c0837a
msgid "If the command did **not** include the ``sort`` option, the ``value`` field would contain ``null``:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:322
# 77a311b1a556481e9631eea54ae08df6
msgid "The following :dbcommand:`findAndModify` command includes both ``upsert: true`` option and the ``new:true`` option to return the newly inserted document in the ``value`` field if a document matching the ``query`` is not found:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:340
# 9e8f24562cdd4d0db6fb37bf087ffbf4
msgid "The command returns the newly inserted document in the ``value`` field:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:364
# 426c2041de2a4533896129b3461057a3
msgid "When the :dbcommand:`findAndModify` command includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the method could insert a document multiple times in certain circumstances. For instance, if multiple clients issue the :dbcommand:`findAndModify` command and these commands complete the ``find`` phase before any one starts the ``modify`` phase, these commands could insert the same document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:372
# 5d5d66322c6c4aa9b3e9ae3a12410938
msgid "Consider an example where no document with the name ``Andy`` exists and multiple clients issue the following command:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:387
# ec0ac30d290448e38a2354d5780bf63d
msgid "If all the commands finish the ``query`` phase before any command starts the ``modify`` phase, **and** there is no unique index on the ``name`` field, the commands may all perform an upsert. To prevent this condition, create a :ref:`unique index <index-type-unique>` on the ``name`` field. With the unique index in place, then the multiple :dbcommand:`findAndModify` commands would observe one of the following behaviors:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:395
# eedf9a6aa96a4888a1380aa1b5baf1ed
msgid "Exactly one :dbcommand:`findAndModify` would successfully insert a new document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:398
# cdd25d17c1594619991219d909984c02
msgid "Zero or more :dbcommand:`findAndModify` commands would update the newly inserted document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:401
# 6521022d70894673a02b5f1c4b3ec504
msgid "Zero or more :dbcommand:`findAndModify` commands would fail when they attempted to insert a duplicate. If the command fails due to a unique index constraint violation, you can retry the command. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/reference/command/findAndModify.txt:408
# a0eec2c89941433fae484259dd1913f4
msgid "When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` environment, the ``query`` must contain the :term:`shard key` for all operations against the shard cluster. :dbcommand:`findAndModify` operations issued against :program:`mongos` instances for non-sharded collections function normally."
msgstr ""

#: ../source/reference/command/findAndModify.txt:417
# f079bc2a400e4433ac60dd0d0c216c0b
msgid "This command obtains a write lock on the affected database and will block other operations until it has completed; however, typically the write lock is short lived and equivalent to other similar :method:`~db.collection.update()` operations."
msgstr ""

