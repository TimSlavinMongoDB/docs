# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-24 10:20-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/meta/build.txt:3
# 444be42b4c8340faacbec4f10dddcb44
msgid "MongoDB Documentation Build System"
msgstr ""

#: ../source/meta/build.txt:5
# 7fb35695a5874de8be141bc3e0b45bdb
msgid "This document contains more direct instructions for building the MongoDB documentation."
msgstr ""

#: ../source/meta/build.txt:9
# da4c6a0e54a44672855d6346a8c652e0
msgid "Getting Started"
msgstr ""

#: ../source/meta/build.txt:12
# 70d5d3886c5d47bf894c58799b99de6c
msgid "Install Dependencies"
msgstr ""

#: ../source/meta/build.txt:14
# b3de47b06351438c9dcb7aa1107855ee
msgid "The MongoDB Documentation project depends on the following tools:"
msgstr ""

#: ../source/meta/build.txt:16
# a1d16ee513a34075b9315ab6bd282f6b
msgid "GNU Make"
msgstr ""

#: ../source/meta/build.txt:17
# 4aad500f2e3b45e494294e7309832073
msgid "GNU Tar"
msgstr ""

#: ../source/meta/build.txt:18
# 250a58c463704515abd477342434e890
msgid "Python"
msgstr ""

#: ../source/meta/build.txt:19
# 1884d18fc4df4b8ca1a5a4d8c423644f
msgid "Git"
msgstr ""

#: ../source/meta/build.txt:20
# 39bd39be40734c7b9ad9ffe27261f5a6
msgid "Sphinx (documentation management toolchain)"
msgstr ""

#: ../source/meta/build.txt:21
# 4e08c7c69da54c40b847f25c46ad4fc9
msgid "Pygments (syntax highlighting)"
msgstr ""

#: ../source/meta/build.txt:22
# 749cfcb0f4734aacbe276a5d3af0439b
msgid "PyYAML (for the generated tables)"
msgstr ""

#: ../source/meta/build.txt:23
# e4be25642be14baa8b290a865afb6481
msgid "Droopy (Python package for static text analysis)"
msgstr ""

#: ../source/meta/build.txt:24
# 80193b72420d4109ab346661f8861b33
msgid "Fabric (Python package for scripting and orchestration)"
msgstr ""

#: ../source/meta/build.txt:25
# 09d2e4f427f042219de16ad0ca66f1e7
msgid "Inkscape (Image generation.)"
msgstr ""

#: ../source/meta/build.txt:26
# b1af0384a7974b60a08b72ff85103f29
msgid "python-argparse (For Python 2.6.)"
msgstr ""

#: ../source/meta/build.txt:27
# ac1574748aa5481d84202939aee23c92
msgid "LaTeX/PDF LaTeX (typically texlive; for building PDFs)"
msgstr ""

#: ../source/meta/build.txt:28
# 4c172f338d7c4c0584ee0f70c27c85b3
msgid "Common Utilities (rsync, tar, gzip, sed)"
msgstr ""

#: ../source/meta/build.txt:31
# a9575d35aa7f402c8ec6e083f46ab5c6
msgid "OS X"
msgstr ""

#: ../source/meta/build.txt:33
# 9cbb0794bac644f69ca20aee433bd99b
msgid "Install Sphinx, Docutils, and their dependencies with ``easy_install`` the following command:"
msgstr ""

#: ../source/meta/build.txt:40
# 6b75b202512842519e35ac9fcae7f532
msgid "Feel free to use ``pip`` rather than ``easy_install`` to install python packages."
msgstr ""

#: ../source/meta/build.txt:43
# 74dbf2992a4a43a489c353bf636d410b
msgid "To generate the images used in the documentation, `download and install Inkscape <http://inkscape.org/download/>`_."
msgstr ""

#: ../source/meta/build.txt:0
#: ../source/meta/build.txt:0
#: ../source/meta/build.txt:0
# 819c696afe804b93ba62aa90ee7338a6
# eec357cc78cc46d0b3c8783704b6294b
# ca287bf1aa04486ca53b25aa58f72d88
msgid "Optional"
msgstr ""

#: ../source/meta/build.txt:48
# 8daf2061ce63478fb782a3181d16e701
msgid "To generate PDFs for the full production build, install a TeX distribution (for building the PDF.) If you do not have a LaTeX installation, use `MacTeX <http://www.tug.org/mactex/2011/>`_. This is **only** required to build PDFs."
msgstr ""

#: ../source/meta/build.txt:54
# 2a7ed2973ff8498cb9a6c6016643760c
msgid "Arch Linux"
msgstr ""

#: ../source/meta/build.txt:56
# b57a0e4578bc4aaba89d4bb466569c67
msgid "Install packages from the system repositories with the following command:"
msgstr ""

#: ../source/meta/build.txt:62
#: ../source/meta/build.txt:86
# fb354791a56c49c29087161e0827a512
# 40f42c993b7d4920b38608e5979c3066
msgid "Then install the following Python packages:"
msgstr ""

#: ../source/meta/build.txt:70
#: ../source/meta/build.txt:94
# 4e5dd74ad79244ca9b968a0b3e71af9b
# ebcc644b734d4b6ba585b328b1f74f4c
msgid "To generate PDFs for the full production build, install the following packages from the system repository:"
msgstr ""

#: ../source/meta/build.txt:78
# 9a2c32f5feef4ddb9cea3451d2d0af72
msgid "Debian/Ubuntu"
msgstr ""

#: ../source/meta/build.txt:80
# fc26e80209bd40879689f200a48c3e73
msgid "Install the required system packages with the following command:"
msgstr ""

#: ../source/meta/build.txt:102
# 8797e62589b44a578c199600a18dcada
msgid "Setup and Configuration"
msgstr ""

#: ../source/meta/build.txt:104
# c6241ea000404355b58df2eb67e0e5c9
msgid "Clone the repository:"
msgstr ""

#: ../source/meta/build.txt:110
# 75fc6938fcbb4560af9476312a2136b0
msgid "Then run the ``bootstrap.py`` script in the ``docs/`` repository, to configure the build dependencies:"
msgstr ""

#: ../source/meta/build.txt:117
# 0e3e5bec944b41878ae481a7843f0b5f
msgid "This downloads and configures the `mongodb/docs-tools <http://github.com/mongodb/docs-tools/>`_ repository, which contains the authoritative build system shared between branches of the MongoDB Manual and other MongoDB documentation projects."
msgstr ""

#: ../source/meta/build.txt:122
# 037378695c4747039f58f087b32fb9bd
msgid "You can run ``bootstrap.py`` regularly to update build system."
msgstr ""

#: ../source/meta/build.txt:125
# dfbd18e8e151449080161fabeddd8fc0
msgid "Building the Documentation"
msgstr ""

#: ../source/meta/build.txt:127
# 8b5cbe401d2b4b21a16efcdf7fced338
msgid "The MongoDB documentation build system is entirely accessible via ``make`` targets. For example, to build an HTML version of the documentation issue the following command:"
msgstr ""

#: ../source/meta/build.txt:135
# 1507b63da4084e5ba4988d911e309084
msgid "You can find the build output in ``build/<branch>/html``, where ``<branch>`` is the name of the current branch."
msgstr ""

#: ../source/meta/build.txt:138
# 48f75272d4444c3cb61c1bb3114894af
msgid "In addition to the ``html`` target, the build system provides the following targets:"
msgstr ""

#: ../source/meta/build.txt:145
# 1d5a0b48ad234982a968cc818c5d1b91
msgid "``publish``"
msgstr ""

#: ../source/meta/build.txt:142
# c8422e1e5fb0464fb3069ebc6744c326
msgid "Builds and integrates all output for the production build. Build output is in ``build/public/<branch>/``. When you run ``publish`` in the ``master``, the build will generate some output in ``build/public/``."
msgstr ""

#: ../source/meta/build.txt:150
# 93d39d6fc6c14b5ba2dc42a5e3a5bb69
msgid "``push``; ``stage``"
msgstr ""

#: ../source/meta/build.txt:148
# 5a4a965d61ac4e9598bd74c291979ab3
msgid "Uploads the production build to the production or staging web servers. Depends on ``publish``. Requires access production or staging environment."
msgstr ""

#: ../source/meta/build.txt:154
# feaabb4f2469430282266212f08b0249
msgid "``push-all``; ``stage-all``"
msgstr ""

#: ../source/meta/build.txt:153
# fc9851523c9d4e0fabc994926bda2637
msgid "Uploads the entire content of ``build/public/`` to the web servers. Depends on ``publish``. Not used in common practice."
msgstr ""

#: ../source/meta/build.txt:158
# 6ff1ecdea2614950a69ca312be5ab738
msgid "``push-with-delete``; ``stage-with-delete``"
msgstr ""

#: ../source/meta/build.txt:157
# 6d6b0109b1184b45888dca95ceb7eddd
msgid "Modifies the action of ``push`` and ``stage`` to remove remote file that don't exist in the local build. Use with caution."
msgstr ""

#: ../source/meta/build.txt:171
# 31ef79a8c32841c2bc7338ece3913693
msgid "``html``; ``latex``; ``dirhtml``; ``epub``; ``texinfo``; ``man``; ``json``"
msgstr ""

#: ../source/meta/build.txt:161
# 3392717af0a74b62a301a969d97ffbfb
msgid "These are standard targets derived from the default Sphinx Makefile, with adjusted dependencies. Additionally, for all of these targets you can append ``-nitpick`` to increase Sphinx's verbosity, or ``-clean`` to remove all Sphinx build artifacts."
msgstr ""

#: ../source/meta/build.txt:166
# f25a816ad70446148af9dc0e300549e7
msgid "``latex`` performs several additional post-processing steps on ``.tex`` output generated by Sphinx. This target will also compile PDFs using ``pdflatex``."
msgstr ""

#: ../source/meta/build.txt:170
# 6c97419dd5b040d784caefbb3ff54792
msgid "``html`` and ``man`` also generates a ``.tar.gz`` file of the build outputs for inclusion in the final releases."
msgstr ""

#: ../source/meta/build.txt:174
# 62857a10c35946c8a4e44c916a7149ae
msgid "Build Mechanics and Tools"
msgstr ""

#: ../source/meta/build.txt:176
# 24ca9c8067b04b97b498abb8736b804a
msgid "Internally the build system has a number of components and processes. See the `docs-tools README <https://github.com/mongodb/docs-tools/blob/master/README.rst>`_ for more information on the internals. This section documents a few of these components from a very high level and lists useful operations for contributors to the documentation."
msgstr ""

#: ../source/meta/build.txt:186
# 6a2a54cc1f6a41cebad16fa285baed63
msgid "Fabric"
msgstr ""

#: ../source/meta/build.txt:188
# 05cb09a8bf5f417a9108866ca1671809
msgid "Fabric is an orchestration and scripting package for Python. The documentation uses Fabric to handle the deployment of the build products to the web servers and also unifies a number of independent build operations. Fabric commands have the following form:"
msgstr ""

#: ../source/meta/build.txt:197
# 55fe0aac85124462b4d70671b70a3934
msgid "The ``<argument>`` is optional in most cases. Additionally some tasks are available at the root level, without a module. To see a full list of fabric tasks, use the following command:"
msgstr ""

#: ../source/meta/build.txt:205
# 834d534663ba4296a2ddfa01ce7354f3
msgid "You can chain fabric tasks on a single command line, although this doesn't always make sense."
msgstr ""

#: ../source/meta/build.txt:208
# ee7f3ead669f427db3a7e390cf0356db
msgid "Important fabric tasks include:"
msgstr ""

#: ../source/meta/build.txt:212
# c0ec4502d0df445abab224de9748e04b
msgid "``tools.bootstrap``"
msgstr ""

#: ../source/meta/build.txt:211
# 502437aaad7c4c7a9d7a59e04c7882c8
msgid "Runs the ``bootstrap.py`` script. Useful for re-initializing the repository without needing to be in root of the repository."
msgstr ""

#: ../source/meta/build.txt:218
# 5a56cb2326b44944901a14aa36dec445
msgid "``tools.dev``; ``tools.reset``"
msgstr ""

#: ../source/meta/build.txt:215
# 38421993e98e44e8bc2a6b837b6d1861
msgid "``tools.dev`` switches the ``origin`` remote of the ``docs-tools`` checkout in ``build`` directory, to ``../docs-tools`` to facilitate build system testing and development. ``tools.reset`` resets the ``origin`` remote for normal operation."
msgstr ""

#: ../source/meta/build.txt:222
# 06215fc46340496e9099c6da24deb19c
msgid "``tools.conf``"
msgstr ""

#: ../source/meta/build.txt:221
# 95e648fe2c294c408f3208fc10018c92
msgid "``tools.conf`` returns the content of the configuration object for the current project. These data are useful during development."
msgstr ""

#: ../source/meta/build.txt:226
# 8e04797de0b446b9971b03f9dc4cf67e
msgid "``stats.report:<filename>``"
msgstr ""

#: ../source/meta/build.txt:225
# b491ae0228f64c9497bd34803bb1a816
msgid "Returns, a collection of readability statistics. Specify file names relative to ``source/`` tree."
msgstr ""

#: ../source/meta/build.txt:230
# 02168eda05a54a959d45fb747d38eeea
msgid "``make``"
msgstr ""

#: ../source/meta/build.txt:229
# d2f3e8de253d4e359727f7c3bb53e092
msgid "Provides a thin wrapper around Make calls. Allows you to start make builds from different locations in the project repository."
msgstr ""

#: ../source/meta/build.txt:235
# 3c211c1231cf4f97b6e06e5dead9fb3b
msgid "``process.refresh_dependencies``"
msgstr ""

#: ../source/meta/build.txt:233
# 7cbb3fdf36104a2d8dab20ab009d3893
msgid "Updates the time stamp of ``.txt`` source files with changed include files, to facilitate Sphinx's incremental rebuild process. This task runs internally as part of the build process."
msgstr ""

#: ../source/meta/build.txt:238
# 44a4997e8dd4403e92a63e8a7f92188c
msgid "Buildcloth"
msgstr ""

#: ../source/meta/build.txt:240
# ae5cc376730742d6bd7083ae42daa7a6
msgid "`Buildcloth <https://pypi.python.org/pypi/buildcloth/>`_ is a meta-build tool, used to generate Makefiles programmatically. This makes the build system easier to maintain, and makes it easier to use the same fundamental code to generate various branches of the Manual as well as related documentation projects. See `makecloth/ in the docs-tools repository <https://github.com/mongodb/docs-tools/tree/master/makecloth>`_ for the relevant code."
msgstr ""

#: ../source/meta/build.txt:249
# 8141002dedbe466db42fd844ff93b1d1
msgid "Running ``make`` with no arguments will regenerate these parts of the build system automatically."
msgstr ""

#: ../source/meta/build.txt:253
# d8c74669929948d7b0a27f056984fa7c
msgid "Rstcloth"
msgstr ""

#: ../source/meta/build.txt:255
# 88e20658b43e49dc8f2a1aa5af66be1f
msgid "`Rstcloth <https://pypi.python.org/pypi/rstcloth>`_ is a library for generating reStructuredText programmatically. This makes it possible to generate content for the documentation, such as tables, tables of contents, and API reference material programmatically and transparently. See `rstcloth/ in the docs-tools repository <https://github.com/mongodb/docs-tools/tree/master/rstcloth>`_ for the relevant code."
msgstr ""

