==========================
View Existing Access Roles
==========================

.. default-domain:: mongodb

MongoDB stores roles in the :data:`admin.system.roles` collection in the
``admin`` database. Each document in the collection contains the privileges
granted by a specific role.

To view a role you must have the :authaction:`viewRole` action on the
role's database or have authenticated as a user explicitly granted the
role.

To view a role, use the :dbcommand:`rolesInfo` command:

.. code-block:: javascript

   { rolesInfo: <role> }

For example, to view the system :authrole:`readWrite` role issue the
following command from the :program:`mongo` shell:

.. code-block:: javascript

   db.runCommand({ rolesInfo: "readWrite" })

Procedures
----------

View a Role in the Current Database
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If the role is in the current database, you can refer to the role
by name, as for the role ``dataEntry`` on the current database:

.. code-block:: javascript

   db.runCommand({ rolesInfo: "dataEntry" })

View a Role in a Different Database
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If the role is in a different database, specify the role as a document.
Use the following form:

.. code-block:: javascript

   { role: "<role name>", db: "<role db>" }

To view the custom ``appWriter`` role in the ``orders``
database, issue the following command from the :program:`mongo` shell:

.. code-block:: javascript

   db.runCommand({ rolesInfo: { role: "appWriter", db: "orders" } })

View Multiple Roles
~~~~~~~~~~~~~~~~~~~

To view information for multiple roles, specify each role as a document or
string in an array.

To view the custom ``appWriter`` and ``clientWriter`` roles
in the ``orders`` database, as well as the ``dataEntry`` role on the
current database, use the following command from the :program:`mongo`
shell:

.. code-block:: javascript

   db.runCommand( { rolesInfo: [ { role: "appWriter", db: "orders" },
                                 { role: "clientWriter", db: "orders" },
                                 "dataEntry" ]
                  } )

View All Custom Roles
~~~~~~~~~~~~~~~~~~~~~

To view the all custom roles, query :ref:`admin.system.roles
<admin-system-roles-collection>` collection directly, for example:

.. code-block:: javascript

   db = db.getSiblingDB('admin')
   db.system.roles.find()
