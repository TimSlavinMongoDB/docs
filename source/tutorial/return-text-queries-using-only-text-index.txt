:orphan:

===================================================
Create ``text`` Index to Cover ``filter`` Condition
===================================================

.. default-domain:: mongodb

.. deprecated:: 2.6
   :dbcommand:`$text` command is deprecated. The following procedure
   applies only to the deprecated :dbcommand:`$text` command in 2.4.

.. COMMENT
   Will remove/edit once behavior settled in 2.6 -- perhaps showing
   use cases when(if ever?) prefix with ``text`` is pref to suffix with ``text`` index fields
   and vise versa.

To create a ``text`` index that can :ref:`cover
<indexes-covered-queries>` the ``filter`` condition for
:dbcommand:`$text` command:

#. Append scalar index fields to a ``text`` index, as in the following
   example which specifies an ascending index key on ``username``:

   .. code-block:: javascript
      :emphasize-lines: 2

      db.collection.ensureIndex( { comments: "text",
                                   username: 1 } )

   .. warning::

      You cannot include :ref:`multi-key <index-type-multi-key>` index
      field or :ref:`geospatial <index-feature-geospatial>` index field.

#. Use the ``project`` option in the :dbcommand:`text` to return only
   the fields in the index, as in the following:

   .. code-block:: javascript
      :emphasize-lines: 2-4

      db.quotes.runCommand( "text", { search: "tomorrow", 
                                      project: { username: 1,
                                                 _id: 0
                                               } 
                                    }
                          )

.. note::

   By default, the ``_id`` field is included in the result set. Since
   the example index did not include the ``_id`` field, you must
   explicitly exclude the field in the ``project`` document.
