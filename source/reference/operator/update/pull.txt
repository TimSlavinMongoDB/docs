=====
$pull
=====

.. default-domain:: mongodb

.. update:: $pull

   The :update:`$pull` operator removes from an existing array all
   instances of a value or values that match a specified query.

   .. code-block:: javascript

      db.collection.update( <query>, 
                            { $pull: { <arrayField>: <query2> } }
                          )

   To specify the query to remove values from the array, use
   :doc:`query operators </reference/operator>`.

Examples
--------

Remove All Items That Equals a Specified Value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given the following documents in the ``cpuinfo`` collection: 

.. code-block:: javascript

   { _id: 1, flags: [ "vme", "de", "msr", "tsc", "pse", "msr" ] }
   { _id: 2, flags: [ "msr", "pse", "tsc" ] }

The following operation removes the value ``"msr"`` from the ``flags``
array in the documents where ``flags`` array contain the value ``"msr"``:

.. code-block:: javascript

   db.cpuinfo.update(
                      { flags: "msr" },
                      { $pull: { flags: "msr" } },
                      { multi: true }
                    )

After the operation, the updated documents have all instances of
``"msr"`` removed from the ``flags`` field:

.. code-block:: javascript

   { _id: 1, flags: [  "vme",  "de",  "tsc",  "pse" ] }
   { _id: 2, flags: [  "pse",  "tsc" ] }

Remove All Items Greater Than a Specified Value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given the following document in the ``profiles`` collection: 

.. code-block:: javascript

   { _id: 1, votes: [ 3, 5, 6, 7, 7, 8 ] }

The following operation will remove all items from the ``votes`` array
that are greater than (:query:`$gt`) ``6``:

.. code-block:: javascript

   db.profiles.update( { _id: 1 }, { $pull: { votes: { $gt: 6 } } } )

After the operation, the updated document only has values less than or
equal to 6 in the ``votes`` field :

.. code-block:: javascript

   { _id: 1, votes: [  3,  5,  6 ] }
