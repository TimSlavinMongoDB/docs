=========
$isolated
=========

.. default-domain:: mongodb

.. update:: $isolated

   The :update:`$isolated` isolation operator **isolates** a write
   operation that affects multiple documents so that once the first 
   document is changed the operation will not yield, to allow reads 
   or writes, until all documents are written. This significantly affects 
   the concurrency of the system as it holds the write lock much 
   longer than normal.

   .. note::

      The :update:`$isolated` isolation operator does **not** provide
      "all-or-nothing" atomicity for write operations.

   Consider the following example:

   .. code-block:: javascript

      db.foo.update( { field1 : 1 , $isolated : 1 }, { $inc : { field2 : 1 } } , { multi: true } )

   Without the :update:`$isolated` operator, multi-updates will allow
   other operations to interleave with these updates. By specifying :update:`$isolated` you
   can guarantee isolation for the entire multi-update so no other clients sees the 
   changes until the operation is finished (or errors -- see the note above).

   .. warning::

      :update:`$isolated` does not work with :term:`sharded clusters
      <sharded cluster>`.

   .. seealso:: See :method:`db.collection.update()` for more information about the
      :method:`db.collection.update()` method.

.. update:: $atomic

   .. deprecated:: 2.2
      The :update:`$isolated` operator replaces :operator:`$atomic`.
